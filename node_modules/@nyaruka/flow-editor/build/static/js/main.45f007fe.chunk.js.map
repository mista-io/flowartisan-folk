{"version":3,"sources":["components/simulator/Simulator.module.scss","components/translator/TranslatorTab.module.scss","components/simulator/LogEvent.module.scss","components/dialog/Dialog.module.scss","components/flow/exit/Exit.module.scss","components/simulator/ContextExplorer.module.scss","components/sticky/Sticky.module.scss","components/flow/node/Node.module.scss","components/shared.module.scss","components/flow/actions/action/Action.module.scss","components/flow/routers/case/CaseElement.module.scss","components/flow/routers/webhook/WebhookRouterForm.module.scss","components/revisions/RevisionExplorer.module.scss","components/flow/routers/localization/RouterLocalizationForm.module.scss","components/poptab/PopTab.module.scss","components/flow/routers/result/ResultRouterForm.module.scss","components/titlebar/TitleBar.module.scss","components/form/FormElement.module.scss","components/issues/IssuesTab.module.scss","components/flow/actions/sendmsg/attachments.module.scss","components/mediaplayer/MediaPlayer.module.scss","components/draghelper/DragHelper.module.scss","components/index.module.scss","components/flow/actions/sendmsg/SendMsg.module.scss","components/form/checkbox/CheckboxElement.module.scss","components/flow/routers/airtime/currency/CurrencyElement.module.scss","components/flow/routers/random/RandomRouterForm.module.scss","components/flow/routers/subflow/SubflowRouterForm.module.scss","components/button/Button.module.scss","components/pill/Pill.module.scss","components/flow/actions/sendbroadcast/SendBroadcast.module.scss","components/flow/routers/caselist/CaseList.module.scss","components/flow/routers/menu/MenuRouterForm.module.scss","components/form/timeout/TimeoutControl.module.scss","components/canvas/Canvas.module.scss","components/languageselector/LanguageSelector.module.scss","variables.module.scss","components/flow/actions/sendemail/SendEmailForm.module.scss","components/flow/actions/sendmsg/SendMsgForm.module.scss","components/flow/actions/setrunresult/SetRunResultForm.module.scss","components/flow/actions/startsession/StartSession.module.scss","components/counter/Counter.module.scss","components/mountscroll/MountScroll.module.scss","temba/TembaSelect.module.scss","components/form/textinput/TextInputElement.module.scss","components/flow/actions/addurn/AddURNForm.module.scss","components/flow/actions/saymsg/SayMsg.module.scss","components/flow/actions/transferairtime/TransferAirtime.module.scss","components/form/optionaltext/OptionalTextInput.module.scss","components/form/ValidationFailures.module.scss","components/flow/routers/field/FieldRouterForm.module.scss","components/canvas/CanvasDraggable.module.scss","static/images/map.jpg","components/form/assetselector/AssetSelector.module.scss","components/nodeeditor/TypeList.module.scss","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.module.scss","components/flow/actions/startsession/StartSessionForm.module.scss","components/flow/actions/updatecontact/UpdateContactForm.module.scss","components/flow/routers/airtime/AirtimeRouterForm.module.scss","components/flow/routers/digits/DigitsRouterForm.module.scss","components/flow/routers/resthook/ResthookRouterForm.module.scss","components/flow/routers/wait/WaitRouterForm.module.scss","components/flow/routers/classify/ClassifyRouterForm.module.scss","components/flow/routers/ticket/TicketRouterForm.module.scss","components/loading/Loading.module.scss","components/flow/Flow.module.scss","global.module.scss","flowTypes.ts","services/Localization.ts","components/button/Button.tsx","utils/index.tsx","components/dialog/Dialog.tsx","store/constants.ts","config/i18n/index.js","store/flowContext.ts","config/interfaces.ts","store/currencies.ts","external/index.ts","components/flow/actions/helpers.tsx","components/flow/props.ts","config/ConfigProvider.tsx","components/flow/actions/addlabels/AddLabels.tsx","temba/TembaSelect.tsx","components/form/FormElement.tsx","components/form/assetselector/helpers.ts","components/form/assetselector/AssetSelector.tsx","config/helpers.ts","components/nodeeditor/TypeList.tsx","store/validators.ts","store/nodeEditor.ts","components/flow/actions/addlabels/AddLabelsForm.tsx","components/flow/actions/addlabels/helpers.ts","components/flow/actions/addurn/helpers.ts","components/form/textinput/TextInputElement.tsx","components/flow/actions/addurn/AddURN.tsx","components/form/select/SelectElement.tsx","components/form/textinput/helpers.tsx","components/flow/actions/addurn/AddURNForm.tsx","components/flow/actions/callresthook/CallResthook.tsx","components/flow/actions/callwebhook/CallWebhook.tsx","components/flow/actions/changegroups/helpers.ts","components/flow/actions/changegroups/addgroups/AddGroupsForm.tsx","components/flow/actions/changegroups/addgroups/helpers.ts","components/flow/actions/changegroups/ChangeGroups.tsx","components/form/checkbox/CheckboxElement.tsx","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.tsx","components/flow/actions/changegroups/removegroups/helpers.ts","components/flow/helpers.ts","components/flow/actions/localization/KeyLocalizationForm.tsx","components/flow/actions/localization/helpers.ts","components/flow/actions/sendmsg/attachments.tsx","components/form/multichoice/MultiChoice.tsx","components/uploadbutton/UploadButton.tsx","components/pill/Pill.tsx","components/flow/actions/localization/MsgLocalizationForm.tsx","components/flow/actions/missing/Missing.tsx","components/flow/actions/playaudio/PlayAudio.tsx","components/flow/actions/playaudio/PlayAudioForm.tsx","components/flow/actions/playaudio/helpers.ts","components/mediaplayer/MediaPlayer.tsx","components/flow/actions/saymsg/SayMsg.tsx","components/flow/actions/saymsg/SayMsgForm.tsx","components/flow/actions/saymsg/helpers.ts","components/flow/actions/sendbroadcast/SendBroadcast.tsx","components/flow/actions/sendbroadcast/SendBroadcastForm.tsx","components/flow/actions/sendbroadcast/helpers.ts","components/flow/actions/sendemail/SendEmail.tsx","utils/reactselect.ts","components/form/select/tags/TaggingElement.tsx","components/flow/actions/sendemail/SendEmailForm.tsx","components/flow/actions/sendemail/helpers.ts","components/flow/actions/sendmsg/SendMsg.tsx","components/flow/actions/sendmsg/helpers.ts","components/flow/actions/sendmsg/SendMsgForm.tsx","components/flow/actions/setrunresult/SetRunResult.tsx","components/flow/actions/setrunresult/SetRunResultForm.tsx","components/flow/actions/setrunresult/helpers.ts","components/flow/actions/startflow/StartFlow.tsx","components/flow/actions/startsession/StartSession.tsx","components/flow/routers/constants.ts","components/flow/actions/startsession/StartSessionForm.tsx","components/flow/actions/startsession/helpers.ts","components/flow/actions/transferairtime/TransferAirtime.tsx","components/flow/actions/updatecontact/UpdateContact.tsx","components/helpers.ts","components/flow/routers/helpers.ts","components/flow/node/helpers.ts","store/mutators.ts","components/flow/actions/updatecontact/UpdateContactForm.tsx","components/flow/routers/airtime/currency/CurrencyElement.tsx","components/form/optionaltext/OptionalTextInput.tsx","components/flow/routers/widgets.tsx","components/form/ValidationFailures.tsx","components/flow/routers/airtime/helpers.ts","components/flow/routers/airtime/AirtimeRouterForm.tsx","components/flow/routers/dial/DialRouterForm.tsx","components/flow/routers/dial/helpers.ts","components/nodeeditor/constants.ts","config/operatorConfigs.ts","components/flow/routers/case/helpers.ts","components/flow/routers/case/CaseElement.tsx","components/flow/routers/caselist/helpers.ts","components/flow/routers/caselist/CaseList.tsx","config/index.ts","components/flow/routers/expression/ExpressionRouterForm.tsx","components/flow/routers/digits/DigitsRouterForm.tsx","components/flow/routers/digits/helpers.ts","components/flow/routers/field/FieldRouterForm.tsx","components/flow/routers/expression/helpers.ts","components/flow/routers/field/helpers.ts","components/flow/routers/groups/helpers.ts","components/flow/routers/localization/helpers.ts","components/flow/routers/groups/GroupsRouterForm.tsx","components/flow/routers/localization/RouterLocalizationForm.tsx","components/flow/routers/menu/helpers.ts","components/flow/routers/menu/MenuRouterForm.tsx","components/flow/routers/random/helpers.ts","components/flow/routers/random/RandomRouterForm.tsx","components/flow/routers/response/helpers.ts","components/flow/routers/response/ResponseRouterForm.tsx","components/form/timeout/TimeoutControl.tsx","components/flow/routers/resthook/helpers.ts","components/flow/routers/resthook/ResthookRouterForm.tsx","components/flow/routers/result/helpers.ts","components/flow/routers/result/ResultRouterForm.tsx","components/flow/routers/subflow/SubflowRouterForm.tsx","components/flow/routers/subflow/helpers.ts","components/flow/routers/wait/helpers.ts","components/flow/routers/webhook/helpers.ts","components/flow/routers/wait/WaitRouterForm.tsx","components/flow/routers/webhook/header/HeaderElement.tsx","components/flow/routers/webhook/WebhookRouterForm.tsx","components/flow/actions/callclassifier/CallClassifier.tsx","components/flow/routers/classify/helpers.ts","components/flow/routers/classify/ClassifyRouterForm.tsx","components/flow/routers/scheme/helpers.ts","components/flow/routers/scheme/SchemeRouterForm.tsx","components/flow/routers/ticket/helpers.ts","components/flow/routers/ticket/TicketRouterForm.tsx","components/flow/actions/openticket/OpenTicket.tsx","config/typeConfigs.ts","components/flow/actions/updatecontact/helpers.ts","store/editor.ts","store/thunks.ts","store/helpers.ts","components/canvas/CanvasDraggable.tsx","components/canvas/helpers.ts","components/canvas/Canvas.tsx","components/counter/Counter.tsx","components/titlebar/TitleBar.tsx","components/mountscroll/MountScroll.tsx","components/flow/actions/action/Action.tsx","components/simulator/LogEvent.tsx","components/draghelper/DragHelper.tsx","components/flow/exit/helpers.ts","components/loading/Loading.tsx","components/Portal.tsx","components/simulator/helpers.ts","components/modal/Modal.tsx","components/simulator/Simulator.tsx","components/simulator/ContextExplorer.tsx","components/poptab/PopTab.tsx","components/flow/exit/Exit.tsx","components/flow/node/Node.tsx","components/nodeeditor/NodeEditor.tsx","components/sticky/Sticky.tsx","services/Plumber.ts","utils/debug.ts","components/flow/Flow.tsx","components/translator/helpers.ts","components/languageselector/LanguageSelector.tsx","components/revisions/RevisionExplorer.tsx","components/issues/IssuesTab.tsx","store/rootReducer.ts","store/state.ts","store/createStore.ts","components/translator/TranslatorTab.tsx","components/index.tsx","serviceWorker.js","index.js"],"names":["module","exports","DependencyType","FlowIssueType","RouterTypes","WaitTypes","HintTypes","ContactProperties","ValueType","StartFlowArgs","StartFlowExitNames","WebhookExitNames","TransferAirtimeExitNames","DialCategoryNames","DialStatus","SPEC_VERSION","ButtonTypes","LocalizedObject","object","id","name","localizedKeys","localizedObject","localized","iso","language","this","key","value","Object","assign","Array","isArray","length","Localization","translations","uuid","values","keys","forEach","addTranslation","SNAKED_CHARS","GRID_SIZE","parseInt","variables","grid_size","NODE_SPACING","node_spacing","NODE_PADDING","node_padding","snapToGrid","left","top","leftAdjust","topAdjust","Math","max","snapPositionToGrid","position","right","bottom","snakify","toLowerCase","trim","replace","titleCase","str","s","charAt","toUpperCase","substr","hasErrorType","errors","exps","error","exp","match","createClickHandler","onClick","shouldCancelClick","onMouseDown","event","onMouseUp","getLocalization","obj","localization","translate","emphasize","text","className","ellipsize","renderIf","predicate","then","otherwise","isRealValue","undefined","set","val","$set","merge","$merge","unset","$unset","push","arr","$push","splice","$splice","createUUID","generateUUID","range","start","end","from","v","k","hasString","names","find","item","throttle","func","timeout","ready","setTimeout","onNextRender","fn","window","bool","prop","HeaderStyle","Button","props","state","active","bindCallbacks","include","setState","onRef","type","disabled","leftSpacing","topSpacing","iconName","ref","style","marginLeft","marginTop","handleMouseDown","handleMouseUp","styles","btn","paddingRight","React","Constants","Dialog","tabFocus","primaryButton","activeTab","index","foundTab","tabs","tab","hasErrors","shiftKey","preventDefault","stopPropagation","target","blur","click","focus","console","log","document","addEventListener","handleKey","capture","clearTimeout","removeEventListener","rightButtons","buttons","primary","secondary","tertiary","handlePrimaryButton","leftButtons","headerClasses","header","clickable","headerClass","shared","headerIcon","iconed","headerStyle","BARBER","barber","activeClasses","dialog","getButtons","join","map","evt","icon","tab_icon","checked","header_overlay","header_icon","title_container","title","subtitle","noPadding","content","body","children","footer","left_buttons","gutter","right_buttons","i18n","use","LanguageDetector","initReactI18next","init","detection","order","resources","defaults","translation","cs","es","fr","mn","ptBR","fallbackLng","interpolation","prefix","suffix","lowerCaseLng","AssetType","FlowTypes","ContactStatus","Types","Operators","FeatureFilter","PopTabType","REMOVE_VALUE_ASSET","Remove","t","DEFAULT_LANGUAGE","Language","initialState","definition","baseLanguage","metadata","dependencies","results","waiting_exit_uuids","parent_refs","contactFields","nodes","issues","assetStore","updateDefinition","UPDATE_DEFINITION","payload","updateNodes","UPDATE_NODES","updateIssues","UPDATE_ISSUES","updateMetadata","UPDATE_METADATA","updateAssets","assets","store","querySelector","setKeyedAssets","items","UPDATE_ASSET_MAP","combineReducers","action","UPDATE_BASE_LANGUAGE","UPDATE_CONTACT_FIELDS","currencies","ARS","Currency","AUD","BIF","BRL","CAD","CDF","CLP","COP","DJF","DOP","DZD","EUR","GBP","GHS","GNF","KES","LBP","LKR","LRD","MWK","MXN","NAD","NPR","NZD","PHP","PKR","RUB","RWF","SDG","SGD","SLL","SOS","SRD","SVC","TND","TRY","TZS","UGX","USD","UYU","UZS","VEF","XCD","YER","ZAR","ZMW","ZWL","MESSAGING","MESSAGING_BACKGROUND","MESSAGING_OFFLINE","VISIBILITY_MESSAGING_INTERACTIVE","VISIBILITY_VOICE","VOICE","VISIBILITY_ONLINE","VISIBILITY_INTERACTIVE","VISIBILITY_SURVEYOR","VISIBILITY_HIDDEN","NONE","axios","headers","post","responseType","saveRevision","endpoint","csrf","getCookie","patch","release","spec_version","split","Promise","resolve","reject","response","status","data","catch","cookie","idx","indexOf","fetchAsset","getAssets","asset","getAssetPage","url","get","result","resultToAsset","next","a","pageUrl","assetPage","concat","idKey","assetType","Flow","label","isMatch","input","shouldExclude","inputLower","includes","createAssetStore","endpoints","channels","getURL","Channel","classifiers","Classifier","languages","flows","fields","Field","globals","Global","groups","Group","revisions","Revision","labels","Label","Result","recipients","Contact","URN","resthooks","Resthook","templates","Template","ticketers","Ticketer","prefetched","fetches","storeId","assetListToMap","all","getFlowDetails","revisionToLoad","Error","details","path","endsWith","startsWith","location","protocol","hostname","port","getBaseURL","showHelpArticle","link","open","renderIssues","issueProps","helpArticles","padding","issue","num","node_uuid","action_uuid","margin","display","fontSize","color","marginRight","renderIssue","message","description","MISSING_DEPENDENCY","i18nKey","dependency","INVALID_REGEX","regex","LEGACY_EXTRA","article","issue_help","getActionUUID","nodeSettings","currentType","originalAction","getRecipients","selected","group","contacts","contact","missing","legacy_vars","expression","renderAssetList","reduce","elements","renderAsset","assetBody","node_group","node_label","e","href","editor","rel","node_asset","getAllErrors","entry","validationFailures","getExpressions","filter","getRecipientsByAsset","NAME_PROPERTY","Name","ContactProperty","CHANNEL_PROPERTY","LANGUAGE_PROPERTY","STATUS_PROPERTY","Status","fakePropType","isRequired","ConfigProvider","count","config","only","childContextTypes","assetService","AddLabelsComp","context","name_match","NameMatch","contextTypes","TembaSelectStyle","cx","classNames","bind","FormElement","showLabel","helpText","help_text","hideError","getValidationErrors","failure","send_msg_error","sendMsgError","arrow_up","error_list","getName","getHelpText","errorsToDisplay","getErrors","ele","border","invalid","__className","TembaSelect","selectbox","option","nameKey","valueKey","b","getValue","prevProps","options","setOptions","select","createPrefix","createArbitraryOption","sortFunction","resolved","tags","op","onChange","multi","focused","selectedArray","JSON","stringify","normal","data-testid","onFocus","cacheKey","expressions","hideErrors","placeholder","searchable","clearable","queryParam","sortByName","localeCompare","AssetSelector","lastCreation","defaultOptions","query","additionalOptions","search","matches","searchAssetMap","valueClearable","isLoading","toCreate","arbitrary","handleCreateOption","now","Date","getTime","createAssetFromInput","postNewAsset","onAssetCreated","non_field_errors","fallbackPlaceholder","toLocaleLowerCase","handleChanged","handleCreateArbitraryOption","nextProps","prevState","existing","isOnlineFlowType","flowType","filterVisibility","filters","visibility","findIndex","ft","TypeList","typeConfigs","initialType","handleChangeType","configsToDisplay","type_list","getTypeConfigs","mergeForm","form","toMerge","toRemove","updated","isEntry","hasOwnProperty","existingIdx","mutate","remove","removeKeys","valid","typeConfig","userAddingAction","settings","updateNodeEditorSettings","UPDATE_NODE_EDITOR_SETTINGS","updateUserAddingAction","UPDATE_USER_ADDING_ACTION","UPDATE_TYPE_CONFIG","REGEX_URL","RegExp","fromRegex","inputAsString","test","failures","validate","validators","allFailures","validateFunc","validation","Required","MoreThan","amount","checkName","parseFloat","shouldRequireIf","required","validateIf","HeaderName","headerUtils","MaxOfTenItems","StartIsNonNumeric","ValidURL","Numeric","Alphanumeric","NumOrExp","AddLabelsForm","add_input_labels","formState","handleLabelsChanged","newAction","updateAction","onClose","submitting","updates","handleSave","addAsset","onTypeChange","data-spec","handleCreateAssetFromInput","handleLabelCreated","Count","TextInputStyle","getSchemeObject","scheme","SCHEMES","getSchemeSelectOption","schemeToSelectOption","AddURNComp","schemeObject","schemeName","SelectElement","TextInputElement","initial","currentTarget","charCount","SMS","optional","textarea","counter","wrapper","handleChange","autocomplete","onInput","onBlur","maxLength","session","createTextInput","AddURNForm","add_contact_urn","initializeForm","handlePathChanged","alignItems","scheme_selection","handleSchemeChanged","CallResthookComp","resthook","CallWebhookComp","excludeDynamicGroups","AddGroupsForm","add_contact_groups","handleGroupsChanged","noOptionsMessage","handleGroupAdded","getContentMarkup","remove_contact_groups","specId","getRemoveAllMarkup","ChangeGroupsComp","getChangeGroupsMarkup","CheckboxElement","checkboxIcon","labelClassName","checkboxClassName","description_solo","LABEL","REMOVE_FROM_ALL","REMOVE_FROM_ALL_DESC","RemoveGroupsForm","removeAll","all_groups","groupValidators","handleUpdate","checkbox","handleRemoveAllUpdate","determineTypeConfig","renderNode","originalNode","node","getTypeConfig","actions","getType","router","hasIssues","translating","KeyLocalizationForm","keyValues","localizations","getObject","localizeableKeys","initializeLocalizedKeyForm","updateLocalizations","base","slice","translate_from","handleKeyUpdate","filePicker","MultiChoiceInput","currentInput","UploadButton","onUploadChanged","files","FormData","append","handleUploadFile","removeText","handleRemoveUpload","uploadText","Pill","substring","pillStyles","pill","large","data-advanced","advanced","TYPE_OPTIONS","NEW_TYPE_OPTIONS","renderAttachments","attachments","onUploaded","onAttachmentChanged","onAttachmentRemoved","renderedAttachments","attachment","uploaded","renderUpload","renderAttachment","emptyOption","onSuccess","url_attachment","type_choice","small","upload","remove_upload","MsgLocalizationForm","quickReplies","templateVariables","templating","audio","send_msg","say_msg","isLocalized","audio_url","quick_replies","attachmentString","splitPoint","initializeLocalizedForm","handleQuickRepliesUpdate","updatedText","hasLocalizedValue","variable","handleTemplateVariableChanged","handleAttachmentUploaded","handleAttachmentChanged","handleAttachmentRemoved","handleQuickReplyChanged","audioButton","handleAudioChanged","handleMessageUpdate","MissingComp","PlayAudioComp","PlayAudioForm","play_audio","handleAudioUpdate","MediaPlayer","stroke","radius","radiusNormalized","circumference","PI","durationSeconds","currentSeconds","playing","progress","currentTime","duration","ended","floor","triggered","handleTogglePlay","pause","load","play","strokeDashoffset","player","height","width","handleRef","onTimeUpdate","handleTimeUpdate","src","preload","circles","circle_background","fill","strokeWidth","r","cy","circle_foreground","strokeDasharray","button","PLACEHOLDER","SayMsgComp","recording","SayMsgForm","handleUploadChanged","SendBroadcastComp","to","line","SendBroadcastForm","send_broadcast","handleRecipientsChanged","SendEmailComp","subject","tagging","control","borderColor","boxShadow","transition","caretColor","marginBottom","multiValue","maxHeight","minHeight","lineHeight","backgroundColor","TaggingElement","tag","optionsToTags","onCheckValid","tagsToOptions","handleUpdateTags","isMulti","isSearchable","isValidNewOption","handleCheckValid","prompt","formatCreateLabel","createPrompt","Component","EMAIL_PATTERN","SendEmailForm","send_email","addresses","handleSubjectChanged","handleBodyChanged","SendMsgComp","replies","reply","template","whatsapp","topic","facebook","summary","TOPIC_OPTIONS","SendMsgForm","msgTemplate","quickReplyEntry","sendAll","all_urns","stateToForm","handleTemplateChanged","templatingUUID","stateToAction","templateTranslation","variable_count","hasUseableTranslation","handleTopicUpdate","handleShouldExcludeTemplate","formClearable","template_text","handleSendAllUpdate","hasFeature","HAS_WHATSAPP","renderTemplateConfig","HAS_FACEBOOK","renderTopicConfig","class","SetRunResultComp","getSavePlaceholder","getClearPlaceholder","SetRunResultForm","set_run_result","category","snaked","handleNameUpdate","resultFormat","handleValueUpdate","handleCategoryUpdate","StartFlowComp","flow","StartSessionComp","create_contact","contact_query","DefaultExitNames","START_TYPE_ASSETS","START_TYPE_CREATE","START_TYPE_QUERY","START_TYPE_OPTIONS","StartSessionForm","start_session","startType","contactQuery","handleStartTypeChanged","handleContactQueryChanged","handleFlowChanged","TransferAirtimeComp","transfer","amounts","code","require","withEmph","emph","renderSetText","emphasizeName","UpdateContactComp","set_contact_field","field","set_contact_channel","setContactAction","channel","set_contact_language","getLanguageForCode","set_contact_status","set_contact_name","getDraggedFrom","ghostNode","ghost","exitUUIDs","inboundConnections","exitUUID","nodeUUID","ONLINE_PROPERTIES","OFFLINE_PROPERTIES","getContactProperties","WAIT_LABEL","GROUP_LABEL","createRenderNode","exits","uiConfig","ui","hasCases","cases","createCaseProps","categories","getCategories","parse","kase","matchingCategory","category_uuid","isRelativeDate","caseConfig","arguments","categoryName","operatorType","has_date_eq","has_date_gt","has_date_lt","isCategoryMatch","cat","categorizeCases","newCases","originalRouter","previousCategories","newCase","getSwitchRouter","previousCase","previousCategory","previousExit","exit","exit_uuid","switch","getDefaultRoute","defaultCategoryName","defaultCategory","default_category_uuid","defaultExit","getTimeoutRoute","timeoutCategory","timeoutExit","wait","No_Response","resolveRoutes","hasTimeout","resolvedDefaultCategory","Other","All_Responses","createWebhookBasedNode","useCategoryTest","previousRouter","destination_uuid","Success","Failure","has_category","has_only_text","operand","result_name","splitType","split_by_webhook","call_resthook","split_by_resthook","open_ticket","split_by_ticket","transfer_airtime","split_by_airtime","getCategoriesForExit","isGroupSplit","split_by_groups","getResultName","switchRouter","random","call_webhook","uniquifyNode","newNode","removeResultFromStore","resultName","reference","filteredRefs","references","actionUUID","removeResultReference","addResult","addRevision","revision","updateConnection","fromNodeUUID","fromExitUUID","destinationNodeUUID","updatedNodes","fromNode","getNode","exitIdx","getExitIndex","previousDestination","mergeNode","removeNode","spliceInAction","previousNode","otherExit","getDefaultExit","destination","execute_actions","remap","nodeToRemove","detectLoops","updatePosition","snap","adjusted","updateStickyNotePosition","stickyUUID","_ui","stickies","lastPos","updateStickyNote","sticky","CONTACT_STATUS_ACTIVE","ACTIVE","CONTACT_STATUS_BLOCKED","BLOCKED","CONTACT_STATUS_STOPPED","STOPPED","CONTACT_STATUS_ARCHIVED","ARCHIVED","CONTACT_STATUS_OPTIONS","UpdateContactForm","fieldValue","selection","dispatch","getState","flowContext","assetMap","mutators","handlePropertyChange","handleLanguageUpdate","handleChannelUpdate","onUpdated","handleStatusUpdate","handleFieldValueUpdate","value_type","sortFieldsAndProperties","handleFieldAdded","getValueWidget","CurrencyElement","isNaN","Number","currency","amountInput","handleAmountChanged","medium","removeIco","onRemove","form_element","exclude","airtime","handleCurrencyChanged","OptionalTextInput","editing","handleTextChanged","toggle_link","handleEditingChanged","toggleText","optional_text_input","createResultNameInput","ValidationFailures","getOriginalAction","AirtimeRouterForm","nodeToState","updateRouter","stateToNode","handleTransferChanged","handleRemoved","renderAmount","renderAmounts","handleUpdateResultName","DialRouterForm","phone","wait_for_dial","dial","Answered","NoAnswer","Busy","answered","noAnswer","busy","optionalRouter","handlePhoneUpdated","renderEdit","intentOperatorList","has_top_intent","verboseName","operands","has_intent","operatorConfigList","has_any_word","has_all_words","has_phrase","has_only_phrase","has_beginning","has_text","has_number","has_number_between","has_number_lt","has_number_lte","has_number_eq","has_number_gte","has_number_gt","has_date","has_time","has_group","has_phone","has_email","has_state","HAS_LOCATIONS","has_district","has_ward","has_error","has_value","has_pattern","operatorConfigMap","operatorConfig","getOperatorConfig","pre","validateCase","classifier","exitEdited","exitName","min","maxExpression","minExpression","hasExpression","numeric","argument","district","intentValidators","intents","intent","confidence","categoryNameEdited","getCategoryName","today","inDays","abs","words","firstWord","CaseElement","operators","arg1","arg2","previousProps","filterOperators","getArgumentArray","getCaseProps","handleIntentChanged","handleMinChanged","divider","data-draggable","handleMaxChanged","onMenuOpen","handleIntentMenuOpened","onMenuClose","handleIntentMenuClosed","handleConfidenceChanged","handleStateChanged","handleDistrictChanged","relative_date","handleArgumentChanged","data-test-id","kaseError","dnd_icon","choice","getOperators","handleOperatorChanged","multi_operand","single_operand","renderArguments","categorize_as","handleExitChanged","showInvalid","remove_icon","handleRemoveClicked","DragCursor","SortableItem","SortableElement","row","caseProps","list","handleRemoveCase","handleUpdateCase","CaseList","sortableList","SortableContainer","case_list","currentCases","shouldCancelStart","hasEmptyCase","createEmptyCase","operator","lastOperator","ensureEmptyCase","removeCase","onCasesUpdated","oldIndex","newIndex","arrayMove","case_list_container","scrolling","tabIndex","onSortEnd","handleSortEnd","HTMLElement","dataset","draggable","InputToFocus","DigitsRouterForm","initialCases","wait_for_digits","msg","hint","digits","wait_for_response","lead_in","handleCasesUpdated","ExpressionRouterForm","split_by_expression","handleOperandUpdated","getRoutableFields","Scheme","FieldRouterForm","split_by_contact_field","operandConfig","field_select","handleFieldChanged","LocalizedType","extractGroups","groupsToCases","GroupsRouterForm","getOriginalCase","getLocalizedObjects","localizedType","filtered","Case","hasLocalizableCases","original","RouterLocalizationForm","Category","arg","originalCase","orginalArgument","translating_operator_container","translating_operator","translating_from","translating_to","handleUpdateCaseArgument","originalCategory","translating_category","handleUpdateCategoryName","orginalCase","translating_list_container","translating_item_list","renderCases","renderCategories","menuToCases","menu","previousCases","c","MenuRouterForm","i","wait_for_menu","originalCases","menu_option","digit","handleMenuChanged","renderOption","renderMenu","BUCKET_OPTIONS","getOption","bucketOption","fillOutCategories","buckets","RandomRouterForm","split_by_random","bucketChoice","newExit","bucket_name","handleBucketNameChanged","OPTIONS","bucket_select","handleBucketsChanged","bucket_list","renderBucketNames","TIMEOUT_OPTIONS","DEFAULT_TIMEOUT","TimeoutControl","entries","isChecked","onChanged","timeout_control_container","left_section","getInstructions","handleChecked","drop_down","getSelected","handleTimeoutChanged","ResponseRouterForm","seconds","invalidCase","nameErrors","handleUpdateTimeout","ResthookRouterForm","resthookAsset","handleResthookChanged","FIELD_NUMBER_OPTIONS","DELIMITER_OPTIONS","getDelimiterOption","ResultRouterForm","fieldNumber","delimiter","shouldDelimit","split_by_run_result","split_by_run_result_delimited","handleResultChanged","nodeType","non_delimited","result_select","delimited","field_number","handleFieldNumberChanged","lead_in_sub","result_select_delimited","handleDelimiterChanged","should_delimit","handleShouldDelimitChanged","renderFieldDelimited","renderField","SubflowRouterForm","params","split_by_subflow","enter_flow","setRunResult","hasFieldErrors","startFlowAction","Complete","Expired","setResultAction","getFlowType","info","param","param_name","param_input","handleParamChanged","handleShouldExclude","Methods","WaitRouterForm","wait_for_audio","wait_for_image","image","wait_for_location","wait_for_video","video","NAME_PLACEHOLDER","VALUE_PLACEHOLDER","HeaderElement","getHeader","remove_ico","handleRemove","getRemoveIco","header_name","handleChangeName","header_value","handleChangeValue","GET_METHOD","GET","METHOD_OPTIONS","POST","PUT","DELETE","HEAD","PATCH","getDefaultBody","method","WebhookRouterForm","sort","ensureEmptyHeader","oldMethod","newMethod","existingContentTypeHeader","lastHeader","removeHeader","needsHeader","handleCreateHeader","headerElements","handleHeaderRemoved","handleHeaderUpdated","body_form","req_body","handleBodyUpdate","handleMethodUpdate","handleUrlUpdate","instructions","example","CallClassifierComp","call_classifier","routes","hiddenCases","route","existingCasePosition","every","existingCase","ensureRoute","routerResultName","actionResultName","split_by_intent","ClassifyRouterForm","showTab","handleClassifierUpdated","getChannelTypeOptions","excludeFromSplit","extractSchemes","schemes","selectOptions","schemesToCases","SchemeRouterForm","split_by_scheme","handleSchemesChanged","orginalCases","TicketRouterForm","ticketer","initialTicketer","assignee","showTicketers","handleTicketerUpdate","flexBasis","topics","flexGrow","users","handleAssigneeUpdate","user","first_name","last_name","email","handleResultNameUpdate","OpenTicketComp","showTicketer","brand","fontWeight","typeConfigList","component","massageForDisplay","aliases","HAS_RESTHOOK","HAS_TICKETER","HAS_AIRTIME","HAS_CLASSIFIER","dedupeTypeConfigs","typeConfigMap","alias","originalType","fieldAction","channelAction","languageAction","statusAction","o","nameAction","aType","bType","aName","bName","lang","EMPTY_DRAG_STATE","dragStartTime","dragDownPosition","dragActive","dragNodeUUID","dragGroup","dragSelection","currentRevision","simulating","fetchingFlow","debug","warnings","popped","activity","segments","liveActivity","activityInterval","visible","scrollToNode","scrollToAction","editorState","UPDATE_EDITOR_STATE","markDirty","lastDirtyAttemptTimeout","postingRevision","lastDirtyMillis","lastSuccessfulMillis","NETWORK_ERROR","SERVER_ERROR","createSaveMonitor","setInterval","mergeEditorState","modalMessage","saving","createDirty","revisionsEndpoint","quiet","newDefinition","getCurrentDefinition","createFlowIssueMap","updatedAssets","changes","updateEditorState","createNewRevision","loadFlowDefinition","currentTop","guessNodeType","components","getFlowComponents","mergeAssetMaps","renderNodeMap","fetchFlow","forceSave","fetchFlowActivity","triggerActivityUpdate","handleLanguageChange","currentLanguage","isEqual","onUpdateLocalizations","newDef","normalizedTranslations","prev","updateExitDestination","disconnectExit","source","removeAction","actionIdx","getActionIndex","moveActionUp","actionAbove","handleTypeConfigChange","updateTypeConfig","resetNodeEditingState","onUpdateAction","nodeEditor","updateContactFields","onAddToNode","showAdvanced","onRemoveNodes","uuids","updatedDefinition","didNodes","didDef","onUpdateCanvasPositions","positions","updatedNodePosition","updatedStickyPosition","onConnectionDrag","sourceId","resultCount","createEmptyNode","updateSticky","onUpdateRouter","newRouterNode","previousAction","previousPosition","originalResultName","actionToSplice","topNode","bottomNode","topActions","bottomActions","onOpenNodeEditor","actionToTranslate","getLocalizations","updateTranslationFilters","translationFilters","translation_filters","activityTimeout","hasLoopSplit","hasWait","toNodeUUID","toNode","sendMsgAction","nodeMap","includeUI","renderNodes","getOrderedNodes","uiNodes","sorted","diff","suggestedResultNameCount","emptyNode","replyType","replyAction","actionType","pointerMap","groupUUID","groupsToChange","resultAction","pointers","toAdd","previousIssues","issueMap","nodeIssues","activityEndpoint","flowUUID","getActivity","CanvasDraggable","updateDimensions","clientWidth","clientHeight","nativeEvent","which","onDragStop","tagName","onDragStart","pageX","pageY","classes","onTransitionEnd","onAnimated","elementCreator","collides","fudge","getFirstCollision","changed","sortedDraggables","getOrderedDraggables","current","j","other","cascaded","setTop","newTop","Canvas","isScrolling","reflowTimeout","lastX","lastY","justSelected","onDragThrottled","onDragging","onMouseThrottled","handleMouseMove","documentElement","draggables","dragUUID","windowHeight","handleWindowResize","handleKeyDown","onLoaded","updatedPositions","drag","startX","startY","currentX","currentY","drag_selection","mutable","offset","getBoundingClientRect","isClickOnCanvas","scrollY","draggingNew","updateStateWithScroll","clientY","updatePositions","box","collisions","getDraggablesInBox","speed","scrollBy","dimensions","pos","newPosition","markReflow","reflowPositions","newPositions","attempts","collision","cascade","cascadeTop","reflow","onUpdatePositions","doReflow","windowY","otherState","viewportHeight","clearInterval","scrollCanvas","startPosition","xd","yd","lowestNode","delta","addPosition","DRAG_THRESHOLD","getSelectedPositions","onDoubleClick","canvas_container","onMouseMove","handleMouseUpCapture","handleDoubleClick","canvas_background","canvas","newDragElement","handleAnimated","handleUpdateDimensions","handleDragStart","handleDragStop","dragOnAdd","renderSelectionBox","PureComponent","Counter","handleScrollIntoView","keepVisible","scrollTo","behavior","callback","handleMouseEvent","onMouseEnter","onMouseLeave","toString","containerStyle","handleClick","handleMouseEnter","handleMouseLeave","countStyle","TitleBar","confirmationTimeout","confirmingRemoval","handleConfirmRemoval","showMove","up_button","onMoveUp","remove_button","showRemoval","confirmation","remove_confirm","titletext","onRemoval","getConfirmationEl","moveArrow","getMoveArrow","getRemove","titlebar","MountScroll","handleScroll","pulse","handleScrollCompleted","timer","innerHeight","scrollHeight","ActionWrapper","attributes","getAttribute","missingLocalization","notLocalizable","has_router","not_localizable","missing_localization","getClasses","actionToInject","getAction","titleBarClass","actionClass","first","events","handleActionClicked","handleRemoval","handleMoveUp","render","overlay","pulseAfterScroll","Direction","ConnectedActionWrapper","connect","bindActionCreators","forwardRef","DragHelper","drag_helper","arrow","tail","head","bold","getExitActivityKey","hexToRgb","hex","exec","g","Loading","loading","size","units","borderRadius","square","animationDelay","background","Portal","el","portalRoot","createElement","getElementById","appendChild","ReactDOM","createPortal","mins","getMinutes","minStr","getHours","isMessage","isMT","Modal","customStyles","outline","ariaHideApp","isOpen","show","onAfterOpen","onModalOpen","onRequestClose","shouldCloseOnOverlayClick","contentLabel","MAP_THUMB","DrawerType","getStyleForDirection","direction","MO","msg_received","renderError","renderInfo","dangerouslySetInnerHTML","__html","renderMessage","attaches","audio_attachment","media_player","audio_text","alt","cursor","textDecoration","video_attachment","controls","msg_text","LogEvent","detailsVisible","showDetails","parts","groups_added","renderValueList","groups_removed","renderClickable","email_details","webhook","webhook_details","request","http_logs","renderHTTPRequest","element","step_uuid","has_detail","event_viewer","classification","extra","toFixed","entities","entity","renderClassification","MT","renderGroupsChanged","renderEmailSent","base_language","service","renderWebhook","renderLabelsAdded","ticket","actual_amount","recipient","urn","renderLogEvent","delim","ContextExplorer","opened","messageVisible","showEmpty","openState","prevPath","navigator","clipboard","writeText","openPath","shift","closing","newPath","valueType","hasChildren","arrowStyles","arrow_right","has_children","keyStyles","keySummary","handleCopyPath","handlePathClick","key_summary","str_value","renderProperties","renderContextNode","contents","pruneEmpty","messageStyle","context_explorer","panel","empty_toggle","handleToggleHide","PopTab","poppedEle","offsetWidth","onShow","onHide","pop_wrapper","tab_wrapper","handleTabClick","handlePoppedRef","custom","popTop","close","handleClose","header_label","SIMULATOR_CONTACT_UUID","SIMULATOR_CONTACT_URNS","IMAGE_A","IMAGE_B","IMAGE_C","VIDEO_A","VIDEO_A_THUMB","Simulator","currentFlow","inputBox","drawerEle","urns","keypadEntry","drawerHeight","time","waitingForHint","drawerOpen","attachmentOptionsVisible","contextExplorerVisible","sprinting","bottomRef","inputBoxRef","activeFlow","pathCounts","nodeCounts","recentContacts","seg","pathCount","recent","unshift","pop","runs","run","finalStep","flow_uuid","messageFound","newState","update","scrollToBottom","updateEvents","runContext","wasJustActive","step","created_on","toISOString","waiting","waitEvent","newEvents","drawerType","videos","images","hasQuickReplies","updateActivity","handleFocusUpdate","trigger","environment","date_format","time_format","timezone","triggered_on","simulateStart","updateRunContext","resume","resumed_on","simulateResume","startFlow","delay","scrollIntoView","newVisible","onToggled","SIMULATOR","drawer_items","drawer_item","sendAttachment","map_thumb","audio_picker","audio_icon","audio_message","quick_reply","multiple","handleKeyPress","keypad","keypad_entry","getKeyRow","getLocationDrawer","getAudioDrawer","getImageDrawer","getVideoDrawer","getQuickRepliesDrawer","getKeypadDrawer","zIndex","paddingBottom","handleDrawerRef","drawer","drawer_visible","forced","getDrawerContents","showAttachmentDrawer","attachment_buttons","handleHideAttachments","getAttachmentButton","handleContextExplorerClose","handleHideAttachmentDrawer","messages","String","hidden","simHidden","sim_hidden","messagesStyle","tab_hidden","onToggle","sim_container","simulator","getContextExplorer","screen","float","clear","onKeyUp","show_attachments_button","getAttachmentOptions","getDrawer","show_context_button","reset","inactive","onReset","ExitComp","hideDragHelper","pendingMessageFetch","lastEnter","confirmDelete","fetchingRecentContacts","showDragHelper","plumberMakeSource","getSourceId","handleDisconnect","plumberUpdateClass","plumberRemove","plumberConnectExit","recentsEndpoint","cancel","recents","recentcontacts","segmentCount","handleShowRecentMessages","handleHideRecentMessages","hasRecents","recentStyles","recent_contacts","no_recents","canvasBounds","canvasOffset","rect","scrollX","pointerEvents","container","recentContact","opRow","moment","fromNow","nameStyle","connected","dragNodeClasses","confirm","confirm_x","onDisconnect","dragging","exitClasses","unnamed_exit","confirm_delete","getSegmentCount","getRecentContacts","ConnectedExit","EMPTY","NodeComp","firstAction","clicking","handleShouldCancelClick","parentElement","plumberMakeTarget","ghostListener","getGhostListener","plumberRecalculate","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","textContent","Exit","onlyNode","startingNode","showUUIDs","handleUUIDClicked","actionList","firstRef","actionConfig","filterIssuesForAction","ActionComponent","Action","anyAction","enterAnimation","leaveAnimation","easing","addActions","save_result","save_as","add","handleAddToNode","getExits","flow_start","isStartNodeVisible","isSelected","immutable","renderDebug","flow_start_message","activeCount","onActivityClicked","cropped","exit_table","node_container","eleRef","scrollNode","scrollAction","NodeEditor","canceled","dragPoint","LocalizationForm","localizationProps","Form","formProps","handleAddAsset","STICKY_TITLE","STICKY_BODY","COLOR_OPTIONS","yellow","blue","green","purple","gray","Sticky","debounceTextChanges","showConfirmation","DEFUALT_TITLE","DEFUALT_BODY","finalPos","onUpdateText","handleSelectForValue","color_chooser_container","color_chooser","handleChangeColor","color_option","titleClasses","title_wrapper","removal","containerClasses","sticky_container","stickyClasses","colorChooser","getColorChooser","handleClickRemove","handleChangeTitle","onFocusCapture","handleTitleFocused","body_wrapper","handleChangeBody","handleBodyFocused","importDefaults","jsPlumb","TARGET_DEFAULTS","anchor","shape","faces","cssClass","hoverClass","dropOptions","tolerance","isTarget","dragAllowedWhenFull","deleteEndpointsOnEmpty","SOURCE_DEFAULTS","maxConnections","isSource","getAnchor","sourceEle","targetEle","defaultConnector","stub","midpoint","alwaysRespectStubs","gap","cornerRadius","Plumber","pendingConnections","pendingConnectionTimeout","animateInterval","onLoadFunction","DragOptions","DropOptions","Endpoint","EndpointStyle","strokeStyle","PaintStyle","ConnectionsDetachable","Connector","ConnectionOverlays","setSourceEnabled","makeSource","makeTarget","connectExit","setDragSelection","clearDragSelection","removeFromDragSelection","cancelDurationRepaint","handlePendingConnections","checkForPendingConnections","repaint","recalculate","updateClass","rerouteAnchors","containerId","setContainer","enabled","connection","addClass","removeClass","addToDragSelection","targets","batch","slot","totalSlots","anchors","delete","fireEvent","connector","detachable","onLoad","onEvent","recalculateOffsets","repaintEverything","unmakeSource","deleteConnectionsForElement","connections","getConnections","setAnchor","revalidate","closure","debounce","Debug","isDraggingBack","suspendedElementId","targetId","nodeContainerUUID","fe","beforeConnectionDrag","onConnectorDrop","onBeforeConnectorDrop","triggerLoaded","offsetLeft","offsetTop","dispatchEvent","Event","stickyMap","Node","handleNodeCreation","handleStickyCreation","ghostRef","nodeEditorSettings","help","empty_flow","querySelectorAll","getNodes","getStickies","getEmptyFlow","getSimulator","getNodeEditor","getDragNode","handleDragging","handleCanvasLoaded","TranslationState","LanguageSelector","handleLanguageSort","separator","language_link","handleLanguageChanged","RevisionExplorer","onRevisionClicked","onRevertClicked","remoteAssets","REVISION_HISTORY","handleUpdateRevisions","mask","handleTabClicked","explorer_wrapper","explorer","selectedClass","dateFormat","utc","getIssueKey","getRenderObjects","renderAction","IssuesTab","selectedIssue","issueDetails","buildIssueDetails","issueDetail","renderObjects","nodeDifference","ISSUES_TAB","onIssueClicked","onIssueOpened","issueCount","lastLanguage","languageHeader","handleIssueClicked","issues_code","issues_wrapper","middlewares","thunk","TranslationType","getMergedByType","bundle","COMPLETE","MISSING","findTranslations","localizable","attribute","getFriendlyAttribute","i18next","getBundleKey","TranslatorTab","selectedTranslation","translationBundles","optionsVisible","pctComplete","rules","handleUpdateTranslations","CATEGORY","CASE","translated","PROPERTY","counts","total","complete","round","bundles","TRANSLATOR_TAB","onTranslationFilterChanged","from_text","onTranslationClicked","onTranslationOpened","onChangeLanguage","showChangeButton","optionsClasses","options_visible","change_visible","filledClasses","filled","hundredpct","wrapperClasses","translations_wrapper","translate_block","handleTranslationClicked","needs_translation","type_name","renderMissing","toggleOptions","progress_bar","toggle","checkboxes","toggleCategories","toggleRules","pct_complete","changeLanguage","handleChangeLanguageClick","PageVisibility","default","hotStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","FlowEditor","forceSaveOnLoad","dataStr","encodeURIComponent","downloadAnchorNode","setAttribute","downloadJSON","alert_modal","alert_body","showDownload","download_button","handleDownloadClicked","handleLanguageSetting","handleScrollToNode","handleVisibilityChanged","getFooter","getAlertModal","getSavingIndicator","handleScrollToTranslation","handleOpenTranslation","handleTabPopped","handleScrollToIssue","handleOpenIssue","ConnectedFlowEditor","FlowEditorContainer","Boolean","innerHTML","showFlowEditor","millis","httpTimeout","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.45f007fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"sim_container\":\"Simulator_sim_container__H7rj0\",\"simulator\":\"Simulator_simulator__2tU1d\",\"sim_hidden\":\"Simulator_sim_hidden__1ggwF\",\"screen\":\"Simulator_screen__2Qp5p\",\"header\":\"Simulator_header__2r6Gy\",\"close\":\"Simulator_close__1RMuB\",\"time\":\"Simulator_time__3FKl6\",\"battery\":\"Simulator_battery__3Wa1Y\",\"wifi\":\"Simulator_wifi__2E-6D\",\"footer\":\"Simulator_footer__1_obl\",\"show_context_button\":\"Simulator_show_context_button__20XVs\",\"reset\":\"Simulator_reset__1A78l\",\"inactive\":\"Simulator_inactive__3bLl7\",\"active\":\"Simulator_active__1MwaM\",\"messages\":\"Simulator_messages__3Oalm\",\"controls\":\"Simulator_controls__1TlMu\",\"show_attachments_button\":\"Simulator_show_attachments_button__3LFcV\",\"attachment_buttons\":\"Simulator_attachment_buttons__hDIT5\",\"visible\":\"Simulator_visible__3BBvQ\",\"drawer\":\"Simulator_drawer__340zx\",\"drawer_visible\":\"Simulator_drawer_visible__1jBzI\",\"forced\":\"Simulator_forced__19aUl\",\"drawer_header\":\"Simulator_drawer_header__nlorO\",\"map_thumb\":\"Simulator_map_thumb__1zB9o\",\"audio_picker\":\"Simulator_audio_picker__V2K8X\",\"audio_icon\":\"Simulator_audio_icon__Ve23Y\",\"audio_message\":\"Simulator_audio_message___4Yvw\",\"keypad\":\"Simulator_keypad__29cCi\",\"keypad_entry\":\"Simulator_keypad_entry__2S4e_\",\"keys\":\"Simulator_keys__W8GcS\",\"row\":\"Simulator_row__mtRhr\",\"key\":\"Simulator_key__Wv2KS\",\"drawer_items\":\"Simulator_drawer_items__PYHpL\",\"drawer_item\":\"Simulator_drawer_item__yZRIg\",\"tab_hidden\":\"Simulator_tab_hidden__1BDkU\",\"simulator_tab\":\"Simulator_simulator_tab__uRMHB\",\"simulator_tab_icon\":\"Simulator_simulator_tab_icon__3cmxe\",\"simulator_tab_text\":\"Simulator_simulator_tab_text__1aI0Q\",\"detail_webhook_called\":\"Simulator_detail_webhook_called__1A8Iu\",\"quick_replies\":\"Simulator_quick_replies__3wan9\",\"quick_reply\":\"Simulator_quick_reply__sSRfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"TranslatorTab_hidden__n6TH8\",\"message\":\"TranslatorTab_message__94Qv_\",\"header\":\"TranslatorTab_header__D3V8v\",\"translations_wrapper\":\"TranslatorTab_translations_wrapper__3D6T-\",\"complete\":\"TranslatorTab_complete__30vNJ\",\"language\":\"TranslatorTab_language__2b3mU\",\"options\":\"TranslatorTab_options__hKEsd\",\"options_visible\":\"TranslatorTab_options_visible__1Iv7O\",\"filters\":\"TranslatorTab_filters__3qwqM\",\"pct_complete\":\"TranslatorTab_pct_complete__3sHbg\",\"toggle\":\"TranslatorTab_toggle__35-qI\",\"change_visible\":\"TranslatorTab_change_visible__1P3qg\",\"changeLanguage\":\"TranslatorTab_changeLanguage__RxYLJ\",\"progress_bar\":\"TranslatorTab_progress_bar__cWMo0\",\"filled\":\"TranslatorTab_filled__OKNl9\",\"hundredpct\":\"TranslatorTab_hundredpct__2ltPG\",\"checkboxes\":\"TranslatorTab_checkboxes__3MIKA\",\"translate_block\":\"TranslatorTab_translate_block__1htQy\",\"item\":\"TranslatorTab_item__3Q3JG\",\"text\":\"TranslatorTab_text__2HqtQ\",\"from_text\":\"TranslatorTab_from_text__3_B24\",\"to_text\":\"TranslatorTab_to_text__z4k-b\",\"needs_translation\":\"TranslatorTab_needs_translation__1FKjj\",\"type_name\":\"TranslatorTab_type_name__OdM8M\",\"attribute\":\"TranslatorTab_attribute__bQi14\",\"translated\":\"TranslatorTab_translated__K2ZMS\",\"check\":\"TranslatorTab_check__1ymTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"evt\":\"LogEvent_evt__1J8Uq\",\"fadein\":\"LogEvent_fadein__kgfF4\",\"msg_text\":\"LogEvent_msg_text__1HqoJ\",\"ivr_msg\":\"LogEvent_ivr_msg__2pGYZ\",\"send_msg\":\"LogEvent_send_msg__195Tn\",\"msg_received\":\"LogEvent_msg_received__gf2kP\",\"image_attachment\":\"LogEvent_image_attachment__2Ku4T\",\"error\":\"LogEvent_error__2oBQ9\",\"info\":\"LogEvent_info__12nsu\",\"email\":\"LogEvent_email__1XyUb\",\"webhook\":\"LogEvent_webhook__3jEK2\",\"video_attachment\":\"LogEvent_video_attachment__2xn3C\",\"audio_attachment\":\"LogEvent_audio_attachment__2iBWG\",\"media_player\":\"LogEvent_media_player__22CtH\",\"audio_text\":\"LogEvent_audio_text__3j-uW\",\"email_details\":\"LogEvent_email_details__1f2TW\",\"to\":\"LogEvent_to__H-JTa\",\"subject\":\"LogEvent_subject__mN7Lz\",\"body\":\"LogEvent_body__2hSdi\",\"webhook_details\":\"LogEvent_webhook_details__3mtJW\",\"response\":\"LogEvent_response__2oEy0\",\"event_viewer\":\"LogEvent_event_viewer__2D4uw\",\"has_detail\":\"LogEvent_has_detail__ZRVpP\",\"classification\":\"LogEvent_classification__2arCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"clickable\":\"Dialog_clickable__1gSoh\",\"dialog\":\"Dialog_dialog__16A3R\",\"header\":\"Dialog_header__YD-Nm\",\"header_overlay\":\"Dialog_header_overlay__1Of6F\",\"header_icon\":\"Dialog_header_icon__2z4U8\",\"title\":\"Dialog_title__1IRe1\",\"barber\":\"Dialog_barber__3x6cp\",\"iconed\":\"Dialog_iconed__2eQKD\",\"title_container\":\"Dialog_title_container__2HiUa\",\"content\":\"Dialog_content__1YGhY\",\"footer\":\"Dialog_footer__3UylY\",\"gutter\":\"Dialog_gutter__1Xxy-\",\"buttons\":\"Dialog_buttons__1T0cB\",\"left_buttons\":\"Dialog_left_buttons__31hp_\",\"right_buttons\":\"Dialog_right_buttons__3NHBO\",\"tabs\":\"Dialog_tabs__2gLgU\",\"tab\":\"Dialog_tab__1x47g\",\"tab_icon\":\"Dialog_tab_icon__28etF\",\"active\":\"Dialog_active__3yOgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"exit\":\"Exit_exit__36tB1\",\"translating\":\"Exit_translating__mA2Hf\",\"unnamed_exit\":\"Exit_unnamed_exit__1H6-H\",\"endpoint\":\"Exit_endpoint__1D08c\",\"missing_localization\":\"Exit_missing_localization__h2WGJ\",\"name\":\"Exit_name__22WdX\",\"confirm_delete\":\"Exit_confirm_delete__26Wo-\",\"activity\":\"Exit_activity__11sTW\",\"count\":\"Exit_count__1tNM8\",\"confirm_x\":\"Exit_confirm_x__1AODA\",\"recent_contacts\":\"Exit_recent_contacts__1bAqb\",\"container\":\"Exit_container__3yonj\",\"no_recents\":\"Exit_no_recents__R97kK\",\"title\":\"Exit_title__3Ugsu\",\"loading\":\"Exit_loading__37ssZ\",\"row\":\"Exit_row__2S09I\",\"operand\":\"Exit_operand__okvAf\",\"time\":\"Exit_time__1PzNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"context_explorer\":\"ContextExplorer_context_explorer__wmqkX\",\"visible\":\"ContextExplorer_visible__2gRjv\",\"panel\":\"ContextExplorer_panel__gz824\",\"close_button\":\"ContextExplorer_close_button__26zA3\",\"row\":\"ContextExplorer_row__2rF84\",\"arrow_right\":\"ContextExplorer_arrow_right__22xI1\",\"has_children\":\"ContextExplorer_has_children__2eFg-\",\"open\":\"ContextExplorer_open__2duis\",\"key\":\"ContextExplorer_key__AE_c_\",\"clipboard\":\"ContextExplorer_clipboard__ZgQfN\",\"key_summary\":\"ContextExplorer_key_summary__2xvsu\",\"colon\":\"ContextExplorer_colon__3TZUN\",\"str_value\":\"ContextExplorer_str_value__2W3Fs\",\"footer\":\"ContextExplorer_footer__xM3R1\",\"hide_checkbox\":\"ContextExplorer_hide_checkbox__w80HV\",\"help\":\"ContextExplorer_help__23pVD\",\"empty_toggle\":\"ContextExplorer_empty_toggle__29mpj\",\"message\":\"ContextExplorer_message__2x4s4\",\"expression\":\"ContextExplorer_expression__3MKM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"yellow\":\"Sticky_yellow__39XW4\",\"color_option\":\"Sticky_color_option__32vU5\",\"sticky\":\"Sticky_sticky__3QUKK\",\"blue\":\"Sticky_blue__3s2JL\",\"purple\":\"Sticky_purple__278EO\",\"gray\":\"Sticky_gray__39re9\",\"green\":\"Sticky_green__3BQ0M\",\"color_chooser_container\":\"Sticky_color_chooser_container__2lT4F\",\"color_chooser\":\"Sticky_color_chooser__3Jbqj\",\"sticky_container\":\"Sticky_sticky_container__CAgg9\",\"selected\":\"Sticky_selected__1Ra33\",\"removal\":\"Sticky_removal__2Ktvw\",\"title_wrapper\":\"Sticky_title_wrapper__2QWs9\",\"remove_button\":\"Sticky_remove_button__2jDO8\",\"title\":\"Sticky_title__1kkPN\",\"confirmation\":\"Sticky_confirmation__wEJ6P\",\"body_wrapper\":\"Sticky_body_wrapper__3vHL0\",\"body\":\"Sticky_body__18mNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node_container\":\"Node_node_container__2eaRs\",\"uuid\":\"Node_uuid__1gU_w\",\"ghost\":\"Node_ghost__1rJWj\",\"nondragged\":\"Node_nondragged__3odZa\",\"selected\":\"Node_selected__1ck3F\",\"node\":\"Node_node__2ympr\",\"immutable\":\"Node_immutable__2NDYM\",\"save_as\":\"Node_save_as__27Fv-\",\"save_result\":\"Node_save_result__cnC6y\",\"result_name\":\"Node_result_name__1F10Q\",\"cropped\":\"Node_cropped__3mV37\",\"exit_table\":\"Node_exit_table__3NybR\",\"exits\":\"Node_exits__3zABv\",\"add\":\"Node_add__3PamH\",\"drag_group\":\"Node_drag_group__1h4JV\",\"flow_start\":\"Node_flow_start__2ZLmX\",\"flow_start_message\":\"Node_flow_start_message__21Gdu\",\"active\":\"Node_active__31xXM\",\"pulse\":\"Node_pulse__14AYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"random\":\"shared_random__URuHQ\",\"issues\":\"shared_issues__2JPEb\",\"header\":\"shared_header__whMnp\",\"icon\":\"shared_icon__1igRB\",\"title\":\"shared_title__1WSZR\",\"summary\":\"shared_summary__1XTGq\",\"issue_help\":\"shared_issue_help__1XuTL\",\"wait_for_audio\":\"shared_wait_for_audio__1LjH-\",\"wait_for_image\":\"shared_wait_for_image__3VU9W\",\"wait_for_video\":\"shared_wait_for_video__1nv-a\",\"wait_for_location\":\"shared_wait_for_location__2al5E\",\"wait_for_menu\":\"shared_wait_for_menu__hot7M\",\"wait_for_digits\":\"shared_wait_for_digits__35WPZ\",\"wait_for_response\":\"shared_wait_for_response__ZKUbx\",\"wait_for_dial\":\"shared_wait_for_dial__NMK7W\",\"add_contact_groups\":\"shared_add_contact_groups__2dqfS\",\"remove_contact_groups\":\"shared_remove_contact_groups__1dJrQ\",\"send_email\":\"shared_send_email__dY51y\",\"send_broadcast\":\"shared_send_broadcast__3LXs5\",\"msg\":\"shared_msg__28OwU\",\"say_msg\":\"shared_say_msg__2U3R0\",\"send_msg\":\"shared_send_msg__2tEfv\",\"open_ticket\":\"shared_open_ticket__2NPzK\",\"transfer_airtime\":\"shared_transfer_airtime__1H5tV\",\"enter_flow\":\"shared_enter_flow__XHnXb\",\"start_session\":\"shared_start_session__1f3aq\",\"set_run_result\":\"shared_set_run_result__1QltP\",\"add_input_labels\":\"shared_add_input_labels__2pTX0\",\"add_contact_urn\":\"shared_add_contact_urn__3nXG-\",\"set_contact_name\":\"shared_set_contact_name__KV1Re\",\"set_contact_field\":\"shared_set_contact_field__3VSZH\",\"set_contact_language\":\"shared_set_contact_language__4ZBkW\",\"set_contact_status\":\"shared_set_contact_status__2iexL\",\"set_contact_channel\":\"shared_set_contact_channel__3NhjI\",\"play_audio\":\"shared_play_audio__2OF7K\",\"missing\":\"shared_missing__2oICX\",\"missing_asset\":\"shared_missing_asset__b9Nts\",\"call_classifier\":\"shared_call_classifier__3zcuw\",\"split_by_random\":\"shared_split_by_random__Zh1SY\",\"split_by_expression\":\"shared_split_by_expression__3k23C\",\"split_by_groups\":\"shared_split_by_groups__5EnH4\",\"split_by_contact_field\":\"shared_split_by_contact_field__1XjX5\",\"split_by_intent\":\"shared_split_by_intent__1H9sN\",\"split_by_run_result\":\"shared_split_by_run_result__X4-Wp\",\"split_by_scheme\":\"shared_split_by_scheme__3L9lW\",\"call_resthook\":\"shared_call_resthook__16wqp\",\"call_webhook\":\"shared_call_webhook__1h1Cb\",\"breaks\":\"shared_breaks__2F4AL\",\"url\":\"shared_url__1vtQK\",\"node_asset\":\"shared_node_asset__2MOdQ\",\"node_group\":\"shared_node_group__ju7iK\",\"node_label\":\"shared_node_label__1lQNA\",\"advanced_title\":\"shared_advanced_title__2auaT\",\"alert\":\"shared_alert__1JnkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"action\":\"Action_action__NVQRK\",\"has_router\":\"Action_has_router__1Ad-S\",\"body\":\"Action_body__RtQCZ\",\"add_contact_urn\":\"Action_add_contact_urn__3Z706\",\"add_input_labels\":\"Action_add_input_labels__3IeO3\",\"send_msg\":\"Action_send_msg__1QYPk\",\"set_contact_field\":\"Action_set_contact_field__1HDvu\",\"set_contact_name\":\"Action_set_contact_name__1woBb\",\"call_webhook\":\"Action_call_webhook__2kR_s\",\"call_resthook\":\"Action_call_resthook__2zGlX\",\"set_contact_language\":\"Action_set_contact_language__G9Ko5\",\"set_contact_status\":\"Action_set_contact_status__2inqU\",\"set_contact_channel\":\"Action_set_contact_channel__1YEwX\",\"add_contact_groups\":\"Action_add_contact_groups__3H0fU\",\"remove_contact_groups\":\"Action_remove_contact_groups__3h7vs\",\"play_audio\":\"Action_play_audio__ShGHx\",\"say_msg\":\"Action_say_msg__3CqFc\",\"set_run_result\":\"Action_set_run_result__1CLz_\",\"send_email\":\"Action_send_email__2MDnO\",\"send_broadcast\":\"Action_send_broadcast__1SCyf\",\"transfer_airtime\":\"Action_transfer_airtime__2LvoA\",\"open_ticket\":\"Action_open_ticket__3afC2\",\"missing\":\"Action_missing__1Ghl9\",\"enter_flow\":\"Action_enter_flow__2ogxI\",\"call_classifier\":\"Action_call_classifier__tKBlJ\",\"start_session\":\"Action_start_session__1yM-7\",\"not_localizable\":\"Action_not_localizable__2rKMk\",\"overlay\":\"Action_overlay__ZEDK0\",\"immutable\":\"Action_immutable__qAZdN\",\"translate_from\":\"Action_translate_from__3BID_\",\"translate_to\":\"Action_translate_to__TPeJw\",\"translating\":\"Action_translating__2n0n7\",\"missing_localization\":\"Action_missing_localization__1zslf\",\"localized\":\"Action_localized__3Mwip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"group\":\"CaseElement_group__1fyWB\",\"divider\":\"CaseElement_divider__mkeU9\",\"kase\":\"CaseElement_kase__2vP_O\",\"has_intent\":\"CaseElement_has_intent__z8znp\",\"choice\":\"CaseElement_choice__2RZct\",\"has_top_intent\":\"CaseElement_has_top_intent__3fsYv\",\"multi_operand\":\"CaseElement_multi_operand__eTLuc\",\"form_group\":\"CaseElement_form_group__1PJTx\",\"single_operand\":\"CaseElement_single_operand__o0kaN\",\"categorize_as\":\"CaseElement_categorize_as__XFySp\",\"category\":\"CaseElement_category__2yfW1\",\"remove_icon\":\"CaseElement_remove_icon__1PFzv\",\"dnd_icon\":\"CaseElement_dnd_icon__wjvHF\",\"relative_date\":\"CaseElement_relative_date__DGZXt\",\"empty\":\"CaseElement_empty__35kBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"WebhookRouterForm_link__1jXIk\",\"info\":\"WebhookRouterForm_info__qgGFO\",\"method\":\"WebhookRouterForm_method__1IR0U\",\"url\":\"WebhookRouterForm_url__T29iJ\",\"code\":\"WebhookRouterForm_code__3x1A-\",\"instructions\":\"WebhookRouterForm_instructions__3LG_X\",\"headers_title\":\"WebhookRouterForm_headers_title__1GMIG\",\"remove_ico\":\"WebhookRouterForm_remove_ico__l-jUh\",\"example\":\"WebhookRouterForm_example__1ev4D\",\"header\":\"WebhookRouterForm_header__2waYT\",\"header_name\":\"WebhookRouterForm_header_name__3eQVG\",\"header_value\":\"WebhookRouterForm_header_value__1Fxrk\",\"body_form\":\"WebhookRouterForm_body_form__3BHas\",\"req_body\":\"WebhookRouterForm_req_body__1rKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"RevisionExplorer_hidden__N5tXK\",\"mask\":\"RevisionExplorer_mask__14GgE\",\"visible\":\"RevisionExplorer_visible__365U6\",\"explorer_wrapper\":\"RevisionExplorer_explorer_wrapper__3FIUU\",\"explorer\":\"RevisionExplorer_explorer__1yYSY\",\"revisions\":\"RevisionExplorer_revisions__1nYCu\",\"revision\":\"RevisionExplorer_revision__3f_kl\",\"selected\":\"RevisionExplorer_selected__2zSg4\",\"button\":\"RevisionExplorer_button__2srjQ\",\"current\":\"RevisionExplorer_current__Zlqcr\",\"created_on\":\"RevisionExplorer_created_on__qKoNX\",\"email\":\"RevisionExplorer_email__Z9xlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"translating_categories\":\"RouterLocalizationForm_translating_categories__34-3g\",\"translating_category\":\"RouterLocalizationForm_translating_category__1GtBO\",\"translating_from\":\"RouterLocalizationForm_translating_from__1jvjb\",\"translating_to\":\"RouterLocalizationForm_translating_to__1m7uk\",\"translating_operator_title\":\"RouterLocalizationForm_translating_operator_title__3vA3V\",\"translating_operator_instructions\":\"RouterLocalizationForm_translating_operator_instructions___Yv3N\",\"translating_operator_container\":\"RouterLocalizationForm_translating_operator_container__39jsM\",\"translating_operator\":\"RouterLocalizationForm_translating_operator__AgpTS\",\"translating_list_container\":\"RouterLocalizationForm_translating_list_container__3468q\",\"scrolling\":\"RouterLocalizationForm_scrolling__3CUVQ\",\"translating_item_list\":\"RouterLocalizationForm_translating_item_list__Bfdil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pop_wrapper\":\"PopTab_pop_wrapper__2kOzQ\",\"visible\":\"PopTab_visible__2udNm\",\"popped\":\"PopTab_popped__2Imlz\",\"tab_wrapper\":\"PopTab_tab_wrapper__3n1QM\",\"tab\":\"PopTab_tab__2Rm5M\",\"label\":\"PopTab_label__nf1JX\",\"icon\":\"PopTab_icon__irClb\",\"custom\":\"PopTab_custom__V0KHJ\",\"header\":\"PopTab_header__1NqmE\",\"body\":\"PopTab_body__3gIi4\",\"header_label\":\"PopTab_header_label__2YD7z\",\"close\":\"PopTab_close__3O5BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"delimited\":\"ResultRouterForm_delimited__D-_e5\",\"non_delimited\":\"ResultRouterForm_non_delimited__yDNVq\",\"lead_in_sub\":\"ResultRouterForm_lead_in_sub__3oqJC\",\"result_select\":\"ResultRouterForm_result_select__1cu2c\",\"result_select_delimited\":\"ResultRouterForm_result_select_delimited__f-y6Z\",\"should_delimit\":\"ResultRouterForm_should_delimit__1Z8-4\",\"field_number\":\"ResultRouterForm_field_number__2WFxV\",\"delimiter\":\"ResultRouterForm_delimiter__2i5Hr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"titlebar\":\"TitleBar_titlebar__1_zDw\",\"titletext\":\"TitleBar_titletext__3s2we\",\"normal\":\"TitleBar_normal__z0QaD\",\"remove_confirm\":\"TitleBar_remove_confirm__3ywj-\",\"remove_button\":\"TitleBar_remove_button__2lO9D\",\"up_button\":\"TitleBar_up_button__2Imiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"ele\":\"FormElement_ele__1FpYO\",\"border\":\"FormElement_border__3bx0s\",\"error_list\":\"FormElement_error_list__1SrT3\",\"error\":\"FormElement_error__1Peb9\",\"arrow_up\":\"FormElement_arrow_up__2HvAv\",\"send_msg_error\":\"FormElement_send_msg_error__3LIUw\",\"label\":\"FormElement_label__2dN0p\",\"invalid\":\"FormElement_invalid__1fOa-\",\"help_text\":\"FormElement_help_text__a6EcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"IssuesTab_hidden__1l3_C\",\"message\":\"IssuesTab_message__AofWc\",\"header\":\"IssuesTab_header__273ne\",\"issues_wrapper\":\"IssuesTab_issues_wrapper__3mP8X\",\"language\":\"IssuesTab_language__3MoIp\",\"mask\":\"IssuesTab_mask__1b_sl\",\"visible\":\"IssuesTab_visible__2FRUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type_choice\":\"attachments_type_choice__31BXM\",\"url_attachment\":\"attachments_url_attachment__15n4A\",\"remove_upload\":\"attachments_remove_upload__2daMZ\",\"url\":\"attachments_url__3D2oV\",\"remove\":\"attachments_remove__2fxS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"MediaPlayer_player__gYGWS\",\"playing\":\"MediaPlayer_playing__2Jrw_\",\"button\":\"MediaPlayer_button__rRXz1\",\"circles\":\"MediaPlayer_circles__1pr_0\",\"circle_background\":\"MediaPlayer_circle_background__OMPcS\",\"circle_foreground\":\"MediaPlayer_circle_foreground__1L6K9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"drag_helper\":\"DragHelper_drag_helper__a_fFa\",\"visible\":\"DragHelper_visible__1Z4lg\",\"arrow\":\"DragHelper_arrow__YH1ED\",\"tail\":\"DragHelper_tail__12x7O\",\"help_text\":\"DragHelper_help_text__2luNE\",\"head\":\"DragHelper_head__3ViUG\",\"bold\":\"DragHelper_bold__2v--u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"editor\":\"components_editor__36a9s\",\"translating\":\"components_translating__1uBgy\",\"footer\":\"components_footer__1OFgP\",\"download_button\":\"components_download_button__392jz\",\"alert_body\":\"components_alert_body__2Bxt0\",\"alert_modal\":\"components_alert_modal__3xFu-\",\"saving\":\"components_saving__1mebj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"quick_replies\":\"SendMsg_quick_replies__2bre8\",\"attachment\":\"SendMsg_attachment__1JoQl\",\"summary\":\"SendMsg_summary__2c05X\",\"whatsapp\":\"SendMsg_whatsapp__2O95I\",\"facebook\":\"SendMsg_facebook__30JZ8\",\"line\":\"SendMsg_line__LMI4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"CheckboxElement_label__3vFGD\",\"title\":\"CheckboxElement_title__3QShp\",\"description\":\"CheckboxElement_description__3BguK\",\"description_solo\":\"CheckboxElement_description_solo__2o0rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_element\":\"CurrencyElement_form_element__F0wio\",\"transfer\":\"CurrencyElement_transfer__1IAVm\",\"currency\":\"CurrencyElement_currency__278L2\",\"amount\":\"CurrencyElement_amount__fJKsJ\",\"remove\":\"CurrencyElement_remove__3D5_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"options\":\"RandomRouterForm_options__1AgXA\",\"bucket_select\":\"RandomRouterForm_bucket_select__5jt8Q\",\"bucket_list\":\"RandomRouterForm_bucket_list__14I85\",\"bucket_name\":\"RandomRouterForm_bucket_name__t3I5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"params\":\"SubflowRouterForm_params__2LM8K\",\"param\":\"SubflowRouterForm_param__Vq8O7\",\"param_name\":\"SubflowRouterForm_param_name__1GlRT\",\"param_input\":\"SubflowRouterForm_param_input__2fL5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"btn\":\"Button_btn__1hdG6\",\"disabled\":\"Button_disabled__xk6Qi\",\"primary\":\"Button_primary__3PDu-\",\"active\":\"Button_active__3BxT0\",\"secondary\":\"Button_secondary__1LfJY\",\"tertiary\":\"Button_tertiary__3UJsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pill\":\"Pill_pill__3FyMl\",\"clickable\":\"Pill_clickable__24gn3\",\"icon\":\"Pill_icon__QZrb0\",\"large\":\"Pill_large__3mcHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"recipients\":\"SendBroadcast_recipients__1ZSQV\",\"node\":\"SendBroadcast_node__26RLX\",\"to\":\"SendBroadcast_to__25_7K\",\"name\":\"SendBroadcast_name__RNJWu\",\"icon\":\"SendBroadcast_icon__2YfpF\",\"more\":\"SendBroadcast_more__11MJm\",\"message\":\"SendBroadcast_message__6ZIco\",\"line\":\"SendBroadcast_line__3Dm3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"case_list_container\":\"CaseList_case_list_container__3PSnP\",\"scrolling\":\"CaseList_scrolling__2HZTN\",\"case_list\":\"CaseList_case_list__8CbuZ\",\"kase\":\"CaseList_kase__1FwXZ\",\"dnd_icon\":\"CaseList_dnd_icon__2Hrke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"MenuRouterForm_lead_in__253j6\",\"digit\":\"MenuRouterForm_digit__ruJhi\",\"category\":\"MenuRouterForm_category__2Khjv\",\"menu\":\"MenuRouterForm_menu__OrNSa\",\"menu_option\":\"MenuRouterForm_menu_option__2e-jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeout_control_container\":\"TimeoutControl_timeout_control_container__ChGjA\",\"left_section\":\"TimeoutControl_left_section__23W9H\",\"label\":\"TimeoutControl_label__3L-JA\",\"checkbox\":\"TimeoutControl_checkbox__NYV4k\",\"drop_down\":\"TimeoutControl_drop_down__2Yy9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"canvas_background\":\"Canvas_canvas_background__3UutW\",\"canvas\":\"Canvas_canvas__XH7zY\",\"drag_selection\":\"Canvas_drag_selection__3wxA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"language\":\"LanguageSelector_language__3Q3TZ\",\"language_link\":\"LanguageSelector_language_link__32yIO\",\"active\":\"LanguageSelector_active__3RqNy\",\"separator\":\"LanguageSelector_separator__2oanc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ele\":\"SendEmailForm_ele__2CvL5\",\"subject\":\"SendEmailForm_subject__U7jTR\",\"message\":\"SendEmailForm_message__1k6GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"checkbox\":\"SendMsgForm_checkbox__-JOyy\",\"quick_reply_summary\":\"SendMsgForm_quick_reply_summary__DkA4i\",\"existing_quick_replies\":\"SendMsgForm_existing_quick_replies__W866I\",\"existing_quick_reply\":\"SendMsgForm_existing_quick_reply__2C65m\",\"add_quick_replies\":\"SendMsgForm_add_quick_replies__3vLIC\",\"template_text\":\"SendMsgForm_template_text__1zkKJ\",\"variable\":\"SendMsgForm_variable__3mVDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetRunResultForm_form__HNnt4\",\"name\":\"SetRunResultForm_name__1aW9R\",\"value\":\"SetRunResultForm_value__36pab\",\"category\":\"SetRunResultForm_category__TuHWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node\":\"StartSession_node__d1IsL\",\"to\":\"StartSession_to__2uqPY\",\"name\":\"StartSession_name__HfSVl\",\"icon\":\"StartSession_icon__1l-0q\",\"more\":\"StartSession_more__8uoUD\",\"message\":\"StartSession_message__1KRsK\",\"flow\":\"StartSession_flow__zPhXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"counter\":\"Counter_counter__1_pCt\",\"visible\":\"Counter_visible__3Avdq\",\"clickable\":\"Counter_clickable__3pprF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MountScroll_wrapper__1Stx4\",\"pulse\":\"MountScroll_pulse__uwbnk\",\"pulse_animation\":\"MountScroll_pulse_animation__2SL8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"small\":\"TembaSelect_small__1oIi4\",\"normal\":\"TembaSelect_normal__3v4Gh\",\"error\":\"TembaSelect_error__118Nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"small\":\"TextInputElement_small__2eK3R\",\"medium\":\"TextInputElement_medium__3xfPt\",\"option_list\":\"TextInputElement_option_list__18zXF\",\"option_summary\":\"TextInputElement_option_summary__qaT6A\",\"option_signature\":\"TextInputElement_option_signature__3c1zs\",\"option\":\"TextInputElement_option__5N_r_\",\"selected\":\"TextInputElement_selected__2bCI1\",\"first_option\":\"TextInputElement_first_option__2owME\",\"fn_marker\":\"TextInputElement_fn_marker__38I-n\",\"function_help\":\"TextInputElement_function_help__2jwVQ\",\"completion_container\":\"TextInputElement_completion_container__3c00R\",\"options_wrapper\":\"TextInputElement_options_wrapper__2knDu\",\"fn_container\":\"TextInputElement_fn_container__3tmtw\",\"option_name\":\"TextInputElement_option_name__2G-0k\",\"option_examples\":\"TextInputElement_option_examples__2l6sa\",\"example_header\":\"TextInputElement_example_header__3a5qK\",\"example\":\"TextInputElement_example__3MAGO\",\"fn_signature\":\"TextInputElement_fn_signature__efYOL\",\"wrapper\":\"TextInputElement_wrapper__1q0lN\",\"help\":\"TextInputElement_help__1dGMQ\",\"hidden\":\"TextInputElement_hidden__3Xul8\",\"textinput\":\"TextInputElement_textinput__2eOxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheme_selection\":\"AddURNForm_scheme_selection__3qqeb\",\"path\":\"AddURNForm_path__vTuFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"text\":\"SayMsg_text__2WoYr\",\"recording\":\"SayMsg_recording__3JHw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"code\":\"TransferAirtime_code__3WV9i\",\"amount\":\"TransferAirtime_amount__3mMNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optional_text_input\":\"OptionalTextInput_optional_text_input__N6zb8\",\"toggle_link\":\"OptionalTextInput_toggle_link__3-B4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"errors\":\"ValidationFailures_errors__3qGX8\",\"error\":\"ValidationFailures_error__2Q3Gg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"FieldRouterForm_lead_in__ShYLI\",\"field_select\":\"FieldRouterForm_field_select__n0Csy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"draggable\":\"CanvasDraggable_draggable__cqsGq\",\"selected\":\"CanvasDraggable_selected__2GgF7\"};","module.exports = __webpack_public_path__ + \"static/media/map.5e547148.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"message\":\"AssetSelector_message__1viBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type_list\":\"TypeList_type_list__3OATW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"RemoveGroupsForm_checkbox__3W5g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"helpText\":\"StartSessionForm_helpText__2G1ff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"UpdateContactForm_value__19Fyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"AirtimeRouterForm_result_name__IPVnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"DigitsRouterForm_lead_in__1_8u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"ResthookRouterForm_result_name__dcAsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"result_name\":\"WaitRouterForm_result_name__1QlYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"ClassifyRouterForm_link__20QgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"subject\":\"TicketRouterForm_subject__3A23k\",\"body\":\"TicketRouterForm_body__lfD63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"loading\":\"Loading_loading__3-t_e\",\"pulse\":\"Loading_pulse__apphI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"empty_flow\":\"Flow_empty_flow__roKNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"proper\":\"global_proper__rlaqB\"};","import { Methods } from 'components/flow/routers/webhook/helpers';\nimport { FlowTypes, Operators, Types, ContactStatus } from 'config/interfaces';\n\n// we don't concern ourselves with patch versions\nexport const SPEC_VERSION = '13.1';\n\nexport interface Languages {\n  [iso: string]: string;\n}\n\nexport interface Language {\n  name: string;\n  iso: string;\n}\n\nexport interface Environment {\n  date_format: string;\n  time_format: string;\n  timezone: string;\n  languages: string[];\n}\n\nexport interface Endpoints {\n  attachments: string;\n  resthooks: string;\n  recents: string;\n  fields: string;\n  globals: string;\n  groups: string;\n  recipients: string;\n  flows: string;\n  revisions: string;\n  activity: string;\n  labels: string;\n  channels: string;\n  classifiers: string;\n  ticketers: string;\n  users: string;\n  topics: string;\n  environment: string;\n  languages: string;\n  templates: string;\n  simulateStart: string;\n  simulateResume: string;\n  editor: string;\n}\n\nexport interface FlowEditorConfig {\n  localStorage: boolean;\n  endpoints: Endpoints;\n  flow: string;\n  flowType: FlowTypes;\n  showTemplates?: boolean;\n  showDownload?: boolean;\n  mutable?: boolean;\n  debug?: boolean;\n  path?: string;\n  headers?: any;\n  brand: string;\n  onLoad?: () => void;\n  onActivityClicked?: (uuid: string) => void;\n  onChangeLanguage?: (code: string, name: string) => void;\n\n  // help links\n  help: { [key: string]: string };\n\n  // whether to force a save on load\n  forceSaveOnLoad?: boolean;\n\n  filters?: string[];\n}\n\nexport interface LocalizationMap {\n  [lang: string]: {\n    [uuid: string]: any;\n  };\n}\n\nexport interface Result {\n  key: string;\n  name: string;\n  categories: string[];\n  node_uuids: string[];\n}\n\nexport enum DependencyType {\n  channel = 'channel',\n  classifier = 'classifier',\n  contact = 'contact',\n  field = 'field',\n  flow = 'flow',\n  group = 'group',\n  label = 'label',\n  template = 'template'\n}\n\nexport interface Dependency {\n  uuid?: string;\n  key?: string;\n  name: string;\n  type: DependencyType;\n  missing?: boolean;\n  nodes: { [uuid: string]: string[] };\n}\n\nexport interface FlowMetadata {\n  dependencies: Dependency[];\n  waiting_exit_uuids: string[];\n  results: Result[];\n  parent_refs: string[];\n}\n\nexport enum FlowIssueType {\n  MISSING_DEPENDENCY = 'missing_dependency',\n  LEGACY_EXTRA = 'legacy_extra',\n  INVALID_REGEX = 'invalid_regex'\n}\n\nexport interface User {\n  email?: string;\n  first_name?: string;\n  last_name?: string;\n  role?: string;\n  created_on?: string;\n}\n\nexport interface Topic {\n  uuid: string;\n  name: string;\n  created_on?: string;\n}\n\nexport interface FlowIssue {\n  type: FlowIssueType;\n  node_uuid: string;\n  action_uuid: string;\n  description: string;\n  dependency?: Dependency;\n  language?: string;\n  regex?: string;\n}\n\nexport interface FlowDetails {\n  definition: FlowDefinition;\n  issues: FlowIssue[];\n  metadata: FlowMetadata;\n}\n\nexport interface FlowDefinition {\n  localization: LocalizationMap;\n  language: string;\n  name: string;\n  nodes: FlowNode[];\n  uuid: string;\n  revision: number;\n  spec_version: string;\n  _ui: UIMetaData;\n}\n\nexport interface FlowNode {\n  uuid: string;\n  actions: Action[];\n  exits: Exit[];\n  router?: Router;\n}\n\nexport interface Exit {\n  uuid: string;\n  destination_uuid?: string;\n}\n\nexport enum RouterTypes {\n  switch = 'switch',\n  random = 'random'\n}\n\nexport interface Router {\n  type: RouterTypes;\n  result_name?: string;\n  categories: Category[];\n  wait?: Wait;\n}\n\nexport interface Channel {\n  uuid: string;\n  name: string;\n}\n\nexport interface Case {\n  uuid: string;\n  type: Operators;\n  category_uuid: string;\n  arguments?: string[];\n  omit_operand?: boolean;\n}\n\nexport interface Category {\n  uuid: string;\n  name: string;\n  exit_uuid: string;\n}\n\nexport interface TemplateTranslation {\n  language: string;\n  status: string;\n  content: string;\n}\n\nexport interface Template {\n  created_on: Date;\n  modified_on: Date;\n  translations: TemplateTranslation[];\n}\n\nexport interface SwitchRouter extends Router {\n  cases: Case[];\n  operand: string;\n  default_category_uuid: string;\n}\n\nexport enum WaitTypes {\n  msg = 'msg',\n  dial = 'dial'\n}\n\nexport enum HintTypes {\n  digits = 'digits',\n  audio = 'audio',\n  image = 'image',\n  video = 'video',\n  location = 'location'\n}\n\nexport interface Hint {\n  type: HintTypes;\n  count?: number;\n}\n\nexport interface Timeout {\n  category_uuid: string;\n  seconds: number;\n}\n\nexport interface Wait {\n  type: WaitTypes;\n  timeout?: Timeout;\n  hint?: Hint;\n  phone?: string;\n}\n\nexport interface Group {\n  uuid?: string;\n  name?: string;\n  name_match?: string;\n}\n\nexport interface Contact {\n  uuid: string;\n  name: string;\n}\n\nexport interface ChangeGroups extends Action {\n  groups: Group[];\n}\n\nexport interface RemoveFromGroups extends ChangeGroups {\n  all_groups: boolean;\n}\n\nexport interface Field {\n  key: string;\n  name: string;\n}\n\nexport interface Label {\n  uuid: string;\n  name: string;\n  name_match?: string;\n}\n\nexport interface Flow {\n  uuid: string;\n  name: string;\n}\n\nexport interface Action {\n  type: Types;\n  uuid: string;\n}\n\nexport interface SetContactField extends Action {\n  field: Field;\n  value: string;\n}\n\nexport interface SetContactName extends Action {\n  type: Types.set_contact_name;\n  name: string;\n}\n\nexport interface SetContactLanguage extends Action {\n  type: Types.set_contact_language;\n  language: string;\n}\n\nexport interface SetContactChannel extends Action {\n  type: Types.set_contact_channel;\n  channel: Channel;\n}\n\nexport interface SetContactStatus extends Action {\n  type: Types.set_contact_status;\n  status: ContactStatus;\n}\n\nexport type SetContactProperty =\n  | SetContactName\n  | SetContactLanguage\n  | SetContactChannel\n  | SetContactStatus;\n\nexport type SetContactAttribute = SetContactField | SetContactProperty;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Missing extends Action {}\n\nexport interface RecipientsAction extends Action {\n  contacts: Contact[];\n  groups: Group[];\n  legacy_vars?: string[];\n}\n\nexport interface TemplateTranslation {\n  channel: Channel;\n  content: string;\n  language: string;\n  status: string;\n  variable_count: number;\n}\n\nexport interface TemplateOptions {\n  translations: TemplateTranslation[];\n}\n\nexport interface MsgTemplate {\n  name: string;\n  uuid: string;\n}\n\nexport interface MsgTemplating {\n  uuid: string;\n  template: MsgTemplate;\n  variables: string[];\n}\n\nexport interface SendMsg extends Action {\n  text: string;\n  all_urns?: boolean;\n  quick_replies?: string[];\n  attachments?: string[];\n  topic?: string;\n  templating?: MsgTemplating;\n}\n\nexport interface SayMsg extends Action {\n  text: string;\n  audio_url?: string;\n}\n\nexport interface PlayAudio extends Action {\n  audio_url: string;\n}\n\nexport interface BroadcastMsg extends RecipientsAction {\n  text: string;\n}\n\nexport interface AddLabels extends Action {\n  labels: Label[];\n}\n\nexport interface AddURN extends Action {\n  scheme: string;\n  path: string;\n}\n\nexport interface SetPreferredChannel extends Action {\n  language: string;\n}\n\nexport interface SendEmail extends Action {\n  subject: string;\n  body: string;\n  addresses: string[];\n}\n\nexport interface SetRunResult extends Action {\n  name: string;\n  value: string;\n  category?: string;\n}\n\nexport interface Headers {\n  [name: string]: string;\n}\n\nexport interface Classifier {\n  uuid: string;\n  name: string;\n}\n\nexport interface Ticketer {\n  uuid: string;\n  name: string;\n}\n\nexport interface TransferAirtime extends Action {\n  amounts: { [name: string]: number };\n  result_name: string;\n}\n\nexport interface CallClassifier extends Action {\n  classifier: Classifier;\n  input: string;\n  result_name: string;\n}\n\nexport interface CallResthook extends Action {\n  resthook: string;\n  result_name: string;\n}\n\nexport interface CallWebhook extends Action {\n  url: string;\n  method: Methods;\n  result_name: string;\n  body?: string;\n  headers?: Headers;\n}\n\nexport interface OpenTicket extends Action {\n  ticketer: Ticketer;\n  subject?: string;\n  topic?: Topic;\n  body: string;\n  result_name: string;\n  assignee?: User;\n}\n\nexport interface StartFlow extends Action {\n  flow: Flow;\n}\n\nexport interface StartSession extends RecipientsAction {\n  flow: Flow;\n  create_contact?: boolean;\n  contact_query?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  languages: { [iso: string]: string }[];\n  translation_filters?: { categories: boolean; rules: boolean };\n}\n\nexport interface FlowPosition {\n  left: number;\n  top: number;\n  right?: number;\n  bottom?: number;\n}\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface UIConfig {\n  [key: string]: any;\n}\n\nexport interface UINode {\n  position: FlowPosition;\n  // ui type, used for split by expression, contact field, etc\n  type?: Types;\n  config?: UIConfig;\n}\n\nexport interface StickyNote {\n  position: FlowPosition;\n  title: string;\n  body: string;\n  color?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  stickies: { [key: string]: StickyNote };\n}\n\nexport type AnyAction =\n  | Action\n  | ChangeGroups\n  | SetContactField\n  | SetContactName\n  | SetRunResult\n  | SendMsg\n  | SetPreferredChannel\n  | SendEmail\n  | CallClassifier\n  | CallWebhook\n  | StartFlow\n  | StartSession;\n\nexport enum ContactProperties {\n  UUID = 'uuid',\n  'Created By' = 'created_by',\n  'Modified By' = 'modified_by',\n  Org = 'org',\n  Name = 'name',\n  Language = 'language',\n  Status = 'status',\n  Timezone = 'timezone',\n  Channel = 'channel',\n  Email = 'email',\n  Mailto = 'mailto',\n  Phone = 'phone',\n  Groups = 'groups'\n}\n\nexport enum ValueType {\n  text = 'text',\n  numeric = 'numeric',\n  datetime = 'datetime',\n  state = 'state',\n  district = 'district',\n  ward = 'ward'\n}\n\nexport interface CreateOptions {\n  promptTextCreator?: any;\n  newOptionCreator?: any;\n  isValidNewOption?: any;\n  isOptionUnique?: any;\n  createNewOption?: any;\n  createPrompt?: string;\n}\n\nexport enum StartFlowArgs {\n  Complete = 'C',\n  Expired = 'E'\n}\n\nexport enum StartFlowExitNames {\n  Complete = 'Complete',\n  Expired = 'Expired'\n}\n\nexport enum WebhookExitNames {\n  Success = 'Success',\n  Failure = 'Failure'\n}\n\nexport enum TransferAirtimeExitNames {\n  Success = 'Success',\n  Failure = 'Failed'\n}\n\nexport enum DialCategoryNames {\n  Answered = 'Answered',\n  NoAnswer = 'No Answer',\n  Busy = 'Busy',\n  Failure = 'Failed'\n}\n\nexport enum DialStatus {\n  answered = 'answered',\n  noAnswer = 'no_answer',\n  busy = 'busy',\n  failure = 'failed'\n}\n","import { Action, Case, Category, Language, MsgTemplating } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\nexport class LocalizedObject {\n  public localizedKeys: { [key: string]: boolean } = {};\n\n  private localizedObject: Action | Category | Case | any;\n  private localized: boolean = false;\n  private iso: string;\n  private name: string;\n  private language: Language;\n\n  constructor(object: Action | Category | Case | MsgTemplating, { id, name }: Asset) {\n    this.localizedObject = object;\n    this.iso = id;\n    this.language = { iso: this.iso, name };\n  }\n\n  public getLanguage(): Language {\n    if (!this.language) {\n      if (this.iso) {\n        this.language = { iso: this.iso, name: this.name };\n      }\n    }\n\n    return this.language;\n  }\n\n  public hasTranslation(key: string): boolean {\n    return key in this.localizedKeys;\n  }\n\n  // We use explicit any here to make this generic across all actions,\n  // note this means we'll attempt to set any property in our localization\n  // dictionary regardless of the object type\n  public addTranslation(key: string, value: any): void {\n    // localization shouldn't side-affect the original object\n    if (!this.localized) {\n      this.localizedObject = Object.assign({}, this.localizedObject);\n      this.localized = true;\n    }\n\n    if (Array.isArray(this.localizedObject[key])) {\n      this.localizedObject[key] = value;\n    } else {\n      if (value.length === 1) {\n        this.localizedObject[key] = value[0];\n      }\n    }\n\n    this.localizedKeys[key] = true;\n  }\n\n  public isLocalized(): boolean {\n    return this.localized;\n  }\n\n  public getObject(): Action | Case | Category | MsgTemplating {\n    return this.localizedObject;\n  }\n}\n\nexport default class Localization {\n  public static translate(\n    object: Action | Category | Case | MsgTemplating,\n    language: Asset,\n    translations?: { [uuid: string]: any }\n  ): LocalizedObject {\n    const localized: LocalizedObject = new LocalizedObject(object, language);\n\n    if (translations) {\n      if (object.uuid in translations) {\n        const values = translations[object.uuid];\n        // We don't want to side affect our action\n        Object.keys(values).forEach(key => {\n          return localized.addTranslation(key, values[key]);\n        });\n      }\n    }\n\n    return localized;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Button.module.scss';\n\nexport enum ButtonTypes {\n  primary = 'primary',\n  secondary = 'secondary',\n  tertiary = 'tertiary'\n}\nexport interface ButtonProps {\n  name: string;\n  onClick: any;\n  disabled?: boolean;\n  type?: ButtonTypes;\n  leftSpacing?: boolean;\n  topSpacing?: boolean;\n  iconName?: string;\n  onRef?: (ele: any) => void;\n}\n\ninterface ButtonState {\n  active: boolean;\n}\n\nexport default class Button extends React.Component<ButtonProps, ButtonState> {\n  constructor(props: ButtonProps) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: true });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: false });\n  }\n\n  public render(): JSX.Element {\n    const { onRef, name, onClick, type, disabled, leftSpacing, topSpacing, iconName } = this.props;\n\n    return (\n      <div\n        ref={onRef}\n        style={{\n          marginLeft: leftSpacing ? 10 : 0,\n          marginTop: topSpacing ? 10 : 0\n        }}\n        onClick={onClick}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n        className={`${styles.btn} ${styles[type!]} ${disabled ? styles.disabled : ''} ${\n          this.state.active ? styles.active : ''\n        }`}\n      >\n        {renderIf(iconName != null)(<span style={{ paddingRight: 4 }} className={iconName} />)}\n        {name}\n      </div>\n    );\n  }\n}\n","import {\n  Action,\n  Case,\n  Category,\n  ContactProperties,\n  FlowPosition,\n  LocalizationMap\n} from 'flowTypes';\nimport { Query } from 'immutability-helper';\nimport * as React from 'react';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Asset, Assets } from 'store/flowContext';\nimport { FormEntry } from 'store/nodeEditor';\nimport { v4 as generateUUID } from 'uuid';\nimport variables from 'variables.module.scss';\n\nexport const V4_UUID = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\nconst LABEL_CHARS = /^[a-zA-Z0-9-][a-zA-Z0-9- ]*$/;\nconst MAX_LABEL_LENGTH = 36;\nconst SNAKED_CHARS = /\\s|-+(?=\\S)/g;\n\nexport const MAX_REFLOW_ATTEMPTS = 100;\nexport const ACTIVITY_INTERVAL = 5000;\nexport const COLLISION_FUDGE = 5;\nexport const GRID_SIZE: number = parseInt(variables.grid_size, 10) || 20;\nexport const NODE_SPACING: number = parseInt(variables.node_spacing, 10) || 10;\nexport const NODE_PADDING: number = parseInt(variables.node_padding, 10) || 10;\nexport const QUIET_NOTE = 2000;\nexport const CONFIRMATION_TIME = 2000;\n\nexport interface BoolMap {\n  [key: string]: boolean;\n}\n\ninterface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\nexport type LabelIdCb = (label?: string, labelKey?: string, valueKey?: string) => string;\n\n/**\n * Adjusts the left and top offsets to a grid\n * @param left horizontal offset\n * @param top vertical offset\n */\nexport const snapToGrid = (left: number, top: number): { left: number; top: number } => {\n  let leftAdjust = left % GRID_SIZE;\n  let topAdjust = top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  return {\n    left: Math.max(left + leftAdjust, 0),\n    top: Math.max(top + topAdjust, 0)\n  };\n};\n\n/**\n * Adjusts the position offsets to a grid\n */\nexport const snapPositionToGrid = (position: FlowPosition): FlowPosition => {\n  let leftAdjust = position.left % GRID_SIZE;\n  let topAdjust = position.top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  const left = Math.max(position.left + leftAdjust, 0);\n  const top = Math.max(position.top + topAdjust, 0);\n  const right = left + position.right - position.left;\n  const bottom = top + position.bottom - position.top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n};\n\n/**\n * Turns a string array into a bool map for constant lookup\n * @param {string[]} array - an array of strings, e.g. contact fields\n * @returns {object} A map of each string\n */\nexport const toBoolMap = (array: string[]): BoolMap =>\n  array.reduce(\n    (map: BoolMap, item: string) => ({\n      ...map,\n      [item]: true\n    }),\n    {}\n  );\n\n/**\n * Inserts commas into numbers where appropriate for better readability\n * @param {number} value - A number, e.g. 10000\n * @returns {string} A comma-separated string, e.g. 10,000\n */\nexport const addCommas = (value: number): string =>\n  value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n/**\n * Replaces spaces with underscores\n * @param {string} value - A space-separated string to be snaked, e.g. a raw flow field name ('my flow field')\n * @returns {string} A snaked string, e.g. 'my_flow_field'\n */\nexport const snakify = (value: string): string =>\n  value\n    .toLowerCase()\n    .trim()\n    .replace(SNAKED_CHARS, '_');\n/**\n * Returns true if a given UUID matches v4 format\n * @param {string} uuid - A version 4 UUID (no braces, uppercase OK)\n * @returns {boolean}\n */\nexport const validUUID = (uuid: string): boolean => V4_UUID.test(uuid);\n\n/**\n * Returns a given string in title case, e.g. 'full name' becomes 'Full Name'\n * @param {string} str - string to be title-cased\n * @returns {string} Title-cased string\n */\nexport const titleCase = (str: string): string =>\n  str.replace(/\\b\\w+/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n\nexport const getSelectClassForEntry = (entry: FormEntry): string => {\n  if (entry && entry.validationFailures && entry.validationFailures.length > 0) {\n    return 'select-invalid';\n  }\n  return '';\n};\n\nexport const getSelectClass = (errors: number): string => {\n  if (errors === 0) {\n    return 'react-select select-base';\n  }\n  // We use a global selector here for react-select\n  return 'react-select select-base select-invalid';\n};\n\nexport const reorderList = (list: any[], startIndex: number, endIndex: number): any[] => {\n  const [removed] = list.splice(startIndex, 1);\n\n  list.splice(endIndex, 0, removed);\n\n  return list;\n};\n\n/**\n * Compares basic objects (no methods and DOM nodes; property order important)\n * @param {object} objA - basic object\n * @param {object} objB - basic object\n * @returns {boolean}\n */\nexport const jsonEqual = (objA: {}, objB: {}): boolean =>\n  JSON.stringify(objA) === JSON.stringify(objB);\n\n/**\n * Checks whether any of a list of error strings contain one or more queries.\n * Used to determine whether a particular error has been encountered.\n */\nexport const hasErrorType = (errors: string[], exps: RegExp[]): boolean => {\n  if (!errors.length) {\n    return false;\n  }\n  for (const error of errors) {\n    for (const exp of exps) {\n      if (error.match(exp)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const getLocalizedObject = (localizations: LocalizedObject[]) => {\n  if (localizations && localizations.length) {\n    return localizations[0];\n  }\n};\n\nexport interface ClickHandler {\n  // onClick: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseUp: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * Creates a simple click handler via onMouseDown and onMouseUp.\n * This is a necessity in order to let jsPlumb manage our element dragging.\n * @param onClick\n */\nexport const createClickHandler = (\n  onClick: (event: React.MouseEvent<HTMLElement>) => void,\n  shouldCancelClick: () => boolean = null,\n  onMouseDown?: (event: React.MouseEvent<HTMLElement>) => void\n): any => {\n  return {\n    onMouseDown: (event: React.MouseEvent<HTMLElement>) => {\n      if (onMouseDown) {\n        onMouseDown(event);\n      }\n    },\n    onMouseUp: (event: React.MouseEvent<HTMLElement>) => {\n      if (!shouldCancelClick || !shouldCancelClick()) {\n        onClick(event);\n      }\n    }\n  };\n};\n\nexport const getLocalization = (\n  obj: Action | Category | Case,\n  localization: LocalizationMap,\n  language: Asset\n) => Localization.translate(obj, language, localization[language.id]);\n\n/** istanbul ignore next */\nexport const dump = (thing: any) => console.log(JSON.stringify(thing, null, 4));\n\n/**\n * Apply emphasis style\n */\nexport const emphasize = (text: string) => <span className=\"emphasize\">{text}</span>;\nexport const ellipsize = (text: string, max: number = 250) => {\n  if (text.length > max) {\n    return text.substr(0, max) + '...';\n  }\n  return text;\n};\n\n/**\n * Does property exist in our ContactProperties enum?\n * @param {string} propertyToCheck - 'name' key on react-select AutoCompleteOption\n */\nexport const propertyExists = (propertyToCheck: string) => {\n  for (const property of Object.keys(ContactProperties)) {\n    if (property.toLowerCase() === propertyToCheck.toLowerCase().trim()) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Should x element be rendered?\n */\nexport const renderIf = (predicate: boolean) => (then: JSX.Element, otherwise?: JSX.Element) =>\n  predicate ? then : otherwise ? otherwise : null;\n\n/**\n * Does the label meet our length requirements?\n * @param {string} label - label created by react-select\n */\nexport const properLabelLength = (label: string = '') =>\n  label.length > 0 && label.length <= MAX_LABEL_LENGTH;\n\n/**\n * Does the label meet our character requirements?\n * @param {string} label\n */\nexport const containsOnlyLabelChars = (label: string = '') => LABEL_CHARS.test(label);\n\n/**\n * Does the label meet our length, character requirements?\n * @param {string} label - label created by react-select\n */\nexport const isValidLabel = (label: string) =>\n  properLabelLength(label) && containsOnlyLabelChars(label);\n\nexport const isRealValue = (obj: any) => obj !== null && obj !== undefined;\n\n/* istanbul ignore next */\nexport const timeStart = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.time(name);\n\n/* istanbul ignore next */\nexport const timeEnd = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.timeEnd(name);\n\nexport const log = (...message: any[]) =>\n  process.env.NODE_ENV === 'development' && console.log(...message);\n\nexport const capitalize = (str: string) =>\n  str.replace(/(?:^|\\s)\\S/g, captured => captured.toUpperCase());\n\nexport const set = (val: any): Query<any> => ({ $set: val });\n\nexport const setTrue = (): Query<true> => set(true);\n\nexport const setFalse = (): Query<false> => set(false);\n\nexport const setNull = (): Query<null> => set(null);\n\nexport const setEmpty = (): Query<string> => set('');\n\nexport const merge = (val: any): Query<any> => ({ $merge: val });\n\nexport const unset = (val: any): Query<any> => ({ $unset: val });\n\nexport const push = (arr: any[]): Query<any[]> => ({ $push: arr });\n\n// tslint:disable-next-line:array-type\nexport const splice = (arr: Array<Array<any>>): Query<Array<Array<any>>> => ({\n  $splice: arr\n});\n\nexport const optionExists = (newOptName: string, options: any[]) =>\n  options.find(({ name }) => name.toLowerCase().trim() === newOptName.toLowerCase().trim())\n    ? true\n    : false;\n\n/* export const isOptionUnique: IsOptionUniqueHandler = ({ option, options, labelKey, valueKey }) =>\n    !propertyExists(option.name) && !optionExists(option.name, options);\n\nexport const isValidNewOption: IsValidNewOptionHandler = ({ label }) => isValidLabel(label);\n*/\n/* export const composeCreateNewOption = ({\n    idCb,\n    type\n}: {\n    idCb: LabelIdCb;\n    type: AssetType;\n}): NewOptionCreatorHandler => ({ label, labelKey, valueKey }) => ({\n    id: idCb(label, labelKey, valueKey),\n    name: label,\n    type,\n    isNew: true\n});*/\n\n/**\n * Deduplicate values in an array.\n * Pass it a key to deduplicate based on obj key.\n */\nexport const uniqueBy = (a: any[], key: string): any[] => {\n  const seen: any = {};\n  return a.filter((item: any) => {\n    const k = item[key];\n    return seen.hasOwnProperty(k) ? false : (seen[k] = true);\n  });\n};\n\nexport const downloadJSON = (obj: any, name: string): void => {\n  const dataStr =\n    'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2));\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n};\n\nexport const fetchAsset = (asset: Asset) => (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    resolve(asset);\n  });\n};\n\nexport let createUUID = (): string => {\n  return generateUUID();\n};\n\nexport const seededUUIDs = (seed: number = 1): any => {\n  let current = seed;\n  const randomNext = () => {\n    const x = Math.sin(current++) * 10000;\n    return x - Math.floor(x);\n  };\n\n  const random = (min: number, max: number): number => {\n    return Math.floor(randomNext() * (max - min) + min);\n  };\n\n  return () => {\n    const randomSeed: number[] = [];\n    for (let idx = 0; idx < 16; idx++) {\n      randomSeed.push(random(0, 250));\n    }\n    return generateUUID({ random: randomSeed });\n  };\n};\n\nexport const range = (start: number, end: number) =>\n  Array.from({ length: end - start }, (v: number, k: number) => k + start);\n\nexport const pluralize = (count: number, noun: string, suffix: string = 's'): string =>\n  `${noun}${count !== 1 ? suffix : ''}`;\n\nexport const hasString = (names: string[], key: string): boolean =>\n  !!names.find((item: string) => item === key);\n\nexport const scalarArrayEquals = (a: any[], b: any[]) =>\n  a.every((value, index) => value === b[index]);\n\nexport const getURNPath = (urn: string) => {\n  return urn.split(':')[1];\n};\n\nexport const copyToClipboard = (text: string) => {\n  navigator.clipboard.writeText(text);\n};\n\nexport const throttle = (func: any, timeout: any) => {\n  let ready: boolean = true;\n\n  return (...args: any) => {\n    if (!ready) {\n      return;\n    }\n\n    ready = false;\n    func(...args);\n    setTimeout(() => {\n      ready = true;\n    }, timeout);\n  };\n};\n\nexport const traceUpdate = (component: any, prevProps: any, prevState?: any) => {\n  const messages: string[] = [];\n  Object.entries(component.props).forEach(\n    ([key, val]) => prevProps[key] !== val && messages.push(`Prop: '${key}' changed`)\n  );\n  if (prevState && component.state) {\n    Object.entries(component.state).forEach(\n      ([key, val]) => prevState[key] !== val && messages.push(`State: '${key}' changed`)\n    );\n  }\n\n  if (messages.length > 0) {\n    log('****  ' + component._reactInternalFiber.type.name + ' changed');\n    messages.forEach((message: string) => {\n      log(message);\n    });\n  }\n};\n\nexport const debounce = (fn: any, quiet: number, closure: any = null) => {\n  if (fn.timeout) {\n    window.clearTimeout(fn.timeout);\n  }\n  fn.timeout = window.setTimeout(closure || fn, quiet);\n};\n\nexport const onNextRender = (fn: any) => {\n  window.setTimeout(fn, 0);\n};\n\nexport const desnake = (text: string): string => {\n  if (!text) {\n    return text;\n  }\n  return text\n    .split('_')\n    .join(' ')\n    .toLowerCase();\n};\n\nexport const bool = (prop: boolean) => {\n  return prop ? 'true' : null;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonProps, ButtonTypes } from 'components/button/Button';\nimport shared from 'components/shared.module.scss';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Dialog.module.scss';\n\nexport enum HeaderStyle {\n  NORMAL = 'normal',\n  BARBER = 'barber'\n}\n\nexport interface ButtonSet {\n  primary: ButtonProps;\n  secondary?: ButtonProps;\n  tertiary?: ButtonProps;\n}\n\nexport interface Tab {\n  name: string;\n  body: JSX.Element;\n  hasErrors?: boolean;\n  icon?: string;\n  checked?: boolean;\n}\n\ninterface Buttons {\n  leftButtons: JSX.Element[];\n  rightButtons: JSX.Element[];\n}\n\nexport interface DialogProps {\n  title: string;\n  subtitle?: string;\n  headerIcon?: string;\n  headerClass?: string;\n  headerStyle?: HeaderStyle;\n  buttons?: ButtonSet;\n  gutter?: JSX.Element;\n  noPadding?: boolean;\n  tabs?: Tab[];\n  className?: string;\n}\n\nexport interface DialogState {\n  activeTab: number;\n}\n\n/**\n * A component that has a front and back and can flip back and forth between them\n */\nexport default class Dialog extends React.Component<DialogProps, DialogState> {\n  private tabFocus: any = null;\n  private primaryButton: any = null;\n\n  constructor(props: DialogProps) {\n    super(props);\n    this.state = {\n      activeTab: -1\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public showTab(index: number): void {\n    this.setState({ activeTab: index });\n  }\n\n  private handlePrimaryButton(onClick: any): void {\n    onClick();\n\n    this.tabFocus = window.setTimeout(() => {\n      let foundTab = false;\n      // focus on a tab with errors\n      (this.props.tabs || []).forEach((tab: Tab, index: number) => {\n        if (tab.hasErrors) {\n          this.setState({ activeTab: index });\n          foundTab = true;\n          return;\n        }\n      });\n\n      if (!foundTab) {\n        // or focus on the main content\n        this.setState({ activeTab: -1 });\n      }\n    }, 0);\n  }\n\n  private handleKey(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && event.shiftKey) {\n      if (this.primaryButton) {\n        event.preventDefault();\n        event.stopPropagation();\n        (event.target as any).blur();\n        this.primaryButton.click();\n        (event.target as any).focus();\n      } else {\n        console.log('No primary button!');\n      }\n    }\n  }\n\n  public componentDidMount(): void {\n    window.document.addEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  public componentWillUnmount(): void {\n    window.clearTimeout(this.tabFocus);\n    window.document.removeEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  private getButtons(): Buttons {\n    const rightButtons: JSX.Element[] = [];\n    const buttons = this.props.buttons || {\n      primary: null,\n      secondary: null,\n      tertiary: null\n    };\n\n    if (buttons.secondary) {\n      rightButtons.push(<Button key={0} type={ButtonTypes.secondary} {...buttons.secondary} />);\n    }\n\n    if (buttons.primary) {\n      rightButtons.push(\n        <Button\n          key={'button_' + buttons.primary.name}\n          onRef={(ref: any) => {\n            this.primaryButton = ref;\n          }}\n          onClick={() => {\n            this.handlePrimaryButton(buttons.primary.onClick);\n          }}\n          leftSpacing={true}\n          name={buttons.primary.name}\n          disabled={buttons.primary.disabled}\n          type={ButtonTypes.primary}\n        />\n      );\n    }\n\n    const leftButtons: JSX.Element[] = [];\n\n    // Our left most button if we have one\n    if (buttons.tertiary) {\n      leftButtons.push(<Button key={0} type={ButtonTypes.tertiary} {...buttons.tertiary} />);\n    }\n\n    return {\n      leftButtons,\n      rightButtons\n    };\n  }\n\n  public render(): JSX.Element {\n    const headerClasses = [styles.header];\n\n    if (this.state.activeTab > -1) {\n      headerClasses.push(styles.clickable);\n    }\n\n    if (this.props.headerClass) {\n      headerClasses.push(shared[this.props.headerClass]);\n    }\n\n    if (this.props.headerIcon) {\n      headerClasses.push(styles.iconed);\n    }\n\n    if (this.props.headerStyle === HeaderStyle.BARBER) {\n      headerClasses.push(styles.barber);\n    }\n\n    const activeClasses = [styles.dialog];\n    const { leftButtons, rightButtons } = this.getButtons();\n\n    if (this.props.className) {\n      activeClasses.push(this.props.className);\n    }\n\n    return (\n      <div className={activeClasses.join(' ')}>\n        {(this.props.tabs || []).length > 0 ? (\n          <div className={styles.tabs}>\n            {(this.props.tabs || []).map((tab: Tab, index: number) => (\n              <div\n                key={'tab_' + tab.name}\n                className={styles.tab + ' ' + (index === this.state.activeTab ? styles.active : '')}\n                onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                  evt.stopPropagation();\n                  this.setState({ activeTab: index });\n                }}\n              >\n                {tab.name} {tab.icon ? <span className={styles.tab_icon + ' ' + tab.icon} /> : null}\n                {tab.checked ? <span className={styles.tab_icon + ' fe-check'} /> : null}\n              </div>\n            ))}\n          </div>\n        ) : null}\n        <div\n          onClick={() => {\n            this.setState({ activeTab: -1 });\n          }}\n          className={headerClasses.join(' ')}\n        >\n          {this.state.activeTab > -1 ? <div className={styles.header_overlay} /> : null}\n          {renderIf(this.props.headerIcon !== undefined)(\n            <span className={`${styles.header_icon} ${this.props.headerIcon}`} />\n          )}\n          <div className={styles.title_container}>\n            <div className={styles.title}>{this.props.title}</div>\n            <div className={styles.subtitle}>{this.props.subtitle}</div>\n          </div>\n        </div>\n        <div className={this.props.noPadding ? '' : styles.content}>\n          {this.state.activeTab > -1\n            ? this.props.tabs![this.state.activeTab].body\n            : this.props.children}\n        </div>\n\n        <div className={styles.footer}>\n          <div className={styles.buttons}>\n            {renderIf(leftButtons.length > 0)(\n              <div className={styles.left_buttons}>{leftButtons}</div>\n            )}\n            {renderIf(this.props.gutter != null)(\n              <div className={styles.gutter}>{this.props.gutter}</div>\n            )}\n            <div className={styles.right_buttons}>{rightButtons}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","enum Constants {\n  UPDATE_EDITOR_STATE = 'UPDATE_EDITOR_STATE',\n  UPDATE_NODE_EDITOR_SETTINGS = 'UPDATE_NODE_EDITOR_SETTINGS',\n  UPDATE_TRANSLATING = 'UPDATE_TRANSLATING',\n  UPDATE_BASE_LANGUAGE = 'UPDATE_BASE_LANGUAGE',\n  UPDATE_LANGUAGES = 'UPDATE_LANGUAGES',\n  UPDATE_LANGUAGE = 'UPDATE_LANGUAGE',\n  UPDATE_FETCHING_FLOW = 'FETCHING_FLOW',\n  UPDATE_DEFINITION = 'UPDATE_DEFINITION',\n  UPDATE_NODE_DRAGGING = 'UPDATE_NODE_DRAGGING',\n  UPDATE_FLOWS = 'UPDATE_FLOWS',\n  UPDATE_PENDING_CONNECTIONS = 'UPDATE_PENDING_CONNECTIONS',\n  REMOVE_PENDING_CONNECTION = 'REMOVE_PENDING_CONNECTION',\n  UPDATE_COMPONENTS = 'UPDATE_COMPONENTS',\n  UPDATE_CONTACT_FIELDS = 'UPDATE_CONTACT_FIELDS',\n  UPDATE_GROUPS = 'UPDATE_GROUPS',\n  UPDATE_RESULT_MAP = 'UPDATE_RESULT_MAP',\n  UPDATE_ASSET_MAP = 'UPDATE_ASSET_MAP',\n  UPDATE_NODES = 'UPDATE_NODES',\n  UPDATE_ISSUES = 'UPDATE_ISSUES',\n  UPDATE_METADATA = 'UPDATE_METADATA',\n  UPDATE_EXITS = 'UPDATE_EXITS',\n  UPDATE_NODE_EDITOR_OPEN = 'UPDATE_NODE_EDITOR_OPEN',\n  UPDATE_CREATE_NODE_POSITION = 'UPDATE_CREATE_NODE_POSITION',\n  UPDATE_DRAG_GROUP = 'UPDATE_DRAG_GROUP',\n  UPDATE_TYPE_CONFIG = 'UPDATE_TYPE_CONFIG',\n  UPDATE_USER_ADDING_ACTION = 'UPDATE_USER_ADDING_ACTION',\n  INCREMENT_SUGGESTED_RESULT_NAME_COUNT = 'INCREMENT_SUGGESTED_RESULT_NAME_COUNT'\n}\n\nexport default Constants;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// TODO: consider chunking out translation files\n// and using something like XHR backend to lazily\n// load only the required language.\n// See https://www.i18next.com/how-to/add-or-load-translations\n\nimport defaults from './defaults.json';\nimport cs from './cs/resource.json';\nimport es from './es/resource.json';\nimport fr from './fr/resource.json';\nimport mn from './mn/resource.json';\nimport ptBR from './pt-br/resource.json';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    detection: {\n      order: ['querystring', 'htmlTag']\n    },\n    resources: {\n      defaults: { translation: defaults },\n      cs: { translation: cs },\n      es: { translation: es },\n      fr: { translation: fr },\n      mn: { translation: mn },\n      'pt-br': { translation: ptBR }\n    },\n    fallbackLng: ['defaults'],\n    interpolation: {\n      prefix: '[[',\n      suffix: ']]'\n    },\n    lowerCaseLng: true\n  });\n\nexport default i18n;\n","import { FlowDefinition, FlowNode, UINode, FlowMetadata, FlowIssue } from 'flowTypes';\nimport { combineReducers, Action } from 'redux';\nimport ActionTypes, {\n  UpdateAssetsAction,\n  UpdateBaseLanguageAction,\n  UpdateContactFieldsAction,\n  UpdateDefinitionAction,\n  UpdateNodesAction,\n  UpdateMetadataAction,\n  UpdateIssuesAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Type } from 'config/interfaces';\nimport { TembaStore } from 'temba-components';\nimport i18n from 'config/i18n';\n\n// tslint:disable:no-shadowed-variable\nexport interface RenderNodeMap {\n  [uuid: string]: RenderNode;\n}\n\nexport interface FlowIssueMap {\n  [uuid: string]: FlowIssue[];\n}\n\nexport interface RenderNode {\n  ui: UINode;\n  node: FlowNode;\n  inboundConnections: { [nodeUUID: string]: string };\n  ghost?: boolean;\n}\n\nexport interface RenderAction {\n  action: Action;\n  config: Type;\n  index?: number;\n}\n\nexport interface FunctionExample {\n  template: string;\n  output: string;\n}\n\nexport interface CompletionOption {\n  name?: string;\n  summary: string;\n\n  // functions\n  signature?: string;\n  detail?: string;\n  examples?: FunctionExample[];\n}\n\nexport interface ContactFields {\n  [snakedFieldName: string]: string;\n}\n\nexport enum AssetType {\n  Channel = 'channel',\n  Classifier = 'classifier',\n  Contact = 'contact',\n  ContactProperty = 'property',\n  Currency = 'currency',\n  Environment = 'environment',\n  Expression = 'expression',\n  Field = 'field',\n  Flow = 'flow',\n  Global = 'global',\n  Group = 'group',\n  Label = 'label',\n  Language = 'language',\n  NameMatch = 'name_match',\n  Remove = 'remove',\n  Resthook = 'resthook',\n  Result = 'result',\n  Revision = 'revision',\n  Scheme = 'scheme',\n  Template = 'template',\n  Ticketer = 'ticketer',\n  URN = 'urn'\n}\n\nexport interface Reference {\n  nodeUUID: string;\n  actionUUID?: string;\n}\n\nexport interface Asset {\n  id: string;\n  name: string;\n  type: AssetType;\n\n  order?: number;\n  references?: Reference[];\n  isNew?: boolean;\n  content?: any;\n}\n\nexport const REMOVE_VALUE_ASSET = {\n  id: AssetType.Remove,\n  name: i18n.t('forms.remove_value', 'Remove Value'),\n  type: AssetType.Remove\n};\n\nexport const DEFAULT_LANGUAGE = {\n  id: 'base',\n  name: 'Default',\n  type: AssetType.Language\n};\n\nexport interface AssetStore {\n  [assetType: string]: Assets;\n}\n\nexport interface AssetMap {\n  [id: string]: Asset;\n}\n\nexport interface Assets {\n  // our local cache of assets\n  items: AssetMap;\n\n  type: AssetType;\n\n  // an optional endpoint to search for more\n  endpoint?: string;\n\n  // option name for the id when fetching remotely\n  id?: string;\n\n  // have our assets already been loaded\n  prefetched?: boolean;\n}\n\nexport interface FlowContext {\n  metadata: FlowMetadata;\n  baseLanguage: Asset;\n  contactFields: ContactFields;\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  issues: FlowIssueMap;\n  assetStore: AssetStore;\n}\n\n// Initial state\nexport const initialState: FlowContext = {\n  definition: null,\n  baseLanguage: null,\n  metadata: {\n    dependencies: [],\n    results: [],\n    waiting_exit_uuids: [],\n    parent_refs: []\n  },\n  contactFields: {},\n  nodes: {},\n  issues: {},\n  assetStore: {}\n};\n\n// Action Creators\nexport const updateDefinition = (definition: FlowDefinition): UpdateDefinitionAction => ({\n  type: Constants.UPDATE_DEFINITION,\n  payload: {\n    definition\n  }\n});\n\nexport const updateNodes = (nodes: RenderNodeMap): UpdateNodesAction => ({\n  type: Constants.UPDATE_NODES,\n  payload: {\n    nodes\n  }\n});\n\nexport const updateIssues = (issues: FlowIssueMap): UpdateIssuesAction => ({\n  type: Constants.UPDATE_ISSUES,\n  payload: {\n    issues\n  }\n});\n\nexport const updateMetadata = (metadata: FlowMetadata): UpdateMetadataAction => {\n  return {\n    type: Constants.UPDATE_METADATA,\n    payload: {\n      metadata\n    }\n  };\n};\n\nexport const updateBaseLanguage = (baseLanguage: Asset): UpdateBaseLanguageAction => ({\n  type: Constants.UPDATE_BASE_LANGUAGE,\n  payload: {\n    baseLanguage\n  }\n});\n\nexport const updateContactFields = (contactFields: ContactFields): UpdateContactFieldsAction => ({\n  type: Constants.UPDATE_CONTACT_FIELDS,\n  payload: {\n    contactFields\n  }\n});\n\nexport const updateAssets = (assets: AssetStore): UpdateAssetsAction => {\n  const store: TembaStore = document.querySelector('temba-store');\n  if (store) {\n    store.setKeyedAssets('results', Object.keys(assets['results'].items));\n  }\n\n  return {\n    type: Constants.UPDATE_ASSET_MAP,\n    payload: {\n      assets\n    }\n  };\n};\n\n// Reducers\nexport const definition = (\n  state: FlowDefinition = initialState.definition,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_DEFINITION:\n      return action.payload.definition;\n    default:\n      return state;\n  }\n};\n\nexport const nodes = (state: {} = initialState.nodes, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODES:\n      return action.payload.nodes;\n    default:\n      return state;\n  }\n};\n\nexport const issues = (state: {} = initialState.issues, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ISSUES:\n      return action.payload.issues;\n    default:\n      return state;\n  }\n};\n\nexport const metadata = (state: FlowMetadata = initialState.metadata, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_METADATA:\n      return action.payload.metadata;\n    default:\n      return state;\n  }\n};\n\nexport const assetStore = (state: AssetStore = initialState.assetStore, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ASSET_MAP:\n      return action.payload.assets;\n    default:\n      return state;\n  }\n};\n\nexport const baseLanguage = (state: Asset = initialState.baseLanguage, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_BASE_LANGUAGE:\n      return action.payload.baseLanguage;\n    default:\n      return state;\n  }\n};\n\nexport const contactFields = (\n  state: ContactFields = initialState.contactFields,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_CONTACT_FIELDS:\n      return action.payload.contactFields;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  definition,\n  nodes,\n  issues,\n  metadata,\n  assetStore,\n  baseLanguage,\n  contactFields\n});\n","export enum FlowTypes {\n  MESSAGING = 'messaging',\n  MESSAGING_BACKGROUND = 'messaging_background',\n  MESSAGING_OFFLINE = 'messaging_offline',\n  VOICE = 'voice',\n  NONE = '-'\n}\n\nexport enum ContactStatus {\n  ACTIVE = 'active',\n  BLOCKED = 'blocked',\n  STOPPED = 'stopped',\n  ARCHIVED = 'archived'\n}\n\nexport enum Types {\n  execute_actions = 'execute_actions',\n  add_contact_urn = 'add_contact_urn',\n  add_contact_groups = 'add_contact_groups',\n  add_input_labels = 'add_input_labels',\n  remove_contact_groups = 'remove_contact_groups',\n  set_contact_channel = 'set_contact_channel',\n  set_contact_field = 'set_contact_field',\n  set_contact_name = 'set_contact_name',\n  set_contact_language = 'set_contact_language',\n  set_contact_status = 'set_contact_status',\n  set_run_result = 'set_run_result',\n  call_classifier = 'call_classifier',\n  call_resthook = 'call_resthook',\n  call_webhook = 'call_webhook',\n  open_ticket = 'open_ticket',\n  send_msg = 'send_msg',\n  send_email = 'send_email',\n  send_broadcast = 'send_broadcast',\n  enter_flow = 'enter_flow',\n  start_session = 'start_session',\n  transfer_airtime = 'transfer_airtime',\n  split_by_airtime = 'split_by_airtime',\n  split_by_expression = 'split_by_expression',\n  split_by_contact_field = 'split_by_contact_field',\n  split_by_run_result = 'split_by_run_result',\n  split_by_run_result_delimited = 'split_by_run_result_delimited',\n  split_by_groups = 'split_by_groups',\n  split_by_intent = 'split_by_intent',\n  split_by_random = 'split_by_random',\n  split_by_resthook = 'split_by_resthook',\n  split_by_ticket = 'split_by_ticket',\n  split_by_scheme = 'split_by_scheme',\n  split_by_subflow = 'split_by_subflow',\n  split_by_webhook = 'split_by_webhook',\n  wait_for_response = 'wait_for_response',\n  wait_for_menu = 'wait_for_menu',\n  wait_for_dial = 'wait_for_dial',\n  wait_for_digits = 'wait_for_digits',\n  wait_for_audio = 'wait_for_audio',\n  wait_for_video = 'wait_for_video',\n  wait_for_location = 'wait_for_location',\n  wait_for_image = 'wait_for_image',\n  missing = 'missing',\n  say_msg = 'say_msg',\n  play_audio = 'play_audio'\n}\n\nexport enum Operators {\n  has_any_word = 'has_any_word',\n  has_all_words = 'has_all_words',\n  has_phrase = 'has_phrase',\n  has_only_phrase = 'has_only_phrase',\n  has_beginning = 'has_beginning',\n  has_text = 'has_text',\n  has_date = 'has_date',\n  has_date_lt = 'has_date_lt',\n  has_date_eq = 'has_date_eq',\n  has_date_gt = 'has_date_gt',\n  has_time = 'has_time',\n  has_number = 'has_number',\n  has_number_between = 'has_number_between',\n  has_number_lt = 'has_number_lt',\n  has_number_lte = 'has_number_lte',\n  has_number_eq = 'has_number_eq',\n  has_number_gte = 'has_number_gte',\n  has_number_gt = 'has_number_gt',\n  has_run_status = 'has_run_status',\n  has_only_text = 'has_only_text',\n  has_group = 'has_group',\n  has_phone = 'has_phone',\n  has_email = 'has_email',\n  has_value = 'has_value',\n  has_district = 'has_district',\n  has_state = 'has_state',\n  has_ward = 'has_ward',\n  has_pattern = 'has_pattern',\n  has_error = 'has_error',\n  has_intent = 'has_intent',\n  has_top_intent = 'has_top_intent',\n  has_category = 'has_category'\n}\n\nexport enum FeatureFilter {\n  HAS_RESTHOOK = 'resthook',\n  HAS_WHATSAPP = 'whatsapp',\n  HAS_AIRTIME = 'airtime',\n  HAS_CLASSIFIER = 'classifier',\n  HAS_TICKETER = 'ticketer',\n  HAS_FACEBOOK = 'facebook',\n  HAS_LOCATIONS = 'locations'\n}\n\nexport interface FlowTypeVisibility {\n  visibility?: FlowTypes[];\n  filter?: FeatureFilter;\n}\n\nexport enum PopTabType {\n  SIMULATOR = 'Simulator',\n  REVISION_HISTORY = 'Revision History',\n  ISSUES_TAB = 'Issues Tab',\n  TRANSLATOR_TAB = 'Translator Tab'\n}\n\nexport interface Type extends FlowTypeVisibility {\n  type: Types;\n  name: string;\n  description: string;\n  component?: any;\n  form?: React.ComponentClass<any>;\n  aliases?: string[];\n  localization?: React.ComponentClass<any>;\n  localizeableKeys?: string[];\n\n  // opportunity to massage our object for display\n  massageForDisplay?: (obj: any) => void;\n}\n\nexport interface Operator extends FlowTypeVisibility {\n  type: Operators;\n  verboseName: string;\n  operands: number;\n  categoryName?: string;\n}\n\nexport interface OperatorMap {\n  [propName: string]: Operator;\n}\n\nexport const VISIBILITY_MESSAGING = [\n  FlowTypes.MESSAGING,\n  FlowTypes.MESSAGING_BACKGROUND,\n  FlowTypes.MESSAGING_OFFLINE\n];\nexport const VISIBILITY_MESSAGING_INTERACTIVE = [FlowTypes.MESSAGING, FlowTypes.MESSAGING_OFFLINE];\nexport const VISIBILITY_VOICE = [FlowTypes.VOICE];\nexport const VISIBILITY_ONLINE = [\n  FlowTypes.MESSAGING,\n  FlowTypes.MESSAGING_BACKGROUND,\n  FlowTypes.VOICE\n];\nexport const VISIBILITY_INTERACTIVE = [\n  FlowTypes.MESSAGING,\n  FlowTypes.MESSAGING_OFFLINE,\n  FlowTypes.VOICE\n];\nexport const VISIBILITY_SURVEYOR = [FlowTypes.MESSAGING_OFFLINE];\nexport const VISIBILITY_HIDDEN = [FlowTypes.NONE];\n","import { AssetType } from 'store/flowContext';\n\nexport const currencies = {\n  ARS: {\n    id: 'ARS',\n    name: 'Argentine Peso',\n    type: AssetType.Currency\n  },\n  AUD: {\n    id: 'AUD',\n    name: 'Australian Dollar',\n    type: AssetType.Currency\n  },\n  BIF: {\n    id: 'BIF',\n    name: 'Burundi Franc',\n    type: AssetType.Currency\n  },\n  BRL: {\n    id: 'BRL',\n    name: 'Brazilian Real',\n    type: AssetType.Currency\n  },\n\n  CAD: {\n    id: 'CAD',\n    name: 'Canadian Dollar',\n    type: AssetType.Currency\n  },\n  CDF: {\n    id: 'CDF',\n    name: 'Congolese Franc',\n    type: AssetType.Currency\n  },\n  CLP: {\n    id: 'CLP',\n    name: 'Chilean Peso',\n    type: AssetType.Currency\n  },\n  COP: {\n    id: 'COP',\n    name: 'Colombian Peso',\n    type: AssetType.Currency\n  },\n  DJF: {\n    id: 'DJF',\n    name: 'Djibouti Franc',\n    type: AssetType.Currency\n  },\n  DOP: {\n    id: 'DOP',\n    name: 'Dominican Peso',\n    type: AssetType.Currency\n  },\n  DZD: {\n    id: 'DZD',\n    name: 'Algerian Dinar',\n    type: AssetType.Currency\n  },\n  EUR: {\n    id: 'EUR',\n    name: 'Euro',\n    type: AssetType.Currency\n  },\n  GBP: {\n    id: 'GBP',\n    name: 'Pound Sterling',\n    type: AssetType.Currency\n  },\n  GHS: {\n    id: 'GHS',\n    name: 'Ghana Cedi',\n    type: AssetType.Currency\n  },\n  GNF: {\n    id: 'GNF',\n    name: 'Guinean Franc',\n    type: AssetType.Currency\n  },\n  KES: {\n    id: 'KES',\n    name: 'Kenyan Shilling',\n    type: AssetType.Currency\n  },\n  LBP: {\n    id: 'LBP',\n    name: 'Lebanese Pound',\n    type: AssetType.Currency\n  },\n  LKR: {\n    id: 'LKR',\n    name: 'Sri Lanka Rupee',\n    type: AssetType.Currency\n  },\n  LRD: {\n    id: 'LRD',\n    name: 'Liberian Dollar',\n    type: AssetType.Currency\n  },\n  MWK: {\n    id: 'MWK',\n    name: 'Malawi Kwacha',\n    type: AssetType.Currency\n  },\n  MXN: {\n    id: 'MXN',\n    name: 'Mexican Peso',\n    type: AssetType.Currency\n  },\n  NAD: {\n    id: 'NAD',\n    name: 'Namibia Dollar',\n    type: AssetType.Currency\n  },\n  NPR: {\n    id: 'NPR',\n    name: 'Nepalese Rupee',\n    type: AssetType.Currency\n  },\n  NZD: {\n    id: 'NZD',\n    name: 'New Zealand Dollar',\n    type: AssetType.Currency\n  },\n  PHP: {\n    id: 'PHP',\n    name: 'Philippine Piso',\n    type: AssetType.Currency\n  },\n  PKR: {\n    id: 'PKR',\n    name: 'Pakistan Rupee',\n    type: AssetType.Currency\n  },\n  RUB: {\n    id: 'RUB',\n    name: 'Russian Ruble',\n    type: AssetType.Currency\n  },\n  RWF: {\n    id: 'RWF',\n    name: 'Rwanda Franc',\n    type: AssetType.Currency\n  },\n  SDG: {\n    id: 'SDG',\n    name: 'Sudanese Pound',\n    type: AssetType.Currency\n  },\n  SGD: {\n    id: 'SGD',\n    name: 'Singapore Dollar',\n    type: AssetType.Currency\n  },\n  SLL: {\n    id: 'SLL',\n    name: 'Leone',\n    type: AssetType.Currency\n  },\n  SOS: {\n    id: 'SOS',\n    name: 'Somali Shilling',\n    type: AssetType.Currency\n  },\n  SRD: {\n    id: 'SRD',\n    name: 'Surinam Dollar',\n    type: AssetType.Currency\n  },\n  SVC: {\n    id: 'SVC',\n    name: 'El Salvador Colon',\n    type: AssetType.Currency\n  },\n  TND: {\n    id: 'TND',\n    name: 'Tunisian Dinar',\n    type: AssetType.Currency\n  },\n  TRY: {\n    id: 'TRY',\n    name: 'Turkish Lira',\n    type: AssetType.Currency\n  },\n  TZS: {\n    id: 'TZS',\n    name: 'Tanzanian Shilling',\n    type: AssetType.Currency\n  },\n  UGX: {\n    id: 'UGX',\n    name: 'Uganda Shilling',\n    type: AssetType.Currency\n  },\n  USD: {\n    id: 'USD',\n    name: 'US Dollar',\n    type: AssetType.Currency\n  },\n  UYU: {\n    id: 'UYU',\n    name: 'Peso Uruguayo',\n    type: AssetType.Currency\n  },\n  UZS: {\n    id: 'UZS',\n    name: 'Uzbekistan Sum',\n    type: AssetType.Currency\n  },\n  VEF: {\n    id: 'VEF',\n    name: 'Bolívar',\n    type: AssetType.Currency\n  },\n  XCD: {\n    id: 'XCD',\n    name: 'East Caribbean Dollar',\n    type: AssetType.Currency\n  },\n  YER: {\n    id: 'YER',\n    name: 'Yemeni Rial',\n    type: AssetType.Currency\n  },\n  ZAR: {\n    id: 'ZAR',\n    name: 'Rand',\n    type: AssetType.Currency\n  },\n  ZMW: {\n    id: 'ZMW',\n    name: 'Zambian Kwacha',\n    type: AssetType.Currency\n  },\n  ZWL: {\n    id: 'ZWL',\n    name: 'Zimbabwe Dollar',\n    type: AssetType.Currency\n  }\n};\n","/* istanbul ignore file */\nimport axios, { AxiosResponse } from 'axios';\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\nimport { Endpoints, Exit, FlowDefinition, SPEC_VERSION, FlowDetails } from 'flowTypes';\nimport { currencies } from 'store/currencies';\nimport { Activity, RecentContact } from 'store/editor';\nimport { Asset, AssetMap, Assets, AssetStore, AssetType } from 'store/flowContext';\nimport { assetListToMap } from 'store/helpers';\nimport { FlowTypes } from 'config/interfaces';\n\n// Configure axios to always send JSON requests\naxios.defaults.headers.post['Content-Type'] = 'application/javascript';\naxios.defaults.responseType = 'json';\naxios.defaults.timeout = 30000;\n\nexport const setHTTPTimeout = (millis: number) => {\n  axios.defaults.timeout = millis;\n};\n\n/**\n * Gets the path activity and the count of active particpants at each node\n * @param {string} flowUUID - The UUID of the current flow\n * @param {string} activityEndpoint - The URL path to the endpoint providing this data\n * @returns {Object} - An object representation of the flow's activty\n */\nexport const getActivity = (\n  activityEndpoint: string,\n  flowUUID: string,\n  headers = {}\n): Promise<Activity> =>\n  new Promise<Activity>((resolve, reject) =>\n    axios\n      .get(`${activityEndpoint}?flow=${flowUUID}`, { headers })\n      .then((response: AxiosResponse) => resolve(response.data as Activity))\n      .catch((error: any) => reject(error))\n  );\n\nexport interface Cancel {\n  reject?: () => void;\n}\n\nexport const saveRevision = (endpoint: string, definition: FlowDefinition): Promise<SaveResult> => {\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  // update the spec version in our def to the current editor version\n  let patch = '0';\n\n  // honor any existing patch increments\n  let release = definition.spec_version.split('.');\n  if (release.length > 2) {\n    patch = release[2];\n  }\n\n  definition.spec_version = [SPEC_VERSION, patch].join('.');\n\n  return new Promise<SaveResult>((resolve, reject) => {\n    axios\n      .post(endpoint, definition, { headers })\n      .then((response: AxiosResponse) => {\n        if (response.status === 200) {\n          resolve(response.data as SaveResult);\n        } else {\n          reject(response);\n        }\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getRecentMessages = (\n  recentsEndpoint: string,\n  exit: Exit,\n  cancel: Cancel\n): Promise<RecentContact[]> =>\n  new Promise<RecentContact[]>((resolve, reject) => {\n    cancel.reject = reject;\n    return axios\n      .get(`${recentsEndpoint}${exit.uuid}/${exit.destination_uuid}/`)\n      .then((response: AxiosResponse) => {\n        const recentcontacts: RecentContact[] = [];\n        for (const row of response.data) {\n          recentcontacts.push({ contact: row.contact, operand: row.operand, time: row.time });\n        }\n\n        resolve(response.data as RecentContact[]);\n      })\n      .catch(error => reject(error));\n  });\n\n/** Get the value for a named cookie */\nexport const getCookie = (name: string): string => {\n  for (const cookie of document.cookie.split(';')) {\n    const idx = cookie.indexOf('=');\n    let key = cookie.substr(0, idx);\n    let value = cookie.substr(idx + 1);\n\n    // no spaces allowed\n    key = key.trim();\n    value = value.trim();\n\n    if (key === name) {\n      return value;\n    }\n  }\n  return null;\n};\n\nexport const postNewAsset = (assets: Assets, payload: any): Promise<Asset> => {\n  // if we have a csrf in our cookie, pass it along as a header\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  return new Promise<Asset>((resolve, reject) => {\n    axios\n      .post(assets.endpoint, payload, { headers })\n      .then((response: AxiosResponse) => {\n        resolve(response.data);\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const fetchAsset = (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    getAssets(assets.endpoint, assets.type, assets.id).then((results: Asset[]) => {\n      resolve(results.find((asset: Asset) => asset.id === id));\n    });\n  });\n};\n\ninterface AssetPage {\n  assets: Asset[];\n  next: string;\n}\n\nexport const getAssetPage = (url: string, type: AssetType, id: string): Promise<AssetPage> => {\n  return new Promise<AssetPage>((resolve, reject) => {\n    axios\n      .get(url)\n      .then((response: AxiosResponse) => {\n        const assets: Asset[] = response.data.results.map((result: any, idx: number) => {\n          const asset = resultToAsset(result, type, id);\n          asset.order = idx;\n          return asset;\n        });\n        resolve({ assets, next: response.data.next });\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getAssets = async (url: string, type: AssetType, id: string): Promise<Asset[]> => {\n  if (!url) {\n    return new Promise<Asset[]>((resolve, reject) => resolve([]));\n  }\n\n  let assets: Asset[] = [];\n  let pageUrl = url;\n  while (pageUrl) {\n    const assetPage = await getAssetPage(pageUrl, type, id);\n    assets = assets.concat(assetPage.assets);\n    pageUrl = assetPage.next;\n  }\n  return assets;\n};\n\nexport const getFlowType = (flow: any) => {\n  switch (flow.type) {\n    case 'message':\n      return FlowTypes.MESSAGING;\n    case 'voice':\n      return FlowTypes.VOICE;\n    case 'background':\n      return FlowTypes.MESSAGING_BACKGROUND;\n    case 'survey':\n      return FlowTypes.MESSAGING_OFFLINE;\n  }\n};\n\nexport const resultToAsset = (result: any, type: AssetType, id: string): Asset => {\n  const idKey = id || 'uuid';\n\n  let assetType = type;\n\n  if (type === AssetType.Flow && result.type) {\n    switch (result.type) {\n      case 'message':\n        result.type = FlowTypes.MESSAGING;\n        break;\n      case 'voice':\n        result.type = FlowTypes.VOICE;\n        break;\n      case 'background':\n        result.type = FlowTypes.MESSAGING_BACKGROUND;\n        break;\n      case 'survey':\n        result.type = FlowTypes.MESSAGING_OFFLINE;\n        break;\n    }\n  }\n\n  if (type !== AssetType.Flow && result.type) {\n    assetType = result.type;\n  }\n\n  const asset: Asset = {\n    name: result.name || result.text || result.label || result[idKey],\n    id: result[idKey],\n    type: assetType\n  };\n\n  delete result[idKey];\n  delete result.name;\n  delete result.text;\n\n  asset.content = result;\n  return asset;\n};\n\nexport const isMatch = (\n  input: string,\n  asset: Asset,\n  shouldExclude: (asset: Asset) => boolean\n): boolean => {\n  if (shouldExclude && shouldExclude(asset)) {\n    return false;\n  }\n\n  const inputLower = input.toLowerCase();\n  // some assets have ids worth matching\n  if (asset.type === AssetType.Currency || asset.type === AssetType.Language) {\n    if (asset.id.toLowerCase().includes(inputLower)) {\n      return true;\n    }\n  }\n  return asset.name.toLowerCase().includes(inputLower);\n};\n\n/**\n * Searches an AssetMap for a substring\n */\nexport const searchAssetMap = (\n  query: string,\n  assets: AssetMap,\n  additionalOptions?: Asset[],\n  shouldExclude?: (asset: Asset) => boolean\n): Asset[] => {\n  const search = query.toLowerCase();\n  let matches = Object.keys(assets)\n    .map(key => assets[key])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  // include our additional matches if we have any\n  matches = matches\n    .concat(additionalOptions || [])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  return matches;\n};\n\nexport const createAssetStore = (endpoints: Endpoints): Promise<AssetStore> => {\n  return new Promise<AssetStore>((resolve, reject) => {\n    const assetStore: AssetStore = {\n      channels: {\n        endpoint: getURL(endpoints.channels),\n        type: AssetType.Channel,\n        items: {}\n      },\n      classifiers: {\n        endpoint: getURL(endpoints.classifiers),\n        type: AssetType.Classifier,\n        items: {}\n      },\n      languages: {\n        endpoint: getURL(endpoints.languages),\n        type: AssetType.Language,\n        items: {},\n        id: 'iso'\n      },\n      flows: {\n        endpoint: getURL(endpoints.flows),\n        type: AssetType.Flow,\n        items: {}\n      },\n      fields: {\n        endpoint: getURL(endpoints.fields),\n        type: AssetType.Field,\n        id: 'key',\n        items: {}\n      },\n      globals: {\n        endpoint: getURL(endpoints.globals),\n        type: AssetType.Global,\n        id: 'key',\n        items: {}\n      },\n      groups: {\n        endpoint: getURL(endpoints.groups),\n        type: AssetType.Group,\n        items: {}\n      },\n      revisions: {\n        endpoint: getURL(endpoints.revisions),\n        type: AssetType.Revision,\n        id: 'id',\n        items: {}\n      },\n      labels: {\n        endpoint: getURL(endpoints.labels),\n        type: AssetType.Label,\n        items: {}\n      },\n      results: {\n        type: AssetType.Result,\n        items: {}\n      },\n      recipients: {\n        endpoint: getURL(endpoints.recipients),\n        type: AssetType.Contact || AssetType.Group || AssetType.URN,\n        items: {},\n        id: 'id'\n      },\n      resthooks: {\n        endpoint: getURL(endpoints.resthooks),\n        type: AssetType.Resthook,\n        id: 'resthook',\n        items: {}\n      },\n      templates: {\n        endpoint: getURL(endpoints.templates),\n        type: AssetType.Template,\n        items: {}\n      },\n      ticketers: {\n        endpoint: getURL(endpoints.ticketers),\n        type: AssetType.Ticketer,\n        items: {}\n      },\n      currencies: {\n        type: AssetType.Currency,\n        id: 'id',\n        items: currencies,\n        prefetched: true\n      }\n    };\n\n    // prefetch some of our assets\n    const fetches: any[] = [];\n    ['languages', 'fields', 'groups', 'labels', 'globals', 'classifiers', 'ticketers'].forEach(\n      (storeId: string) => {\n        const store = assetStore[storeId];\n        fetches.push(\n          getAssets(store.endpoint, store.type, store.id || 'uuid').then((assets: Asset[]) => {\n            store.items = assetListToMap(assets);\n            store.prefetched = true;\n          })\n        );\n      }\n    );\n\n    // wait for our prefetches to finish\n    Promise.all(fetches).then((results: any) => {\n      resolve(assetStore);\n    });\n  });\n};\n\nexport const getFlowDetails = (revisions: Assets, id: string = null): Promise<FlowDetails> => {\n  return new Promise<FlowDetails>((resolve, reject) => {\n    (async () => {\n      let revisionToLoad = id;\n      if (!revisionToLoad) {\n        try {\n          const response = await axios.get(`${revisions.endpoint}?version=${SPEC_VERSION}`);\n          if (response.data.results.length > 0) {\n            revisionToLoad = response.data.results[0].id;\n          }\n        } catch (error) {\n          reject(new Error(\"Couldn't reach revisions endpoint\"));\n        }\n      }\n\n      if (revisionToLoad) {\n        const url = `${revisions.endpoint}${revisionToLoad}?version=${SPEC_VERSION}`;\n        axios\n          .get(url)\n          .then((response: AxiosResponse) => {\n            const details = response.data as FlowDetails;\n            return resolve(details);\n          })\n          .catch(error => reject(error));\n      } else {\n        reject(new Error('No revision found for flow'));\n      }\n    })();\n  });\n};\n\nexport const getBaseURL = (): string => {\n  const location = window.location;\n  return location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n};\n\nexport const getURL = (path: string): string => {\n  let url = path;\n  if (!url.endsWith('/') && url.indexOf('?') === -1 && url.indexOf('groups') === -1) {\n    url += '/';\n  }\n\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    return url;\n  }\n\n  // Set url for netlify deployments\n  // if (process.env.NODE_ENV === \"preview\") {\n  // url = \"/.netlify/functions/\" + url;\n  // }\n\n  const result = `${getBaseURL() + url}`;\n  return result;\n};\n\nexport const showHelpArticle = (link: string) => {\n  window.open(link, 'floweditor_help');\n};\n","import { Contact, Endpoints, Group, RecipientsAction, FlowIssue, FlowIssueType } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings, ValidationFailure } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\nimport { Trans } from 'react-i18next';\nimport shared from 'components/shared.module.scss';\nimport { showHelpArticle } from 'external';\nimport { IssueProps } from '../props';\n\nexport const renderIssues = (issueProps: IssueProps): JSX.Element => {\n  const { issues, helpArticles } = issueProps;\n  if (!issues || issues.length === 0) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: '10px 0px' }}>\n      {issues.map((issue: FlowIssue, num: Number) => {\n        const key = issue.node_uuid + issue.action_uuid + num;\n        return (\n          <div\n            style={{ margin: '6px 0px', display: 'flex', fontSize: '14px', color: 'tomato' }}\n            key={key}\n          >\n            <div\n              style={{ marginRight: '8px', marginTop: '-2px', fontSize: '18px' }}\n              className={`fe-warning`}\n            />\n            <div>{renderIssue(issue, helpArticles)}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const renderIssue = (\n  issue: FlowIssue,\n  helpArticles: { [key: string]: string } = {}\n): JSX.Element => {\n  // worst case, defer to the default description\n  let message: JSX.Element = <>{issue.description}</>;\n\n  if (issue.type === FlowIssueType.MISSING_DEPENDENCY) {\n    message = (\n      <Trans\n        i18nKey=\"issues.missing_dependency\"\n        values={{\n          name: issue.dependency.name || issue.dependency.key,\n          type: issue.dependency.type\n        }}\n      >\n        Cannot find a [[type]] for <span className=\"emphasize\">[[name]]</span>\n      </Trans>\n    );\n  }\n\n  if (issue.type === FlowIssueType.INVALID_REGEX) {\n    message = (\n      <Trans i18nKey=\"issues.legacy_extra\" values={{ regex: issue.regex }}>\n        Invalid regular expression found: [[regex]]\n      </Trans>\n    );\n  }\n\n  if (issue.type === FlowIssueType.LEGACY_EXTRA) {\n    message = (\n      <Trans i18nKey=\"issues.legacy_extra\">Expressions should not reference @legacy_extra</Trans>\n    );\n  }\n\n  const article = helpArticles[issue.type];\n  if (article) {\n    return (\n      <div\n        className={shared.issue_help}\n        onClick={() => {\n          showHelpArticle(article);\n        }}\n      >\n        {message}\n      </div>\n    );\n  }\n\n  return message;\n};\n\nexport const getActionUUID = (nodeSettings: NodeEditorSettings, currentType: string): string => {\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type === currentType) {\n    return nodeSettings.originalAction.uuid;\n  }\n  return createUUID();\n};\n\nexport const getRecipients = (action: RecipientsAction): Asset[] => {\n  let selected: any[] = (action.groups || []).map((group: Group) => {\n    return {\n      id: group.uuid,\n      name: group.name,\n      type: AssetType.Group\n    };\n  });\n\n  selected = selected.concat(\n    (action.contacts || []).map((contact: Contact) => {\n      return { id: contact.uuid, name: contact.name, type: AssetType.Contact, missing: false };\n    })\n  );\n\n  selected = selected.concat(\n    (action.legacy_vars || []).map((expression: string) => {\n      return { name: expression, value: expression, expression: true };\n    })\n  );\n\n  return selected;\n};\n\nexport const renderAssetList = (\n  assets: Asset[],\n  max: number = 10,\n  endpoints: Endpoints\n): JSX.Element[] => {\n  // show our missing ones first\n  return assets.reduce((elements, asset, idx) => {\n    if (idx <= max - 2 || assets.length === max) {\n      elements.push(renderAsset(asset, endpoints));\n    } else if (idx === max - 1) {\n      elements.push(<div key=\"ellipses\">+{assets.length - max + 1} more</div>);\n    }\n    return elements;\n  }, []);\n};\n\nexport const renderAsset = (asset: Asset, endpoints: Endpoints) => {\n  let assetBody = null;\n\n  switch (asset.type) {\n    case AssetType.Classifier:\n      assetBody = (\n        <Trans i18nKey=\"assets.classifier\" values={{ name: asset.name }}>\n          Call [[name]] classifier\n        </Trans>\n      );\n      break;\n    case AssetType.Group:\n      assetBody = (\n        <>\n          <span className={`${shared.node_group} fe-group`} />\n          {asset.name}\n        </>\n      );\n      break;\n    case AssetType.Label:\n      assetBody = (\n        <>\n          <span className={`${shared.node_label} fe-label`} />\n          {asset.name}\n        </>\n      );\n      break;\n    case AssetType.Flow:\n      assetBody = (\n        <>\n          <span className={`${shared.node_label} fe-split`} />\n          <a\n            onMouseDown={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onMouseUp={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            href={`${endpoints.editor}/${asset.id}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {asset.name}\n          </a>\n        </>\n      );\n      break;\n    case AssetType.Ticketer:\n      assetBody = (\n        <Trans i18nKey=\"assets.ticketer\" values={{ name: asset.name }}>\n          Open a new Ticket on [[name]]\n        </Trans>\n      );\n      break;\n  }\n\n  if (!assetBody) {\n    assetBody = asset.name;\n  }\n\n  return (\n    <div className={`${shared.node_asset}`} key={asset.id || (asset as any).value}>\n      {assetBody}\n    </div>\n  );\n};\n\nexport const getAllErrors = (entry: FormEntry): ValidationFailure[] => {\n  return entry ? entry.validationFailures || [] : [];\n};\n\nexport const hasErrors = (entry: FormEntry): boolean => {\n  return getAllErrors(entry).length > 0;\n};\n\nexport const getAllErrorMessages = (entry: FormEntry): string[] => {\n  const errors = getAllErrors(entry).map((failure: ValidationFailure) => failure.message);\n  return errors;\n};\n\nexport const getExpressions = (assets: any[]): any[] => {\n  return assets\n    .filter((asset: any) => asset.expression)\n    .map((asset: any) => {\n      return asset.value;\n    });\n};\n\nexport const getRecipientsByAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { Type } from 'config/interfaces';\nimport { AnyAction, ContactProperties, FlowIssue } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { titleCase } from 'utils';\n\nexport interface IssueProps {\n  helpArticles: { [key: string]: string };\n  issues: FlowIssue[];\n}\n\nexport interface ActionFormProps extends IssueProps {\n  // action details\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n  assetStore: AssetStore;\n\n  addAsset(assetType: string, asset: Asset): void;\n\n  // update handlers\n  updateAction(\n    action: AnyAction,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface RouterFormProps extends IssueProps {\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n\n  assetStore: AssetStore;\n\n  // update handlers\n  updateRouter(renderNode: RenderNode): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface LocalizationFormProps extends IssueProps {\n  language: Asset;\n  nodeSettings: NodeEditorSettings;\n  updateLocalizations(languageCode: string, localizations: any[]): void;\n  onClose(canceled: boolean): void;\n  helpArticles: { [key: string]: string };\n}\n\nexport const NAME_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Name),\n  id: ContactProperties.Name,\n  type: AssetType.ContactProperty\n};\n\nexport const CHANNEL_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Channel),\n  id: ContactProperties.Channel,\n  type: AssetType.ContactProperty\n};\n\nexport const LANGUAGE_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Language),\n  id: ContactProperties.Language,\n  type: AssetType.ContactProperty\n};\n\nexport const STATUS_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Status),\n  id: ContactProperties.Status,\n  type: AssetType.ContactProperty\n};\n","import { FlowEditorConfig } from 'flowTypes';\nimport * as React from 'react';\n\nexport const fakePropType: any = (): any => null;\nfakePropType.isRequired = (): any => null;\n\ninterface ConfigProviderProps {\n  config: FlowEditorConfig;\n  children: any;\n}\n\nexport interface ConfigProviderContext {\n  config: FlowEditorConfig;\n}\n\n// ----------------------------------------------------------------------------------------------\n\nexport const SINGLE_CHILD_ERROR = 'ConfigProvider expects only one child component.';\nexport const VALID_CHILD_ERROR =\n  'ConfigProvider expects a valid React element: https://reactjs.org/docs/react-api.html#isvalidelement';\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  public static childContextTypes = {\n    config: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ConfigProviderProps) {\n    super(props);\n\n    if (React.Children.count(props.children) > 1) {\n      throw new Error(SINGLE_CHILD_ERROR);\n    } else if (!React.isValidElement(props.children)) {\n      throw new Error(VALID_CHILD_ERROR);\n    }\n  }\n\n  public getChildContext(): ConfigProviderContext {\n    return {\n      config: this.props.config\n    };\n  }\n\n  public render(): JSX.Element {\n    return React.Children.only(this.props.children);\n  }\n}\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { AddLabels } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nexport const MAX_TO_SHOW = 5;\n\nconst AddLabelsComp: React.SFC<AddLabels> = ({ labels }, context: any): JSX.Element => {\n  return (\n    <>\n      {renderAssetList(\n        labels.map(label => {\n          if (label.name_match) {\n            return {\n              id: label.name_match,\n              name: label.name_match,\n              type: AssetType.NameMatch\n            };\n          }\n          return {\n            id: label.uuid,\n            name: label.name,\n            type: AssetType.Label\n          };\n        }),\n        MAX_TO_SHOW,\n        context.config.endpoints\n      )}\n    </>\n  );\n};\n\nAddLabelsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default AddLabelsComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { bool, snakify } from 'utils';\nimport styles from './TembaSelect.module.scss';\nimport { Assets } from 'store/flowContext';\n\nexport enum TembaSelectStyle {\n  small = 'small',\n  normal = 'normal'\n}\n\nexport interface TembaSelectProps {\n  name: string;\n  options?: any[];\n  value: any;\n  onChange: (option: any) => void;\n  onFocus?: () => void;\n  shouldExclude?: (option: any) => boolean;\n  disabled?: boolean;\n\n  createPrefix?: string;\n  expressions?: boolean;\n  assets?: Assets;\n  errors?: string[];\n  style?: TembaSelectStyle;\n  endpoint?: string;\n\n  placeholder?: string;\n  searchable?: boolean;\n  multi?: boolean;\n  tags?: boolean;\n\n  cacheKey?: string;\n\n  getName?: (option: any) => string;\n\n  createArbitraryOption?: (input: string) => any;\n\n  nameKey?: string;\n  valueKey?: string;\n\n  sortFunction?(a: any, b: any): number;\n\n  hideError?: boolean;\n\n  clearable?: boolean;\n\n  queryParam?: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface TembaSelectState {}\n\nexport default class TembaSelect extends React.Component<TembaSelectProps, TembaSelectState> {\n  private selectbox: HTMLElement;\n\n  constructor(props: TembaSelectProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public getName(option: any): string {\n    let name = '';\n    if (this.props.getName) {\n      name = this.props.getName(option);\n    }\n\n    if (!name && this.props.nameKey in option) {\n      name = option[this.props.nameKey];\n    }\n\n    if (!name && 'label' in option) {\n      name = option['label'];\n    }\n\n    if (!name) {\n      name = option['name'];\n    }\n    return name;\n  }\n\n  public getValue(option: any): string {\n    return option[this.props.valueKey || 'value'];\n  }\n\n  public isMatch(a: any, b: any): boolean {\n    if (a && b) {\n      if (Array.isArray(a)) {\n        return a.find((option: any) => this.getValue(option) === this.getValue(b));\n      } else {\n        return this.getValue(a) === this.getValue(b);\n      }\n    }\n    return false;\n  }\n\n  public componentDidUpdate(prevProps: TembaSelectProps): void {\n    if (this.props.options !== prevProps.options) {\n      const selectbox = this.selectbox as any;\n      if (selectbox.setOptions) {\n        selectbox.setOptions(this.props.options);\n      }\n    }\n  }\n\n  public componentDidMount(): void {\n    const select = this;\n    // add the option to create groups abitrarily\n    if (this.props.createPrefix) {\n      (this.selectbox as any).createArbitraryOption = (input: string, options: any[]) => {\n        if (input.indexOf('@') === -1) {\n          var existing = options.find(function(option: any) {\n            const name = select.getName(option);\n            return !!(name.toLowerCase().trim() === input.toLowerCase().trim());\n          });\n          if (!existing) {\n            if (this.props.createArbitraryOption) {\n              return this.props.createArbitraryOption(input);\n            }\n\n            return {\n              prefix: this.props.createPrefix,\n              name: input,\n              id: 'created',\n              post: true\n            };\n          }\n        }\n      };\n    }\n\n    const selectbox = this.selectbox as any;\n\n    if (this.props.options) {\n      if (selectbox.setOptions) {\n        selectbox.setOptions(this.props.options);\n      }\n    }\n\n    if (this.props.sortFunction) {\n      selectbox.sortFunction = this.props.sortFunction;\n    }\n\n    if (this.props.shouldExclude) {\n      selectbox.shouldExclude = this.props.shouldExclude;\n    }\n\n    selectbox.getName = select.getName.bind(select);\n\n    this.selectbox.addEventListener('change', (event: any) => {\n      const values = event.target.values || [event.target.value];\n\n      let resolved = values;\n\n      if (!this.props.assets && !this.props.tags && !this.props.endpoint) {\n        resolved = values.map((op: any) => {\n          const result = (this.props.options || []).find(\n            (option: any) => this.getValue(option) === this.getValue(op)\n          );\n          if (!result && this.props.createPrefix) {\n            return op;\n          }\n          return result;\n        });\n\n        resolved.forEach((option: any) => {\n          if (!option) {\n            throw new Error('No option found for selection');\n          }\n        });\n      }\n\n      if (this.props.onChange) {\n        if (this.props.multi) {\n          this.props.onChange(resolved);\n        } else {\n          this.props.onChange(resolved[0]);\n        }\n      }\n    });\n  }\n\n  public isFocused(): boolean {\n    return (this.selectbox as any).focused;\n  }\n\n  public render(): JSX.Element {\n    let selectedArray: any[] = [];\n    if (this.props.value && !Array.isArray(this.props.value)) {\n      selectedArray = [this.props.value];\n    } else if (Array.isArray(this.props.value)) {\n      selectedArray = this.props.value;\n    }\n\n    const values = JSON.stringify(selectedArray);\n\n    return (\n      <div\n        className={\n          styles[this.props.style || TembaSelectStyle.normal] +\n          ' ' +\n          ((this.props.errors || []).length > 0 ? styles.error : '')\n        }\n      >\n        <temba-select\n          ref={(ele: any) => {\n            this.selectbox = ele;\n          }}\n          data-testid={`temba_select_${snakify(this.props.name)}`}\n          onFocus={this.props.onFocus}\n          nameKey={this.props.nameKey || 'name'}\n          valueKey={this.props.valueKey || 'value'}\n          name={this.props.name}\n          cacheKey={this.props.cacheKey}\n          expressions={this.props.expressions ? 'session' : ''}\n          endpoint={this.props.assets ? this.props.assets.endpoint : this.props.endpoint}\n          values={values}\n          errors={JSON.stringify(this.props.errors ? this.props.errors : [])}\n          hideErrors={this.props.hideError}\n          placeholder={this.props.placeholder}\n          searchable={bool(this.props.searchable)}\n          multi={bool(this.props.multi)}\n          disabled={this.props.disabled}\n          clearable={this.props.clearable}\n          tags={this.props.tags}\n          queryParam={this.props.queryParam}\n        />\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport * as React from 'react';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { renderIf } from 'utils';\n\nimport styles from './FormElement.module.scss';\nimport { hasErrors } from 'components/flow/actions/helpers';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface FormElementProps {\n  name: string;\n  helpText?: string | JSX.Element;\n  entry?: FormEntry;\n  showLabel?: boolean;\n  __className?: string;\n  border?: boolean;\n  sendMsgError?: boolean;\n  kaseError?: boolean;\n  attribError?: boolean;\n  hideError?: boolean;\n}\n\nexport default class FormElement extends React.PureComponent<FormElementProps> {\n  constructor(props: FormElementProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^get/, /^has/]\n    });\n  }\n  private getName(): JSX.Element {\n    return renderIf(\n      this.props.showLabel &&\n        this.props.name !== undefined &&\n        this.props.name !== null &&\n        this.props.name.length > 0\n    )(<div className={styles.label}>{this.props.name}</div>);\n  }\n\n  private getHelpText(): JSX.Element {\n    return renderIf(this.props.helpText != null)(\n      <div className={styles.help_text}>{this.props.helpText} </div>\n    );\n  }\n\n  private hasErrors(): boolean {\n    return hasErrors(this.props.entry);\n  }\n\n  private getValidationErrors(): ValidationFailure[] {\n    if (this.props.entry) {\n      return this.props.entry.validationFailures || [];\n    }\n    return [];\n  }\n\n  private getErrors(): JSX.Element {\n    if (this.hasErrors() && !this.props.hideError) {\n      const errors = this.getValidationErrors().map((failure, idx) => {\n        const className = cx({\n          [styles.error]: true,\n          [styles.send_msg_error]: this.props.sendMsgError === true\n        });\n        return (\n          <div key={idx} className={className}>\n            <div className={styles.arrow_up} />\n            <div>{failure.message}</div>\n          </div>\n        );\n      });\n      return <div className={styles.error_list}>{errors}</div>;\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const name: JSX.Element = this.getName();\n    const helpText: JSX.Element = this.getHelpText();\n    const errorsToDisplay: JSX.Element = this.getErrors();\n\n    const className = cx({\n      [styles.ele]: true,\n      [styles.border]: this.props.border,\n      [styles.invalid]: this.hasErrors(),\n      [this.props.__className]: this.props.__className !== undefined\n    });\n\n    return (\n      <div className={className}>\n        {name}\n        {this.props.children}\n        {helpText}\n        {errorsToDisplay}\n      </div>\n    );\n  }\n}\n","import { Template } from 'flowTypes';\nimport { Asset, REMOVE_VALUE_ASSET } from 'store/flowContext';\n\n/**\n * Sorts all search results by name\n */\nexport const sortByName = (a: Asset, b: Asset): number => {\n  if (a.type === REMOVE_VALUE_ASSET.type) {\n    return -1;\n  }\n\n  if (b.type === REMOVE_VALUE_ASSET.type) {\n    return 1;\n  }\n\n  if (a.type && b.type && a.type !== b.type) {\n    return b.type.localeCompare(a.type);\n  }\n\n  if (a.name && b.name) {\n    return a.name.localeCompare(b.name);\n  }\n  return 0;\n};\n\nexport const hasPendingTranslation = (template: Template) => {\n  return !!template.translations.find(translation => translation.status === 'pending');\n};\n\nexport const hasUseableTranslation = (template: Template) => {\n  return !!template.translations.find(\n    translation => translation.status === 'pending' || translation.status === 'approved'\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport { postNewAsset, searchAssetMap } from 'external';\nimport * as React from 'react';\nimport { Asset, Assets, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport { AssetEntry } from 'store/nodeEditor';\n\nimport styles from './AssetSelector.module.scss';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\nimport { sortByName } from './helpers';\n\nexport interface AssetSelectorProps extends FormElementProps {\n  assets?: Assets;\n  onChange: (selected: Asset[]) => void;\n\n  // a function to exclude assets when matching\n  shouldExclude?: (asset: Asset) => boolean;\n\n  // override how a name is determined\n  getName?: (option: any) => string;\n\n  // should options not in the list be allowed\n  allowArbitrary?: boolean;\n\n  // allow expression entry\n  expressions?: boolean;\n\n  // more options to consider when searching\n  additionalOptions?: any[];\n\n  placeholder?: string;\n  searchable?: boolean;\n\n  // do we give the clearing option (trash)\n  valueClearable?: boolean;\n\n  // do we present an x to clear the form\n  formClearable?: boolean;\n\n  onFilter?: (asset: Asset) => boolean;\n\n  // creation options\n  createPrefix?: string;\n  onAssetCreated?: (asset: Asset) => void;\n  createAssetFromInput?: (input: string) => Asset;\n\n  // supports multiple selection\n  multi?: boolean;\n\n  // overrids default message when no options to show\n  noOptionsMessage?: string;\n\n  style?: TembaSelectStyle;\n\n  // override default sorting function\n  sortFunction?(a: any, b: any): number;\n\n  nameKey?: string;\n  valueKey?: string;\n}\n\ninterface AssetSelectorState {\n  defaultOptions: Asset[];\n  entry: AssetEntry;\n  isLoading: boolean;\n  message?: string;\n}\n\nexport default class AssetSelector extends React.Component<AssetSelectorProps, AssetSelectorState> {\n  private lastCreation: number = 0;\n\n  private options: any[] = [];\n\n  constructor(props: AssetSelectorProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^is/, /^handle/, /^get/]\n    });\n\n    let defaultOptions: Asset[] = [];\n\n    // or it should be a list of local assets from an empty search\n    if (props.assets && !props.assets.endpoint) {\n      defaultOptions = searchAssetMap('', props.assets.items);\n    }\n\n    this.options = this.props.additionalOptions || [];\n    if (this.props.valueClearable) {\n      this.options.push(REMOVE_VALUE_ASSET);\n    }\n\n    // if we don't have an endpoint, populate our options with items\n    if (this.props.assets && !this.props.assets.endpoint) {\n      this.options = this.options.concat(\n        Object.keys(this.props.assets.items).map((id: string) => this.props.assets.items[id])\n      );\n    }\n\n    this.state = {\n      defaultOptions,\n      entry: this.props.entry,\n      isLoading: false\n    };\n  }\n\n  public static getDerivedStateFromProps(\n    nextProps: AssetSelectorProps,\n    prevState: AssetSelectorState\n  ): Partial<AssetSelectorState> {\n    // the default options should be true if there is an endpoint\n    let entry = nextProps.entry;\n\n    // if we don't know our entry name, look for it\n    if (prevState.defaultOptions && entry.value && !entry.value.name) {\n      const existing = prevState.defaultOptions.find((asset: Asset) => asset.id === entry.value.id);\n      if (existing) {\n        entry = { value: existing };\n      }\n    }\n\n    return { entry };\n  }\n\n  private handleChanged(selected: any): void {\n    if (selected) {\n      selected = Array.isArray(selected) ? selected : [selected];\n\n      // do we have an asset to create\n      const toCreate = selected.find((option: any) => option.arbitrary);\n      if (toCreate) {\n        // filter it out\n        selected = selected.filter((option: any) => !option.arbitrary);\n        this.handleCreateOption(toCreate.name);\n      } else {\n        this.props.onChange(selected);\n      }\n    } else {\n      this.props.onChange(selected);\n    }\n    this.setState({ message: null });\n  }\n\n  public handleLoadingComplete(): void {\n    this.setState({ isLoading: false });\n  }\n\n  public handleClearMessage(): void {\n    if (this.state.message) {\n      this.setState({ message: null });\n    }\n  }\n\n  public handleCreateArbitraryOption(input: string): any {\n    return { prefix: this.props.createPrefix, name: input, id: 'created' };\n  }\n\n  public handleCreateOption(input: string): void {\n    // this is a hack due to react-select triggering two creates in a race\n    const now = new Date().getTime();\n    if (now - this.lastCreation < 1000) {\n      return;\n    }\n\n    this.lastCreation = now;\n    // mark us as loading\n    const asset: Asset = this.props.createAssetFromInput(input);\n\n    if (this.props.assets && this.props.assets.endpoint) {\n      this.setState({ isLoading: true, message: null });\n      postNewAsset(this.props.assets, asset)\n        .then((result: Asset) => {\n          this.setState({ isLoading: false });\n          this.props.onAssetCreated(result);\n          // this.props.onChange([...(this.state.entry.value as any)]);\n        })\n        .catch(error => {\n          let suffix = '';\n          if (error.response && error.response.data && error.response.data.non_field_errors) {\n            suffix = ' ' + error.response.data.non_field_errors.join(', ');\n          }\n          this.setState({\n            message: `Couldn't create new ${this.props.assets.type} \"${input}\".${suffix}`,\n            isLoading: false\n          });\n        });\n    } else {\n      this.props.onChange([asset]);\n    }\n  }\n\n  public getName(option: any) {\n    if (this.props.getName) {\n      return this.props.getName(option);\n    }\n  }\n\n  public render(): JSX.Element {\n    const fallbackPlaceholder = i18n.t(\n      'asset_selector.placeholder',\n      'Select existing [[name]] or enter a new one',\n      { name: this.props.name.toLocaleLowerCase(), count: this.props.multi ? 1000 : 1 }\n    );\n\n    return (\n      <FormElement\n        name={this.props.name}\n        entry={this.props.entry}\n        showLabel={this.props.showLabel}\n        helpText={this.props.helpText}\n        __className={styles.ele}\n      >\n        <TembaSelect\n          name={this.props.name}\n          style={this.props.style}\n          onChange={this.handleChanged}\n          nameKey={this.props.nameKey || 'name'}\n          createArbitraryOption={this.handleCreateArbitraryOption}\n          valueKey={\n            this.props.valueKey || (this.props.assets ? this.props.assets.id : undefined) || 'uuid'\n          }\n          getName={this.props.getName}\n          createPrefix={this.props.createPrefix}\n          shouldExclude={this.props.shouldExclude}\n          assets={this.props.assets}\n          placeholder={this.props.placeholder || fallbackPlaceholder}\n          multi={this.props.multi}\n          expressions={this.props.expressions}\n          value={this.state.entry.value}\n          errors={this.state.message ? [this.state.message] : []}\n          searchable={this.props.searchable}\n          cacheKey={this.lastCreation + ''}\n          options={this.options}\n          sortFunction={this.props.sortFunction || sortByName}\n          queryParam={\n            this.props.assets && this.props.assets.type === AssetType.Contact ? 'search' : null\n          }\n        />\n      </FormElement>\n    );\n  }\n}\n","import {\n  FlowTypes,\n  FlowTypeVisibility,\n  Operator,\n  Type,\n  VISIBILITY_ONLINE\n} from 'config/interfaces';\nimport { FlowEditorConfig } from 'flowTypes';\n\nexport const isOnlineFlowType = (flowType: FlowTypes) => {\n  return !!VISIBILITY_ONLINE.find((type: FlowTypes) => type === flowType);\n};\n\nexport const filterOperators = (operators: Operator[], config: FlowEditorConfig): Operator[] => {\n  return filterVisibility(operators, config);\n};\n\nexport const filterTypeConfigs = (typeConfigs: Type[], config: FlowEditorConfig): Type[] => {\n  return filterVisibility(typeConfigs, config);\n};\n\nconst filterVisibility = (items: FlowTypeVisibility[], config: FlowEditorConfig): any[] => {\n  return items.filter((item: FlowTypeVisibility) => {\n    // if we have a filter on our type, don't return it unless its present in our config\n    if (item.filter) {\n      if (!(config.filters || []).find((name: string) => name === item.filter)) {\n        return false;\n      }\n    }\n\n    if (item.visibility === undefined) {\n      return true;\n    }\n\n    return item.visibility.findIndex((ft: FlowTypes) => ft === config.flowType) > -1;\n  });\n};\n","import { fakePropType } from 'config/ConfigProvider';\nimport { filterTypeConfigs } from 'config/helpers';\nimport { Type } from 'config/interfaces';\nimport { configsToDisplay } from 'config/typeConfigs';\nimport * as React from 'react';\nimport i18n from 'config/i18n';\nimport styles from './TypeList.module.scss';\nimport TembaSelect from 'temba/TembaSelect';\n\nexport interface TypeListProps {\n  __className: string;\n  initialType: Type;\n  onChange(config: Type): void;\n}\n\nexport interface TypeListState {\n  config: Type;\n}\n\nexport default class TypeList extends React.PureComponent<TypeListProps, TypeListState> {\n  private typeConfigs: Type[];\n\n  constructor(props: TypeListProps) {\n    super(props);\n\n    this.state = {\n      config: this.props.initialType\n    };\n\n    this.handleChangeType = this.handleChangeType.bind(this);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleChangeType(config: Type): void {\n    this.setState({ config }, () => this.props.onChange(config));\n  }\n\n  private getTypeConfigs(): Type[] {\n    if (this.typeConfigs === undefined) {\n      this.typeConfigs = filterTypeConfigs(configsToDisplay, this.context.config);\n    }\n    return this.typeConfigs;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={`${this.props.__className} ${styles.type_list}`}>\n        <p>{i18n.t('forms.type_label', 'When a contact arrives at this point in your flow...')}</p>\n        <div>\n          <TembaSelect\n            key=\"type_select\"\n            name=\"type\"\n            onChange={this.handleChangeType}\n            nameKey=\"description\"\n            valueKey=\"type\"\n            value={this.state.config}\n            options={this.getTypeConfigs()}\n            searchable={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as headerUtils from 'http-headers-validation';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport i18n from 'config/i18n';\nimport { Topic, User } from 'flowTypes';\n\nexport type FormInput =\n  | string\n  | string[]\n  | number\n  | Asset\n  | Asset[]\n  | SelectOption\n  | SelectOption[]\n  | User\n  | Topic;\nexport type ValidatorFunc = (\n  name: string,\n  input: FormInput\n) => { failures: ValidationFailure[]; value: FormInput };\n\n// Courtesy of @diegoperini: https://gist.github.com/dperini/729294\n// Expected behavior: https://mathiasbynens.be/demo/url-regex\nconst REGEX_URL = new RegExp(\n  '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)' +\n    // user:pass authentication\n    '(?:\\\\S+(?:u:\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$',\n  'i'\n);\n\nconst inputAsString = (input: FormInput): string => {\n  let value = input;\n  if (typeof input === 'string') {\n    return value + '';\n  }\n\n  // if we are an object consider the name to match assets\n  if (input && typeof input === 'object') {\n    value = (input as any).name || undefined;\n  }\n\n  return value ? value + '' : null;\n};\n\nconst fromMaxItems = (max: number): ValidatorFunc => (name: string, input: FormInput) => {\n  if (Array.isArray(input)) {\n    const items = input as string[];\n    if (items.length > max) {\n      return {\n        value: input,\n        failures: [{ message: `${name} cannot have more than ${max} entries` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nconst fromRegex = (regex: RegExp, message: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  const value = inputAsString(input);\n  if (value) {\n    if (!regex.test(value)) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${message}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const validate = (\n  name: string,\n  input: FormInput,\n  validators: ValidatorFunc[]\n): FormEntry => {\n  let allFailures: ValidationFailure[] = [];\n  let value = input;\n  validators.forEach(validateFunc => {\n    const validation = validateFunc(name, input);\n    value = validation.value;\n    allFailures = allFailures.concat(validation.failures);\n  });\n\n  return { value, validationFailures: allFailures };\n};\n\nexport const Empty: ValidatorFunc = (name: string, input: FormInput) => {\n  const isNotFinished = i18n.t('forms.is_not_finished', 'is not finished');\n\n  if (input) {\n    return { value: input, failures: [{ message: `${name} ${isNotFinished}` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${isNotFinished}` }]\n      };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${isNotFinished}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Required: ValidatorFunc = (name: string, input: FormInput) => {\n  const isRequired = i18n.t('forms.is_required', 'is required');\n\n  if (!input) {\n    return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length === 0) {\n      return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length === 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${i18n.t('forms.are_required', 'are required')}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Regex: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    const inputString = input as string;\n\n    if (inputString.trim().startsWith('@')) {\n      return { failures: [], value: input };\n    }\n\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new RegExp(inputString);\n    } catch (e) {\n      return {\n        value: input,\n        failures: [\n          {\n            message: `${name} ${i18n.t('forms.is_not_a_valid_regex', 'is not a valid regex')}`\n          }\n        ]\n      };\n    }\n  }\n\n  return { failures: [], value: input };\n};\n\nexport const LessThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) >= amount) {\n      return {\n        value: input,\n        failures: [\n          {\n            message: `${name} ${i18n.t(\n              'forms.must_be_less_than',\n              'must be less than'\n            )} ${checkName}`\n          }\n        ]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MoreThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) <= amount) {\n      return {\n        value: input,\n        failures: [{ message: `${name} must be a more than ${checkName}` }]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const shouldRequireIf = (required: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (required) {\n    return Required(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const validateIf = (func: ValidatorFunc, predicate: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (predicate) {\n    return func(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const HeaderName: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    if (input.trim().length > 0 && !headerUtils.validateHeaderName(input)) {\n      return { failures: [{ message: 'Invalid header name' }], value: input };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const IsValidIntent = (classifier: Asset): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'object') {\n    const option = input as SelectOption;\n\n    if (option && classifier && classifier.content) {\n      const exists = !!classifier.content.intents.find((intent: string) => intent === option.value);\n      if (!exists) {\n        return {\n          value: input,\n          failures: [{ message: `${option.value} is not a valid intent for ${classifier.name}` }]\n        };\n      }\n    }\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MaxOfTenItems = fromMaxItems(10);\nexport const StartIsNonNumeric = fromRegex(/^(?!\\d)/, \"can't start with a number\");\nexport const ValidURL = fromRegex(REGEX_URL, 'is not a valid URL');\nexport const Numeric = fromRegex(/^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\nexport const Alphanumeric = fromRegex(/^[a-z\\d\\-_\\s]+$/i, 'can only have letters and numbers');\nexport const NumOrExp = fromRegex(/^@.*$|^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\n","import { hasErrors } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Type } from 'config/interfaces';\nimport { Scheme } from 'config/typeConfigs';\nimport { AnyAction } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { combineReducers } from 'redux';\nimport { LocalizedObject } from 'services/Localization';\nimport ActionTypes, {\n  UpdateNodeEditorSettings,\n  UpdateTypeConfigAction,\n  UpdateUserAddingActionAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode } from 'store/flowContext';\n\n// tslint:disable:no-shadowed-variable\nexport interface ValidationFailure {\n  message: string;\n}\n\nexport interface FormEntry {\n  value: any;\n  validationFailures?: ValidationFailure[];\n}\n\nexport interface SelectOptionEntry extends FormEntry {\n  value: SelectOption;\n}\n\nexport interface NumberEntry extends FormEntry {\n  value: number;\n}\n\nexport interface StringEntry extends FormEntry {\n  value: string;\n}\n\nexport interface SchemeEntry extends FormEntry {\n  value: Scheme;\n}\n\nexport interface StringArrayEntry extends FormEntry {\n  value: string[];\n}\n\nexport interface AssetEntry extends FormEntry {\n  value: Asset;\n}\n\nexport interface AssetArrayEntry extends FormEntry {\n  value: Asset[] | null;\n}\n\nexport interface SelectOptionArrayEntry extends FormEntry {\n  value: SelectOption[] | null;\n}\n\nexport const mergeForm = (\n  form: FormState,\n  toMerge: Partial<FormState>,\n  toRemove: any[] = []\n): FormState => {\n  // TODO: deal with explicit array setting\n  let updated = form || {};\n  // we auto update array items with uuids\n  for (const key of Object.keys(toMerge)) {\n    const entry: any = (toMerge as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        // we support objects with uuids or FormEntry's with uuids\n        const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n\n        if ((isEntry && item.value.uuid) || item.uuid) {\n          const existingIdx = (form as any)[key].findIndex((existing: any) => {\n            if (isEntry) {\n              return existing.value.uuid === item.value.uuid;\n            } else {\n              return existing.uuid === item.uuid;\n            }\n          });\n\n          if (existingIdx > -1) {\n            // we found a match, merge us in\n            updated = mutate(updated, {\n              [key]: { $merge: { [existingIdx]: item } }\n            }) as FormState;\n          } else {\n            // couldn't find it, lets push it on\n            updated = mutate(updated, {\n              [key]: { $push: [item] }\n            }) as FormState;\n          }\n        }\n      }\n\n      // remove it from our merge\n      delete (toMerge as any)[key];\n    }\n  }\n\n  // removals can be items in an array\n  for (const remove of toRemove.filter((item: any) => typeof item === 'object')) {\n    for (const key of Object.keys(remove)) {\n      const entry: any = remove[key];\n      if (Array.isArray(entry)) {\n        for (const item of entry) {\n          // we support objects with uuids or FormEntry's with uuids\n          const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n          if ((isEntry && item.value.uuid) || item.uuid) {\n            updated = mutate(updated, {\n              [key]: (items: any) =>\n                items.filter((existing: any) => {\n                  if (isEntry) {\n                    return existing.value.uuid !== item.value.uuid;\n                  } else {\n                    return existing.uuid !== item.uuid;\n                  }\n                })\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const removeKeys = toRemove.filter((item: any) => typeof item === 'string');\n  updated = mutate(updated, {\n    $merge: toMerge,\n    $unset: removeKeys\n  }) as FormState;\n\n  let valid = true;\n  for (const key of Object.keys(form)) {\n    const entry: any = (updated as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        if (hasErrors(item)) {\n          valid = false;\n          break;\n        }\n      }\n    } else if (entry && typeof entry === 'object') {\n      if (hasErrors(entry)) {\n        valid = false;\n        break;\n      }\n    }\n  }\n\n  return mutate(updated, { $merge: { valid } }) as FormState;\n};\n\nexport interface FormState {\n  validationFailures?: ValidationFailure[];\n  valid: boolean;\n}\n\nexport interface NodeEditorSettings {\n  originalNode: RenderNode;\n  showAdvanced?: boolean;\n  originalAction?: AnyAction;\n  localizations?: LocalizedObject[];\n}\n\nexport interface NodeEditor {\n  typeConfig: Type | null;\n  userAddingAction: boolean;\n  settings: NodeEditorSettings | null;\n}\n\n// Initial state\nexport const initialState: NodeEditor = {\n  typeConfig: null,\n  userAddingAction: false,\n  settings: null\n};\n\n// Action Creators\nexport const updateTypeConfig = (typeConfig: Type): UpdateTypeConfigAction => ({\n  type: Constants.UPDATE_TYPE_CONFIG,\n  payload: {\n    typeConfig\n  }\n});\n\nexport const updateNodeEditorSettings = (\n  settings: NodeEditorSettings\n): UpdateNodeEditorSettings => ({\n  type: Constants.UPDATE_NODE_EDITOR_SETTINGS,\n  payload: {\n    settings\n  }\n});\n\nexport const updateUserAddingAction = (\n  userAddingAction: boolean\n): UpdateUserAddingActionAction => ({\n  type: Constants.UPDATE_USER_ADDING_ACTION,\n  payload: {\n    userAddingAction\n  }\n});\n\n// Reducers\nexport const typeConfig = (state: Type | null = initialState.typeConfig, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_TYPE_CONFIG:\n      return action.payload!.typeConfig;\n    default:\n      return state;\n  }\n};\n\nexport const userAddingAction = (\n  state: boolean = initialState.userAddingAction,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_USER_ADDING_ACTION:\n      return action.payload!.userAddingAction;\n    default:\n      return state;\n  }\n};\n\nexport const settings = (\n  state: NodeEditorSettings | null = initialState.settings,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODE_EDITOR_SETTINGS:\n      return action.payload!.settings;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  typeConfig,\n  userAddingAction,\n  settings\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface AddLabelsFormState extends FormState {\n  labels: any;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddLabelsForm extends React.PureComponent<\n  ActionFormProps,\n  AddLabelsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleLabelsChanged(this.state.labels.value!, true);\n\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleLabelsChanged(selected: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<AddLabelsFormState> = {\n      labels: validate(i18n.t('forms.labels', 'Labels'), selected, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  public handleLabelCreated(label: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('labels', label);\n\n    this.handleLabelsChanged(this.state.labels.value!.concat(label));\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_labels_summary\">\n            Select the labels to apply to the incoming message.\n          </Trans>\n        </p>\n\n        <AssetSelector\n          name={i18n.t('forms.labels', 'Labels')}\n          placeholder={i18n.t(\n            'enter_to_create_label',\n            'Enter the name of an existing label or create a new one'\n          )}\n          assets={this.props.assetStore.labels}\n          entry={this.state.labels}\n          searchable={true}\n          multi={true}\n          expressions={true}\n          onChange={this.handleLabelsChanged}\n          createPrefix={i18n.t('create_label', 'Create Label') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleLabelCreated}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { AddLabelsFormState } from 'components/flow/actions/addlabels/AddLabelsForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { AddLabels, Label } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): AddLabelsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_input_labels) {\n    const action = settings.originalAction as AddLabels;\n    return {\n      labels: {\n        value: action.labels.map((label: Label) => {\n          if (label.name_match) {\n            return { name: label.name_match, expression: true };\n          }\n          return label;\n        })\n      },\n      valid: true\n    };\n  }\n\n  return {\n    labels: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: AddLabelsFormState\n): AddLabels => {\n  const result = {\n    type: Types.add_input_labels,\n    labels: formState.labels.value.map((label: any) => {\n      if (label.expression) {\n        return { name_match: label.name };\n      }\n      return label;\n    }),\n    uuid: getActionUUID(settings, Types.add_input_labels)\n  };\n  return result;\n};\n","import { AddURNFormState } from 'components/flow/actions/addurn/AddURNForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { Scheme, SCHEMES } from 'config/typeConfigs';\nimport { AddURN } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const getSchemeOptions = (): SelectOption[] => {\n  return SCHEMES.map((scheme: Scheme) => {\n    return schemeToSelectOption(scheme);\n  });\n};\n\nexport const getSchemeObject = (scheme: string): Scheme => {\n  return SCHEMES.find((item: Scheme) => item.scheme === scheme)!;\n};\n\nexport const getSchemeSelectOption = (scheme: string): SelectOption =>\n  schemeToSelectOption(getSchemeObject(scheme));\n\nexport const schemeToSelectOption = (scheme: Scheme): SelectOption => {\n  return { value: scheme.scheme, name: scheme.path };\n};\n\nexport const initializeForm = (settings: NodeEditorSettings): AddURNFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_urn) {\n    const { scheme, path } = settings.originalAction as AddURN;\n\n    return {\n      scheme: { value: getSchemeSelectOption(scheme) },\n      path: { value: path },\n      valid: true\n    };\n  }\n\n  return {\n    scheme: { value: getSchemeSelectOption('tel') },\n    path: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, formState: AddURNFormState): AddURN => {\n  return {\n    type: Types.add_contact_urn,\n    uuid: getActionUUID(settings, Types.add_input_labels),\n    scheme: formState.scheme.value.value,\n    path: formState.path.value\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport { StringEntry } from 'store/nodeEditor';\nimport { createTextInput } from './helpers';\n\nimport styles from './TextInputElement.module.scss';\nexport enum Count {\n  SMS = 'SMS'\n}\n\nexport enum TextInputStyle {\n  small = 'small',\n  medium = 'medium',\n  normal = 'normal'\n}\n\nexport interface TextInputProps extends FormElementProps {\n  entry?: StringEntry;\n  __className?: string;\n  count?: Count;\n  textarea?: boolean;\n  placeholder?: string;\n  autocomplete?: boolean;\n  focus?: boolean;\n  showInvalid?: boolean;\n  maxLength?: number;\n  counter?: string;\n  style?: TextInputStyle;\n  onChange?: (value: string, name?: string) => void;\n  onBlur?: (event: React.ChangeEvent) => void;\n}\n\nexport default class TextInputElement extends React.Component<TextInputProps> {\n  constructor(props: TextInputProps) {\n    super(props);\n\n    let initial = '';\n    if (this.props.entry && this.props.entry.value) {\n      initial = this.props.entry.value;\n    }\n\n    this.state = {\n      value: initial\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /Ref$/, 'setSelection', 'validate', /^has/, /^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    // return this.props.focus && this.focusInput();\n  }\n\n  public handleChange({ currentTarget: { value } }: any): void {\n    if (this.props.onChange) {\n      this.props.onChange(value, this.props.name);\n    }\n  }\n\n  public render(): JSX.Element {\n    const charCount: JSX.Element =\n      this.props.count && this.props.count === Count.SMS ? (\n        <temba-charcount text={this.props.entry.value}></temba-charcount>\n      ) : null;\n\n    const optional: any = {};\n    if (this.props.textarea) {\n      optional['textarea'] = true;\n    }\n\n    if (this.props.counter) {\n      optional['counter'] = this.props.counter;\n    }\n\n    return (\n      <FormElement\n        __className={this.props.__className}\n        name={this.props.name}\n        helpText={this.props.helpText}\n        showLabel={this.props.showLabel}\n        // errors={this.state.errors}\n        entry={this.props.entry}\n      >\n        <div className={styles.wrapper + ' ' + styles[this.props.style || TextInputStyle.normal]}>\n          {createTextInput(this.props, this.handleChange, optional)}\n          {charCount}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import * as React from 'react';\nimport { AddURN } from 'flowTypes';\n\nimport { getSchemeObject } from './helpers';\nimport i18n from 'config/i18n';\nimport { emphasize } from 'utils';\n\nexport const MAX_TO_SHOW = 5;\n\nconst AddURNComp: React.SFC<AddURN> = ({ scheme, path }): JSX.Element => {\n  const schemeObject = getSchemeObject(scheme);\n  const schemeName = schemeObject ? schemeObject.path : scheme;\n  return (\n    <>\n      {i18n.t('add', 'Add')} {schemeName} {emphasize(path)}\n    </>\n  );\n};\n\nexport default AddURNComp;\n","import FormElement, { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\nimport { getAllErrorMessages } from 'components/flow/actions/helpers';\n\ninterface SelectElementProps extends FormElementProps {\n  onChange?(value: any, action?: any): void;\n  onMenuOpen?: () => void;\n  onMenuClose?: () => void;\n  options: any;\n\n  style?: TembaSelectStyle;\n  placeholder?: string;\n  clearable?: boolean;\n\n  multi?: boolean;\n  styles?: any;\n\n  nameKey?: string;\n  valueKey?: string;\n\n  disabled?: boolean;\n}\n\nexport interface SelectOption {\n  name: string;\n  value: string;\n}\n\nexport default class SelectElement extends React.Component<SelectElementProps> {\n  public render(): JSX.Element {\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <TembaSelect\n          key={this.props.name + '_select'}\n          name={this.props.name}\n          nameKey={this.props.nameKey}\n          valueKey={this.props.valueKey}\n          placeholder={this.props.placeholder}\n          onChange={this.props.onChange}\n          value={this.props.entry.value}\n          options={this.props.options}\n          searchable={false}\n          errors={getAllErrorMessages(this.props.entry)}\n          hideError={this.props.hideError}\n          style={this.props.style}\n          multi={this.props.multi}\n          disabled={this.props.disabled}\n          clearable={this.props.clearable}\n        ></TembaSelect>\n      </FormElement>\n    );\n  }\n}\n","import * as React from 'react';\nimport { TextInputProps } from './TextInputElement';\n\nexport const createTextInput = (props: TextInputProps, handleChange: any, optional: any) => {\n  return props.autocomplete ? (\n    <temba-completion\n      name={props.name}\n      onInput={handleChange}\n      onBlur={props.onBlur}\n      value={props.entry.value}\n      placeholder={props.placeholder || ''}\n      maxLength={props.maxLength || -1}\n      session\n      {...optional}\n    ></temba-completion>\n  ) : (\n    <temba-textinput\n      name={props.name}\n      onInput={handleChange}\n      onBlur={props.onBlur}\n      value={props.entry.value}\n      placeholder={props.placeholder}\n      maxLength={props.maxLength || -1}\n      {...optional}\n    ></temba-textinput>\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './AddURNForm.module.scss';\nimport { getSchemeOptions, initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface AddURNFormState extends FormState {\n  scheme: SelectOptionEntry;\n  path: StringEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddURNForm extends React.PureComponent<ActionFormProps, AddURNFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handlePathChanged(this.state.path.value, null, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleSchemeChanged(selected: SelectOption): boolean {\n    const updates: Partial<AddURNFormState> = {\n      scheme: { value: selected }\n    };\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handlePathChanged(value: string, name: string, submitting: boolean = false): boolean {\n    const updates: Partial<AddURNFormState> = {\n      path: validate(i18n.t('forms.urn', 'URN'), value, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_urn_summary\">\n            Add a new URN to reach the contact such as a phone number.\n          </Trans>\n        </p>\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n          <div className={styles.scheme_selection}>\n            <SelectElement\n              key={'urn_type_select'}\n              name={i18n.t('forms.urn_type', 'URN Type')}\n              entry={this.state.scheme}\n              onChange={this.handleSchemeChanged}\n              options={getSchemeOptions()}\n            />\n          </div>\n          <div className={styles.path}>\n            <TextInputElement\n              name={i18n.t('forms.urn', 'URN')}\n              placeholder={i18n.t('forms.enter_urn_value', 'Enter the URN value')}\n              entry={this.state.path}\n              onChange={this.handlePathChanged}\n              autocomplete={true}\n            />\n          </div>\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { CallResthook } from 'flowTypes';\n\nconst CallResthookComp: React.SFC<CallResthook> = ({ resthook }): JSX.Element => (\n  <div>{resthook}</div>\n);\n\nexport default CallResthookComp;\n","import * as React from 'react';\nimport { CallWebhook } from 'flowTypes';\nimport { ellipsize } from 'utils';\n\nconst CallWebhookComp: React.SFC<CallWebhook> = ({ url }): JSX.Element => (\n  <div>{ellipsize(url, 150)}</div>\n);\n\nexport default CallWebhookComp;\n","import { Group } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { FormState } from 'store/nodeEditor';\n\nexport const labelSpecId = 'label';\n\nexport interface ChangeGroupsFormState extends FormState {\n  groups: any;\n  removeAll?: boolean;\n}\n\nexport const excludeDynamicGroups = (group: any): boolean => {\n  return !!group.query;\n};\n\nexport const mapGroupsToAssets = (groups: Group[]): Asset[] => {\n  return groups.map(({ name, uuid, name_match }) => {\n    if (name_match) {\n      return { name: name_match, id: name_match, type: AssetType.NameMatch };\n    }\n    return { name, id: uuid, type: AssetType.Group };\n  });\n};\n\nexport const mapAssetsToGroups = (searchResults: Asset[] | null): Group[] => {\n  if (!searchResults) {\n    return [];\n  }\n\n  const groups = searchResults.map(result => {\n    if (!result.id || result.id === result.name) {\n      return {\n        name_match: result.name\n      };\n    }\n    return {\n      uuid: result.id,\n      name: result.name\n    };\n  });\n\n  return groups;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { ChangeGroupsFormState, excludeDynamicGroups, labelSpecId } from '../helpers';\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../../helpers';\n\nexport default class AddGroupsForm extends React.Component<ActionFormProps, ChangeGroupsFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleGroupsChanged(groups: any[], submitting: boolean = false): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {\n      groups: validate(i18n.t('forms.groups', 'Groups'), groups, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupAdded(group: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('groups', group);\n\n    // try to add the group\n    this.handleGroupsChanged((this.state.groups.value || []).concat(group), false);\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={labelSpecId}>\n          <Trans i18nKey=\"forms.add_groups_summary\">Select the groups to add the contact to.</Trans>\n        </p>\n\n        <AssetSelector\n          name={i18n.t('forms.groups', 'Groups')}\n          multi={true}\n          noOptionsMessage={i18n.t('enter_to_create_group', 'Enter a name to create a new group')}\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          onChange={this.handleGroupsChanged}\n          searchable={true}\n          shouldExclude={excludeDynamicGroups}\n          placeholder={i18n.t('forms.select_groups', 'Select Groups')}\n          expressions={true}\n          // Groups can be created on the fly\n          createPrefix={i18n.t('forms.create_group', 'Create Group') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleGroupAdded}\n        />\n\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { ChangeGroupsFormState } from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups, Group } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_groups) {\n    const action = settings.originalAction as ChangeGroups;\n    return {\n      groups: {\n        value: action.groups.map((group: Group) => {\n          if (group.name_match) {\n            return { name: group.name_match, expression: true };\n          }\n          return group;\n        })\n      },\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  nodeSettings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): ChangeGroups => {\n  return {\n    type: Types.add_contact_groups,\n    groups: state.groups.value.map((group: any) => {\n      if (group.expression) {\n        return { name_match: group.name };\n      }\n      return group;\n    }),\n    uuid: getActionUUID(nodeSettings, Types.add_contact_groups)\n  };\n};\n","import { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups, Endpoints } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nexport const removeAllSpecId = 'remove_from_all';\nexport const contentSpecId = 'content';\nexport const removeAllText = 'Remove from all groups';\n\nexport const MAX_TO_SHOW = 5;\nexport const getRemoveAllMarkup = (\n  key = removeAllSpecId,\n  specId = removeAllSpecId,\n  text = removeAllText\n) => (\n  <div key={key} data-spec={specId}>\n    {text}\n  </div>\n);\n\nexport const getContentMarkup = (\n  { type, groups }: ChangeGroups,\n  endpoints?: Endpoints\n): JSX.Element[] => {\n  const content = [];\n\n  if (type === Types.remove_contact_groups && (!groups || !groups.length)) {\n    content.push(getRemoveAllMarkup());\n  } else {\n    return renderAssetList(\n      groups.map(group => {\n        if (group.name_match) {\n          return {\n            id: group.name_match,\n            name: group.name_match,\n            type: AssetType.NameMatch\n          };\n        }\n        return {\n          id: group.uuid,\n          name: group.name,\n          type: AssetType.Group\n        };\n      }),\n      MAX_TO_SHOW,\n      endpoints!\n    );\n  }\n\n  return content;\n};\n\nexport const getChangeGroupsMarkup = (\n  action: ChangeGroups,\n  endpoints?: Endpoints,\n  specId = contentSpecId\n) => <div data-spec={specId}>{getContentMarkup(action, endpoints)}</div>;\n\nconst ChangeGroupsComp: React.SFC<ChangeGroups> = (props: any, context: any): JSX.Element => {\n  return getChangeGroupsMarkup(props, context.config.endpoints);\n};\n\nChangeGroupsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default ChangeGroupsComp;\n","import classNames from 'classnames/bind';\nimport { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport { isRealValue, renderIf } from 'utils';\n\nimport styles from './CheckboxElement.module.scss';\n\nexport interface CheckboxElementProps extends FormElementProps {\n  checked: boolean;\n  title?: string;\n  description?: string;\n  labelClassName?: string;\n  checkboxClassName?: string;\n  onChange?(checked: boolean): void;\n}\n\ninterface CheckboxState {\n  checked: boolean;\n}\n\nexport const boxIco = 'fe-square';\nexport const checkedBoxIco = 'fe-check-square';\n\nexport const checkboxSpecId = 'checkbox';\nexport const titleSpecId = 'title';\nexport const descSpecId = 'description';\n\nconst cx: any = classNames.bind(styles);\n\nexport default class CheckboxElement extends React.Component<CheckboxElementProps, CheckboxState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      checked: this.props.checked\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  private handleChange(event: React.MouseEvent): void {\n    // this null check only for testing, remove after switching to RTL\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({ checked: !this.state.checked }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.checked);\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  public validate(): boolean {\n    return true;\n  }\n\n  public render(): JSX.Element {\n    const checkboxIcon = this.state.checked ? checkedBoxIco : boxIco;\n    return (\n      <label className={cx(styles.label, this.props.labelClassName)} onClick={this.handleChange}>\n        <span\n          data-spec={checkboxSpecId}\n          className={cx(checkboxIcon, this.props.checkboxClassName)}\n        />\n        {renderIf(isRealValue(this.props.title))(\n          <div data-spec={titleSpecId} className={styles.title}>\n            {this.props.title}\n          </div>\n        )}\n        {renderIf(isRealValue(this.props.description))(\n          <div\n            data-spec={descSpecId}\n            className={this.props.title ? styles.description : styles.description_solo}\n          >\n            {this.props.description}\n          </div>\n        )}\n      </label>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport {\n  ChangeGroupsFormState,\n  excludeDynamicGroups\n} from 'components/flow/actions/changegroups/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './RemoveGroupsForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../../helpers';\n\nexport const LABEL = i18n.t(\n  'forms.remove_groups_summary',\n  'Select the groups to remove the contact from.'\n);\nexport const NOT_FOUND = i18n.t('errors.group_not_found', 'Enter the name of an existing group');\nexport const PLACEHOLDER = i18n.t(\n  'forms.remove_groups_placeholder',\n  'Enter the name of an existing group'\n);\nexport const REMOVE_FROM_ALL = i18n.t('forms.remove_from_all_label', 'Remove from all');\nexport const REMOVE_FROM_ALL_DESC = i18n.t(\n  'forms.remove_from_all_summary',\n  \"Remove the active contact from all groups they're a member of.\"\n);\n\nexport const labelSpecId = 'label';\nexport const fieldContainerSpecId = 'field-container';\n\nexport default class RemoveGroupsForm extends React.Component<\n  ActionFormProps,\n  ChangeGroupsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdate(\n    keys: { groups?: Asset[]; removeAll?: boolean },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {};\n\n    // we only require groups if removeAll isn't checked\n    let groupValidators = this.state.removeAll ? [] : [shouldRequireIf(submitting)];\n\n    if (keys.hasOwnProperty('removeAll')) {\n      updates.removeAll = keys.removeAll;\n      if (keys.removeAll) {\n        groupValidators = [];\n      }\n    }\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate(i18n.t('forms.groups', 'Groups'), keys.groups!, groupValidators);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    return this.handleUpdate({ groups }, submitting);\n  }\n\n  public handleRemoveAllUpdate(removeAll: boolean): boolean {\n    return this.handleUpdate({ removeAll });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {renderIf(!this.state.removeAll)(\n          <div>\n            <p data-spec={labelSpecId}>{LABEL}</p>\n            <AssetSelector\n              name={i18n.t('forms.groups', 'Groups')}\n              placeholder={i18n.t('forms.select_groups', 'Select Groups')}\n              assets={this.props.assetStore.groups}\n              entry={this.state.groups}\n              shouldExclude={excludeDynamicGroups}\n              searchable={true}\n              onChange={this.handleGroupsChanged}\n              multi={true}\n            />\n          </div>\n        )}\n\n        <CheckboxElement\n          name={REMOVE_FROM_ALL}\n          title={REMOVE_FROM_ALL}\n          labelClassName={this.state.removeAll ? '' : styles.checkbox}\n          checked={this.state.removeAll!}\n          description={REMOVE_FROM_ALL_DESC}\n          onChange={this.handleRemoveAllUpdate}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { ChangeGroupsFormState } from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { RemoveFromGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.remove_contact_groups) {\n    const action = settings.originalAction as RemoveFromGroups;\n\n    const groups = action.groups || [];\n    return {\n      groups: { value: groups },\n      removeAll: groups.length === 0 || action.all_groups,\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    removeAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): RemoveFromGroups => {\n  return {\n    type: Types.remove_contact_groups,\n    groups: state.removeAll\n      ? []\n      : state.groups.value.map((group: any) => {\n          return { uuid: group.uuid, name: group.name };\n        }),\n    all_groups: !!state.removeAll,\n    uuid: getActionUUID(settings, Types.remove_contact_groups)\n  };\n};\n","import { Type, Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { Asset } from 'store/flowContext';\nimport { FlowIssue } from 'flowTypes';\n\nexport const determineTypeConfig = (nodeSettings: NodeEditorSettings): Type => {\n  const renderNode = nodeSettings.originalNode;\n  const node = renderNode && renderNode.node;\n\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type) {\n    return getTypeConfig(nodeSettings.originalAction.type);\n  } else if (node && node.actions && node.actions.length > 0) {\n    return getTypeConfig(node.actions[node.actions.length - 1].type);\n  } else {\n    try {\n      const type = getType(renderNode);\n      const config = getTypeConfig(type);\n      if (config.type !== Types.missing) {\n        return config;\n      }\n      // tslint:disable-next-line:no-empty\n    } catch (Error) {}\n  }\n\n  // Account for ghost nodes\n  if (node && node.router) {\n    return getTypeConfig(node.router.type);\n  }\n\n  throw new Error(`Couldn't determine type config for: ${node.uuid}`);\n};\n\nexport const hasIssues = (issues: FlowIssue[], translating: boolean, language: Asset): boolean => {\n  if (!issues || issues.length === 0) {\n    return false;\n  }\n\n  if (!translating) {\n    return !!issues.find((issue: FlowIssue) => !issue.language);\n  } else {\n    return !!issues.find((issue: FlowIssue) => issue.language === language.id);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { initializeLocalizedKeyForm } from 'components/flow/actions/localization/helpers';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface KeyLocalizationFormState extends FormState {\n  keyValues: { [key: string]: StringEntry };\n}\n\nexport default class KeyLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  KeyLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedKeyForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleKeyUpdate(text: string, name: string): boolean {\n    const keyValues = { ...this.state.keyValues };\n    keyValues[name.toLowerCase()] = { value: text };\n    this.setState({ keyValues });\n    return true;\n  }\n\n  private handleSave(): void {\n    const translations: { [key: string]: string } = {};\n\n    Object.keys(this.state.keyValues).forEach((key: string) => {\n      const value = this.state.keyValues[key].value;\n      if (value) {\n        translations[key] = value;\n      } else {\n        delete translations[key];\n      }\n    });\n\n    this.props.updateLocalizations(this.props.language.id, [\n      {\n        uuid: this.props.nodeSettings.originalAction!.uuid,\n        translations\n      }\n    ]);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    let base: JSX.Element;\n\n    const translation = i18n.t('forms.translation', 'Translation');\n\n    typeConfig.localizeableKeys.forEach((key: string) => {\n      const name = key[0].toUpperCase() + key.slice(1);\n\n      const form = (\n        <div key={`localize_form_${key}`}>\n          <div data-spec=\"translation-container\">\n            <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n              {(this.props.nodeSettings.originalAction as any)[key]}\n            </div>\n          </div>\n          <TextInputElement\n            name={name}\n            showLabel={false}\n            onChange={this.handleKeyUpdate}\n            entry={this.state.keyValues[key]}\n            placeholder={`${this.props.language.name} ${translation}`}\n            autocomplete={true}\n            focus={true}\n            textarea={true}\n          />\n        </div>\n      );\n\n      if (!base) {\n        base = form;\n      } else {\n        const translation = i18n.t('forms.translation', 'Translation');\n        tabs.push({\n          name: name + ' ' + translation,\n          body: form,\n          checked: !!this.state.keyValues[key].value\n        });\n      }\n    });\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        {base}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { KeyLocalizationFormState } from 'components/flow/actions/localization/KeyLocalizationForm';\nimport { MsgLocalizationFormState } from 'components/flow/actions/localization/MsgLocalizationForm';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { SendMsg, MsgTemplating, SayMsg } from 'flowTypes';\nimport { Attachment } from '../sendmsg/attachments';\n\nexport const initializeLocalizedKeyForm = (\n  settings: NodeEditorSettings\n): KeyLocalizationFormState => {\n  const keyValues: { [key: string]: StringEntry } = {};\n  const localized = settings.localizations[0];\n  const action = localized.getObject() as any;\n\n  const keys = settings.originalAction\n    ? getTypeConfig(settings.originalAction.type).localizeableKeys || []\n    : [];\n  keys.forEach((key: string) => {\n    keyValues[key] = { value: key in localized.localizedKeys ? action[key] : '' };\n  });\n\n  return {\n    keyValues,\n    valid: true\n  };\n};\n\nexport const initializeLocalizedForm = (settings: NodeEditorSettings): MsgLocalizationFormState => {\n  const state: MsgLocalizationFormState = {\n    message: { value: '' },\n    quickReplies: { value: [] },\n    templateVariables: [],\n    templating: null,\n    audio: { value: null },\n    valid: true,\n    attachments: []\n  };\n\n  // check if our form should use a localized action\n  if (\n    settings.originalAction &&\n    (settings.originalAction.type === Types.send_msg ||\n      settings.originalAction.type === Types.say_msg) &&\n    settings.localizations &&\n    settings.localizations.length > 0\n  ) {\n    if (settings.originalAction && (settings.originalAction as any).templating) {\n      state.templating = (settings.originalAction as any).templating;\n      state.templateVariables = state.templating.variables.map((value: string) => {\n        return {\n          value: ''\n        };\n      });\n    }\n\n    for (const localized of settings.localizations) {\n      if (localized.isLocalized()) {\n        const localizedObject = localized.getObject() as any;\n\n        if (localizedObject.text) {\n          const action = localizedObject as (SendMsg & SayMsg);\n          state.message.value = 'text' in localized.localizedKeys ? action.text : '';\n          state.audio.value = 'audio_url' in localized.localizedKeys ? action.audio_url : null;\n          state.quickReplies.value =\n            'quick_replies' in localized.localizedKeys ? action.quick_replies || [] : [];\n\n          const attachments: Attachment[] = [];\n\n          if ('attachments' in localized.localizedKeys) {\n            (action.attachments || []).forEach((attachmentString: string) => {\n              const splitPoint = attachmentString.indexOf(':');\n\n              const type = attachmentString.substring(0, splitPoint);\n              const attachment = {\n                type,\n                url: attachmentString.substring(splitPoint + 1),\n                uploaded: type.indexOf('/') > -1\n              };\n\n              attachments.push(attachment);\n            });\n          }\n\n          state.attachments = attachments;\n          state.valid = true;\n        }\n\n        if (localizedObject.variables) {\n          const templating = localizedObject as MsgTemplating;\n          state.templateVariables = templating.variables.map((value: string) => {\n            return {\n              value: 'variables' in localized.localizedKeys ? value : ''\n            };\n          });\n          state.valid = true;\n        }\n      }\n    }\n  }\n  return state;\n};\n","import axios, { AxiosResponse } from 'axios';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport Pill from 'components/pill/Pill';\nimport i18n from 'config/i18n';\nimport { getCookie } from 'external';\nimport React from 'react';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\nimport { createUUID } from 'utils';\nimport styles from './attachments.module.scss';\nimport TextInputElement, { TextInputStyle } from 'components/form/textinput/TextInputElement';\n\nexport interface Attachment {\n  type: string;\n  url: string;\n  uploaded?: boolean;\n}\n\nconst MAX_ATTACHMENTS = 3;\n\nconst TYPE_OPTIONS: SelectOption[] = [\n  { value: 'image', name: i18n.t('forms.image_url', 'Image URL') },\n  { value: 'audio', name: i18n.t('forms.audio_url', 'Audio URL') },\n  { value: 'video', name: i18n.t('forms.video_url', 'Video URL') },\n  { value: 'application', name: i18n.t('forms.pdf_url', 'PDF Document URL') }\n];\n\nconst NEW_TYPE_OPTIONS = TYPE_OPTIONS.concat([\n  { value: 'upload', name: i18n.t('forms.upload_attachment', 'Upload Attachment') }\n]);\n\n// we would prefer that attachmetns be entirely stateless, but we have this\n// tiny bit of state for simplicity with the reasonable assumption that only\n// one batch of attachments are rendered at once\nlet filePicker: any;\n\nconst getAttachmentTypeOption = (type: string): SelectOption => {\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\n};\n\nexport const handleUploadFile = (\n  endpoint: string,\n  files: FileList,\n  onSuccess: (response: AxiosResponse) => void\n): void => {\n  // if we have a csrf in our cookie, pass it along as a header\n  const csrf = getCookie('csrftoken');\n  const headers: any = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  // mark us as ajax\n  headers['X-Requested-With'] = 'XMLHttpRequest';\n\n  const data = new FormData();\n  data.append('file', files[0]);\n  axios\n    .post(endpoint, data, { headers })\n    .then(onSuccess)\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const renderAttachments = (\n  endpoint: string,\n  attachments: Attachment[],\n  onUploaded: (response: AxiosResponse) => void,\n  onAttachmentChanged: (index: number, value: string, url: string) => void,\n  onAttachmentRemoved: (index: number) => void\n): JSX.Element => {\n  const renderedAttachments = attachments.map((attachment, index: number) =>\n    attachment.uploaded\n      ? renderUpload(index, attachment, onAttachmentRemoved)\n      : renderAttachment(index, attachment, onAttachmentChanged, onAttachmentRemoved)\n  );\n\n  const emptyOption =\n    attachments.length < MAX_ATTACHMENTS\n      ? renderAttachment(\n          -1,\n          { url: '', type: '' },\n\n          onAttachmentChanged,\n          onAttachmentRemoved\n        )\n      : null;\n  return (\n    <>\n      <p>\n        {i18n.t(\n          'forms.send_msg_summary',\n          'Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.',\n          { count: MAX_ATTACHMENTS }\n        )}\n      </p>\n      {renderedAttachments}\n      {emptyOption}\n      <input\n        style={{\n          display: 'none'\n        }}\n        ref={ele => {\n          filePicker = ele;\n        }}\n        type=\"file\"\n        onChange={e => handleUploadFile(endpoint, e.target.files, onUploaded)}\n      />\n    </>\n  );\n};\n\nexport const renderUpload = (\n  index: number,\n  attachment: Attachment,\n  onAttachmentRemoved: (index: number) => void\n): JSX.Element => {\n  return (\n    <div\n      className={styles.url_attachment}\n      key={index > -1 ? 'url_attachment_' + index : createUUID()}\n    >\n      <div className={styles.type_choice}>\n        <SelectElement\n          key={'attachment_type_' + index}\n          name={i18n.t('forms.type', 'Type')}\n          style={TembaSelectStyle.small}\n          entry={{\n            value: { name: attachment.type }\n          }}\n          options={TYPE_OPTIONS}\n          disabled={true}\n        />\n      </div>\n      <div className={styles.url}>\n        <span className={styles.upload}>\n          <Pill\n            icon=\"fe-download\"\n            text=\"Download\"\n            large={true}\n            onClick={() => {\n              window.open(attachment.url, '_blank');\n            }}\n          />\n          <div className={styles.remove_upload}>\n            <Pill\n              icon=\"fe-x\"\n              text=\"Remove\"\n              large={true}\n              onClick={() => {\n                onAttachmentRemoved(index);\n              }}\n            />\n          </div>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport const renderAttachment = (\n  index: number,\n  attachment: Attachment,\n  onAttachmentChanged: (index: number, type: string, url: string) => void,\n  onAttachmentRemoved: (index: number) => void\n): JSX.Element => {\n  return (\n    <div\n      className={styles.url_attachment}\n      key={index > -1 ? 'url_attachment_' + index : createUUID()}\n    >\n      <div className={styles.type_choice}>\n        <SelectElement\n          key={'attachment_type_' + index}\n          style={TembaSelectStyle.small}\n          name={i18n.t('forms.type_options', 'Type Options')}\n          placeholder={i18n.t('forms.add_attachment', 'Add Attachment')}\n          entry={{\n            value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\n          }}\n          onChange={(option: any) => {\n            if (option.value === 'upload') {\n              window.setTimeout(() => {\n                filePicker.click();\n              }, 0);\n            } else {\n              onAttachmentChanged(index, option.value, index === -1 ? '' : attachment.url);\n            }\n          }}\n          options={index > -1 ? TYPE_OPTIONS : NEW_TYPE_OPTIONS}\n        />\n      </div>\n      {index > -1 ? (\n        <>\n          <div className={styles.url}>\n            <TextInputElement\n              placeholder=\"URL\"\n              name={i18n.t('forms.url', 'URL')}\n              style={TextInputStyle.small}\n              onChange={(value: string) => {\n                onAttachmentChanged(index, attachment.type, value);\n              }}\n              entry={{ value: attachment.url }}\n              autocomplete={true}\n            />\n          </div>\n          <div className={styles.remove}>\n            <Pill\n              icon=\"fe-x\"\n              text=\" Remove\"\n              large={true}\n              onClick={() => {\n                onAttachmentRemoved(index);\n              }}\n            />\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport TembaSelect from 'temba/TembaSelect';\n\nexport interface MultiChoiceInputProps {\n  name: string;\n  items: StringArrayEntry;\n  entry?: StringEntry;\n  onChange?: (values: string[]) => void;\n  helpText?: JSX.Element;\n}\n\ninterface MultiChoiceInputState {\n  currentInput: StringEntry;\n}\n\nexport default class MultiChoiceInput extends React.Component<\n  MultiChoiceInputProps,\n  MultiChoiceInputState\n> {\n  constructor(props: MultiChoiceInputProps) {\n    super(props);\n\n    if (this.props.entry) {\n      this.state = {\n        currentInput: this.props.entry\n      };\n    } else {\n      this.state = {\n        currentInput: { value: '' }\n      };\n    }\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleChange(options: { name: string; value: string }[]): void {\n    this.props.onChange(options.map(option => option.value));\n  }\n\n  public render(): JSX.Element {\n    const values = this.props.items.value.map((value: string) => {\n      return { name: value, value };\n    });\n    return (\n      <>\n        {this.props.helpText ? <p>{this.props.helpText}</p> : <p />}\n        <TembaSelect\n          name={this.props.name}\n          placeholder={this.props.name}\n          onChange={this.handleChange}\n          value={values}\n          multi={true}\n          tags={true}\n          searchable={true}\n          expressions={true}\n        />\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport * as React from 'react';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport { getCookie } from 'external';\n\nexport interface UploadButtonState {}\n\nexport interface UploadButtonProps {\n  icon: string;\n  uploadText: string;\n  removeText: string;\n  url: string;\n  endpoint: string;\n  onUploadChanged: (url: string) => void;\n}\n\nexport default class UploadButton extends React.Component<UploadButtonProps, UploadButtonState> {\n  private filePicker: any;\n\n  constructor(props: UploadButtonProps) {\n    super(props);\n    this.state = {};\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleRemoveUpload(): void {\n    this.props.onUploadChanged(null);\n  }\n\n  private handleUploadFile(files: FileList): void {\n    const data = new FormData();\n    data.append('file', files[0]);\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    axios\n      .post(this.props.endpoint, data, { headers })\n      .then(response => {\n        this.props.onUploadChanged(response.data.url);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n        {this.props.url ? (\n          <Button\n            iconName=\"fe-trash\"\n            name={this.props.removeText}\n            topSpacing={true}\n            onClick={this.handleRemoveUpload}\n            type={ButtonTypes.tertiary}\n          />\n        ) : (\n          <Button\n            iconName={this.props.icon}\n            name={this.props.uploadText}\n            topSpacing={true}\n            onClick={() => {\n              this.filePicker.click();\n            }}\n            type={ButtonTypes.tertiary}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport styles from './Pill.module.scss';\n\nexport interface PillProps {\n  advanced?: boolean;\n  onClick?(event: React.MouseEvent<HTMLDivElement>): void;\n  text: string;\n  maxLength?: number;\n  icon?: string;\n  large?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst Pill: React.SFC<PillProps> = (props: PillProps): JSX.Element => {\n  let text = props.text;\n\n  if (props.text.startsWith('@')) {\n    text = '@(exp)';\n  } else if (props.maxLength && text.length > props.maxLength) {\n    text = props.text.substring(0, props.maxLength) + '...';\n  }\n\n  const pillStyles = [styles.pill];\n\n  if (props.large) {\n    pillStyles.push(styles.large);\n  }\n\n  if (props.onClick) {\n    pillStyles.push(styles.clickable);\n  }\n\n  return (\n    <div\n      style={props.style}\n      data-advanced={props.advanced}\n      onClick={props.onClick}\n      className={pillStyles.join(' ')}\n    >\n      {text}\n      {props.icon ? (\n        <span data-advanced={props.advanced} className={styles.icon + ' ' + props.icon} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pill;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { SendMsg, MsgTemplating } from 'flowTypes';\nimport * as React from 'react';\nimport mutate from 'immutability-helper';\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport { MaxOfTenItems, validate } from 'store/validators';\n\nimport { initializeLocalizedForm } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { range } from 'utils';\nimport { renderIssues } from '../helpers';\nimport { Attachment, renderAttachments } from '../sendmsg/attachments';\nimport { AxiosResponse } from 'axios';\n\nexport interface MsgLocalizationFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  audio: StringEntry;\n  templateVariables: StringEntry[];\n  templating: MsgTemplating;\n  attachments: Attachment[];\n}\n\nexport default class MsgLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  MsgLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  private handleAudioChanged(url: string): void {\n    this.handleUpdate({ audio: url });\n  }\n\n  private handleUpdate(keys: {\n    text?: string;\n    sendAll?: boolean;\n    quickReplies?: string[];\n    audio?: string;\n  }): boolean {\n    const updates: Partial<MsgLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, []);\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate(\n        i18n.t('forms.quick_replies', 'Quick Replies'),\n        keys.quickReplies!,\n        [MaxOfTenItems]\n      );\n    }\n\n    if (keys.hasOwnProperty('audio')) {\n      updates.audio! = { value: keys.audio! };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    const { message: text, quickReplies, audio, templateVariables, attachments } = this.state;\n\n    // make sure we are valid for saving, only quick replies can be invalid\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const valid =\n      typeConfig.localizeableKeys!.indexOf('quick_replies') > -1\n        ? this.handleQuickRepliesUpdate(this.state.quickReplies.value)\n        : true;\n\n    if (valid) {\n      const translations: any = {};\n      if (text.value) {\n        translations.text = text.value;\n      }\n\n      translations.attachments = attachments\n        .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n        .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n\n      if (quickReplies.value && quickReplies.value.length > 0) {\n        translations.quick_replies = quickReplies.value;\n      }\n\n      if (audio.value) {\n        translations.audio_url = audio.value;\n      }\n\n      const localizations = [\n        {\n          uuid: this.props.nodeSettings.originalAction!.uuid,\n          translations\n        }\n      ];\n\n      // if we have template variables, they show up on their own key\n      const hasTemplateVariables = templateVariables.find(\n        (entry: StringEntry) => entry.value.length > 0\n      );\n      if (hasTemplateVariables) {\n        localizations.push({\n          uuid: this.state.templating.uuid,\n          translations: { variables: templateVariables.map((entry: StringEntry) => entry.value) }\n        });\n      }\n\n      this.props.updateLocalizations(this.props.language.id, localizations);\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleQuickReplyChanged(quickReplies: string[]): void {\n    this.handleUpdate({ quickReplies });\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, []);\n\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n\n    this.setState({ templateVariables });\n  }\n\n  private handleAttachmentUploaded(response: AxiosResponse) {\n    const attachments: any = mutate(this.state.attachments, {\n      $push: [{ type: response.data.type, url: response.data.url, uploaded: true }]\n    });\n    this.setState({ attachments });\n  }\n\n  private handleAttachmentChanged(index: number, type: string, url: string) {\n    let attachments: any = this.state.attachments;\n    if (index === -1) {\n      attachments = mutate(attachments, {\n        $push: [{ type, url }]\n      });\n    } else {\n      attachments = mutate(attachments, {\n        [index]: {\n          $set: { type, url }\n        }\n      });\n    }\n\n    this.setState({ attachments });\n  }\n\n  private handleAttachmentRemoved(index: number) {\n    const attachments: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    if (\n      this.state.templating &&\n      typeConfig.localizeableKeys!.indexOf('templating.variables') > -1\n    ) {\n      const hasLocalizedValue = !!this.state.templateVariables.find(\n        (entry: StringEntry) => entry.value.length > 0\n      );\n\n      const variable = i18n.t('forms.variable', 'Variable');\n\n      tabs.push({\n        name: 'WhatsApp',\n        body: (\n          <>\n            <p>\n              {i18n.t(\n                'forms.whatsapp_warning',\n                'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n              )}\n            </p>\n            {this.state.templating && this.state.templating.variables.length > 0 ? (\n              <>\n                {range(0, this.state.templating.variables.length).map((num: number) => {\n                  const entry = this.state.templateVariables[num] || { value: '' };\n                  return (\n                    <div className={styles.variable} key={'tr_arg_' + num}>\n                      <TextInputElement\n                        name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                        showLabel={false}\n                        placeholder={`${this.props.language.name} ${variable} ${num + 1}`}\n                        onChange={(updatedText: string) => {\n                          this.handleTemplateVariableChanged(updatedText, num);\n                        }}\n                        entry={entry}\n                        autocomplete={true}\n                      />\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n          </>\n        ),\n        checked: hasLocalizedValue\n      });\n    }\n\n    if (typeConfig.localizeableKeys!.indexOf('quick_replies') > -1) {\n      tabs.push({\n        name: i18n.t('forms.attachments', 'Attachments'),\n        body: renderAttachments(\n          this.context.config.endpoints.attachments,\n          this.state.attachments,\n          this.handleAttachmentUploaded,\n          this.handleAttachmentChanged,\n          this.handleAttachmentRemoved\n        ),\n        checked: this.state.attachments.length > 0\n      });\n    }\n\n    if (typeConfig.localizeableKeys!.indexOf('quick_replies') > -1) {\n      tabs.push({\n        name: i18n.t('forms.quick_replies', 'Quick Replies'),\n        body: (\n          <>\n            <MultiChoiceInput\n              name={i18n.t('forms.quick_reply', 'Quick Reply')}\n              helpText={\n                <Trans\n                  i18nKey=\"forms.localized_quick_replies\"\n                  values={{ language: this.props.language.name }}\n                >\n                  Add a new [[language]] Quick Reply and press enter.\n                </Trans>\n              }\n              items={this.state.quickReplies}\n              onChange={this.handleQuickReplyChanged}\n            />\n          </>\n        ),\n        checked: this.state.quickReplies.value.length > 0\n      });\n    }\n\n    let audioButton: JSX.Element | null = null;\n    if (typeConfig.localizeableKeys!.indexOf('audio_url') > 0) {\n      audioButton = (\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleAudioChanged}\n        />\n      );\n    }\n\n    const translation = i18n.t('forms.translation', 'Translation');\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <div data-spec=\"translation-container\">\n          <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n            {(this.props.nodeSettings.originalAction as SendMsg).text}\n          </div>\n        </div>\n\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          placeholder={`${this.props.language.name} ${translation}`}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        {audioButton}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Action } from 'flowTypes';\n\n/* istanbul ignore next */\nconst MissingComp: React.SFC<Action> = ({ type }): JSX.Element => {\n  return <div className=\"placeholder\">No implementation yet for {type}</div>;\n};\n\nexport default MissingComp;\n","import * as React from 'react';\nimport { PlayAudio } from 'flowTypes';\n\nconst PlayAudioComp: React.SFC<PlayAudio> = (action: PlayAudio): JSX.Element => {\n  return <div>{action.audio_url}</div>;\n};\n\nexport default PlayAudioComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { validate, Required } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface PlayAudioFormState extends FormState {\n  audio: StringEntry;\n}\n\nexport default class PlayAudioForm extends React.Component<ActionFormProps, PlayAudioFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleAudioUpdate(text: string): boolean {\n    const updates: Partial<PlayAudioFormState> = {};\n    updates.audio = validate(i18n.t('forms.recording', 'Recording'), text, [Required]);\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleAudioUpdate(this.state.audio.value);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{i18n.t('forms.recording_label', 'Previous Recording')}</p>\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleAudioUpdate}\n          entry={this.state.audio}\n          autocomplete={true}\n          focus={true}\n          helpText={\n            <Trans i18nKey=\"forms.play_audio_help_text\">\n              Enter a variable that contains a recording the contact has previously recorded. For\n              example, @results.voicemail or @fields.short_bio.\n            </Trans>\n          }\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { PlayAudioFormState } from 'components/flow/actions/playaudio/PlayAudioForm';\nimport { Types } from 'config/interfaces';\nimport { PlayAudio } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): PlayAudioFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.play_audio) {\n    const action = settings.originalAction as PlayAudio;\n    return {\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: PlayAudioFormState\n): PlayAudio => ({\n  audio_url: state.audio.value,\n  type: Types.play_audio,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './MediaPlayer.module.scss';\n\nexport interface MediaPlayerProps {\n  url: string;\n  triggered?: boolean;\n}\n\ninterface MediaPlayerState {\n  durationSeconds: number;\n  currentSeconds: number;\n  progress: number;\n  playing: boolean;\n}\n\nexport class MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\n  private ele: HTMLAudioElement;\n\n  private stroke = 1;\n  private radius = 9;\n\n  private radiusNormalized = this.radius - this.stroke * 2;\n  private circumference = this.radiusNormalized * 2 * Math.PI;\n\n  constructor(props: MediaPlayerProps) {\n    super(props);\n\n    this.state = {\n      durationSeconds: 0,\n      currentSeconds: 0,\n      playing: false,\n      progress: 0\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleTimeUpdate(e: React.SyntheticEvent<HTMLAudioElement>): void {\n    const currentTime = this.ele.currentTime || 0;\n    const duration = this.ele.duration || 0;\n\n    this.setState((prevState: MediaPlayerState) => {\n      if ((this.ele.ended || currentTime === 0) && prevState.playing) {\n        setTimeout(() => {\n          this.setState({ progress: 0, playing: false });\n        }, 500);\n      }\n\n      const progress = duration > 0 ? Math.floor((currentTime / duration) * 100) : 0;\n\n      return {\n        currentSeconds: this.ele.ended || progress === 100 ? 0 : currentTime,\n        durationSeconds: duration,\n        playing: currentTime > 0 && !this.ele.ended,\n        progress: progress\n      };\n    });\n  }\n\n  public componentDidMount(): void {\n    if (this.props.triggered) {\n      this.handleTogglePlay(null);\n    }\n  }\n\n  private handleTogglePlay(e: React.MouseEvent<HTMLDivElement>): void {\n    if (e !== null) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (this.state.playing) {\n      this.ele.pause();\n      this.ele.currentTime = 0;\n    } else {\n      this.ele.load();\n      this.ele.play();\n    }\n  }\n\n  private handleRef(ref: HTMLAudioElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidUpdate(prevProps: MediaPlayerProps): void {\n    if (this.props.url !== prevProps.url) {\n      this.setState({\n        durationSeconds: 0,\n        currentSeconds: 0,\n        playing: false,\n        progress: 0\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const progress = this.state.progress || 0;\n    const strokeDashoffset = this.circumference - (progress / 100) * this.circumference;\n\n    return (\n      <div\n        className={styles.player + ' ' + (this.state.playing ? styles.playing : '')}\n        style={{ height: this.radius * 2, width: this.radius * 2 }}\n        onMouseUp={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        onMouseDown={this.handleTogglePlay}\n      >\n        <audio\n          ref={this.handleRef}\n          onTimeUpdate={this.handleTimeUpdate}\n          src={this.props.url}\n          preload=\"none\"\n        />\n\n        <div className={styles.circles}>\n          <svg height={this.radius * 2} width={this.radius * 2}>\n            <circle\n              className={styles.circle_background}\n              stroke=\"#fff\"\n              fill=\"#fff\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_background}\n              stroke=\"#ddd\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_foreground}\n              stroke=\"cornflowerblue\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset }}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n          </svg>\n        </div>\n        <div className={styles.button + ' ' + (this.state.playing ? 'fe-stop' : 'fe-play_arrow')} />\n      </div>\n    );\n  }\n}\n","import { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport { SayMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SayMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.say_msg.placeholder', 'Send a message to the contact');\n\nconst SayMsgComp: React.SFC<SayMsg> = (action: SayMsg): JSX.Element => {\n  if (action.text) {\n    return (\n      <>\n        <div className={styles.text}>{action.text}</div>\n\n        {action.audio_url ? (\n          <div className={styles.recording}>\n            <MediaPlayer url={action.audio_url} />\n          </div>\n        ) : null}\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SayMsgComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface SayMsgFormState extends FormState {\n  message: StringEntry;\n  audio: StringEntry;\n}\n\nexport default class SayMsgForm extends React.Component<ActionFormProps, SayMsgFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { text?: string }, submitting = false): boolean {\n    const updates: Partial<SayMsgFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(text: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text }, submitting);\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ text: this.state.message.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleUploadChanged(url: string): void {\n    this.setState({ audio: { value: url } });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleUploadChanged}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SayMsgFormState } from 'components/flow/actions/saymsg/SayMsgForm';\nimport { Types } from 'config/interfaces';\nimport { SayMsg } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SayMsgFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.say_msg) {\n    const action = settings.originalAction as SayMsg;\n    return {\n      message: { value: action.text },\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SayMsgFormState): SayMsg => ({\n  text: state.message.value,\n  audio_url: state.audio.value,\n  type: Types.say_msg,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { BroadcastMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendBroadcast.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t(\n  'actions.send_broadcast.placeholder',\n  'Send a message to the contact'\n);\n\nconst MAX_TO_SHOW = 5;\n\nconst SendBroadcastComp: React.SFC<BroadcastMsg> = (\n  action: BroadcastMsg,\n  context: any\n): JSX.Element => {\n  const assets = getRecipients(action);\n  if (action.text) {\n    return (\n      <div className={styles.node}>\n        <div className={styles.to} key={action.uuid + '_broadcast_recipients'}>\n          {renderAssetList(assets, MAX_TO_SHOW, context.config.endpoints)}\n        </div>\n        <div className={styles.message}>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nSendBroadcastComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default SendBroadcastComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { initializeForm, stateToAction } from 'components/flow/actions/sendbroadcast/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface SendBroadcastFormState extends FormState {\n  message: StringEntry;\n  recipients: AssetArrayEntry;\n}\n\n// Note: action prop is only used for its uuid (see onValid)\nexport default class SendBroadcastForm extends React.Component<\n  ActionFormProps,\n  SendBroadcastFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  private handleUpdate(keys: { text?: string; recipients?: Asset[] }, submitting = false): boolean {\n    const updates: Partial<SendBroadcastFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        text: this.state.message.value,\n        recipients: this.state.recipients.value!\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.recipients', 'Recipients')}\n          placeholder={i18n.t('forms.select_contacts', 'Select Contacts')}\n          assets={this.props.assetStore.recipients}\n          entry={this.state.recipients}\n          searchable={true}\n          multi={true}\n          expressions={true}\n          onChange={this.handleRecipientsChanged}\n        />\n        <p />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport { SendBroadcastFormState } from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport { Types } from 'config/interfaces';\nimport { BroadcastMsg } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendBroadcastFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_broadcast) {\n    let action = settings.originalAction as BroadcastMsg;\n\n    // check if our form should use a localized action\n    if (settings.localizations && settings.localizations.length > 0) {\n      const localized = settings.localizations[0];\n      if (localized.isLocalized()) {\n        action = settings.localizations[0].getObject() as BroadcastMsg;\n      } else {\n        return {\n          message: { value: '' },\n          recipients: { value: [] },\n          valid: true\n        };\n      }\n    }\n\n    return {\n      message: { value: action.text },\n      recipients: { value: getRecipients(action) },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    recipients: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendBroadcastFormState\n): BroadcastMsg => {\n  return {\n    legacy_vars: getExpressions(formState.recipients.value),\n    contacts: getRecipientsByAsset(formState.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(formState.recipients.value, AssetType.Group),\n    text: formState.message.value,\n    type: Types.send_broadcast,\n    uuid: getActionUUID(settings, Types.send_broadcast)\n  };\n};\n","import * as React from 'react';\nimport { SendEmail } from 'flowTypes';\n\nconst SendEmailComp: React.SFC<SendEmail> = ({ subject }): JSX.Element => <div>{subject}</div>;\n\nexport default SendEmailComp;\n","import { StylesConfig } from 'react-select';\n\nexport const large = {\n  placeholder: (styles: StylesConfig, state: any) => {\n    return { ...styles, color: '#ddd', marginLeft: '3px' };\n  },\n  singleValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '3px' };\n  },\n  multiValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '0px' };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none',\n      fontSize: '13px'\n    };\n  },\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#e6e6e6',\n      boxShadow: 'none',\n      fontSize: '13px',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#e6e6e6'\n      },\n      '&:focus-within': {\n        boxShadow: 'var(--widget-box-shadow-focused) !important',\n        border: '1px solid #a4cafe !important'\n      }\n    };\n  }\n};\n\nexport const messageStyle = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#e6e6e6',\n      boxShadow: 'none',\n      borderBottom: 'none',\n      borderBottomRightRadius: '0px',\n      borderBottomLeftRadius: '0px',\n      '&:hover': {\n        borderColor: '#e6e6e6'\n      }\n    };\n  }\n};\n\nexport const getErroredSelect = (baseControl: any): any => {\n  return {\n    control: (styles: StylesConfig) => ({\n      ...styles,\n      ...baseControl,\n      borderColor: 'tomato',\n      boxShadow: '0 0 0 3px rgba(255,196,186,0.5) !important;',\n      '&:hover': {\n        borderColor: 'tomato'\n      }\n    })\n  };\n};\n\nexport const small = {\n  control: (styles: StylesConfig) => ({\n    ...styles,\n    borderColor: '#e6e6e6',\n    boxShadow: 'none',\n    '&:hover': {\n      borderColor: '#e6e6e6'\n    },\n    maxHeight: '28px',\n    minHeight: '28px',\n    fontSize: '12px',\n    lineHeight: '12px',\n    marginBottom: '-10px',\n    '&:focus-within': {\n      boxShadow: 'var(--widget-box-shadow-focused) !important',\n      border: '1px solid #a4cafe !important'\n    }\n  }),\n  menuList: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 200\n  }),\n  option: (styles: StylesConfig) => ({\n    ...styles,\n    fontSize: 12\n  }),\n  singleValue: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 28,\n    lineHeight: '13px'\n  }),\n  indicatorsContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  valueContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  input: (styles: StylesConfig) => ({\n    ...styles,\n    marginLeft: '-2px',\n    marginTop: '0px',\n    caretColor: '#999',\n    boxShadow: 'none',\n    border: 'none',\n    maxHeight: '20px',\n    minHeight: '20px',\n    lineHeight: '12px'\n  })\n};\n\nexport const tagging = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#e6e6e6',\n      boxShadow: 'none',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#e6e6e6'\n      },\n      '&:focus-within': {\n        boxShadow: 'var(--widget-box-shadow-focused) !important',\n        border: '1px solid #a4cafe !important'\n      }\n    };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none'\n    };\n  },\n  multiValue: (styles: StylesConfig) => {\n    return {\n      ...styles,\n      maxHeight: 24,\n      minHeight: 24,\n      lineHeight: '17px',\n      backgroundColor: 'hsl(0, 0%, 94%)',\n      border: '1px solid hsl(0, 0%, 85%)'\n    };\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport React from 'react';\nimport { StringArrayEntry } from 'store/nodeEditor';\nimport { getSelectClass } from 'utils';\nimport { tagging } from 'utils/reactselect';\nimport CreatableSelect from 'react-select/creatable';\n\nexport type TagList = Array<{ label: string; value: string }>;\n\nexport interface TaggingElementProps extends FormElementProps {\n  placeholder?: string;\n  prompt: string;\n  createPrompt?: string;\n  onChange?: (values: string[]) => void;\n  onCheckValid: (value: string) => boolean;\n}\n\nexport const tagsToOptions = (tags: StringArrayEntry): TagList => {\n  return tags.value.map(tag => ({ label: tag, value: tag }));\n};\n\nexport const optionsToTags = (tags: TagList): string[] =>\n  (tags || []).map(tag => {\n    return tag.label;\n  });\n\nexport default class TaggingElement extends React.Component<TaggingElementProps> {\n  constructor(props: any) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateTags(tags: TagList): void {\n    if (this.props.onChange) {\n      this.props.onChange(optionsToTags(tags));\n    }\n  }\n\n  public handleCheckValid(label: string): boolean {\n    if (!label || label.trim().length === 0) {\n      return false;\n    }\n    return this.props.onCheckValid(label);\n  }\n\n  private arrowRenderer(): JSX.Element {\n    return <div />;\n  }\n\n  public render(): JSX.Element {\n    const className: string = getSelectClass((this.props.entry.validationFailures || []).length);\n\n    const tags = tagsToOptions(this.props.entry);\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <CreatableSelect\n          styles={tagging as any}\n          className={className}\n          name={this.props.name}\n          placeholder={this.props.placeholder}\n          value={tags}\n          onChange={this.handleUpdateTags as any}\n          isMulti={true}\n          isSearchable={true}\n          isValidNewOption={this.handleCheckValid}\n          noOptionsMessage={() => this.props.prompt}\n          formatCreateLabel={(input: string) => {\n            return this.props.createPrompt !== undefined\n              ? this.props.createPrompt + input\n              : 'Create new ' + input;\n          }}\n          options={[]}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TaggingElement from 'components/form/select/tags/TaggingElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SendEmailForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nconst EMAIL_PATTERN = /\\S+@\\S+\\.\\S+/;\n\nexport interface SendEmailFormState extends FormState {\n  recipients: StringArrayEntry;\n  subject: StringEntry;\n  body: StringEntry;\n}\n\nexport default class SendEmailForm extends React.Component<ActionFormProps, SendEmailFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: string[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleSubjectChanged(subject: string): boolean {\n    return this.handleUpdate({ subject });\n  }\n\n  public handleBodyChanged(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleUpdate(\n    keys: { recipients?: string[]; subject?: string; body?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendEmailFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCheckValid(value: string): boolean {\n    return EMAIL_PATTERN.test(value) || value.startsWith('@');\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.ele}>\n          <TaggingElement\n            name={i18n.t('forms.email_recipient_name', 'Recipient')}\n            placeholder={i18n.t('forms.email_recipient_placeholder', 'To')}\n            prompt={i18n.t('forms.email_recipient_prompt', 'Enter email address')}\n            onCheckValid={this.handleCheckValid}\n            entry={this.state.recipients}\n            onChange={this.handleRecipientsChanged}\n            createPrompt={''}\n          />\n          <TextInputElement\n            __className={styles.subject}\n            name={i18n.t('forms.subject', 'Subject')}\n            placeholder={i18n.t('forms.subject', 'Subject')}\n            onChange={this.handleSubjectChanged}\n            entry={this.state.subject}\n            autocomplete={true}\n          />\n          <TextInputElement\n            __className={styles.message}\n            name={i18n.t('forms.message', 'Message')}\n            showLabel={false}\n            onChange={this.handleBodyChanged}\n            entry={this.state.body}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SendEmailFormState } from 'components/flow/actions/sendemail/SendEmailForm';\nimport { Types } from 'config/interfaces';\nimport { SendEmail } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendEmailFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_email) {\n    const action = settings.originalAction as SendEmail;\n    return {\n      body: { value: action.body },\n      subject: { value: action.subject },\n      recipients: { value: action.addresses },\n      valid: true\n    };\n  }\n\n  return {\n    body: { value: '' },\n    subject: { value: '' },\n    recipients: { value: [] },\n    valid: true\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendEmailFormState\n): SendEmail => {\n  return {\n    addresses: formState.recipients.value,\n    subject: formState.subject.value,\n    body: formState.body.value,\n    type: Types.send_email,\n    uuid: getActionUUID(settings, Types.send_email)\n  };\n};\n","import Pill from 'components/pill/Pill';\nimport { SendMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.send_msg.placeholder', 'Send a message to the contact');\n\nconst SendMsgComp: React.SFC<SendMsg> = (action: SendMsg): JSX.Element => {\n  if (action.text) {\n    let replies = null;\n\n    let quickReplies = action.quick_replies || [];\n    if (quickReplies.length > 0) {\n      replies = (\n        <div className={styles.quick_replies}>\n          {quickReplies.map(reply => (\n            <Pill\n              style={{ marginLeft: 4, marginTop: 4 }}\n              maxLength={20}\n              advanced={true}\n              key={action.uuid + reply}\n              text={reply}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n          {action.attachments && action.attachments.length > 0 ? (\n            <div className={`${styles.attachment} fe-paperclip`} />\n          ) : null}\n          {action.templating && action.templating.template ? (\n            <div className={`${styles.whatsapp} fe-whatsapp`} />\n          ) : null}\n          {action.topic ? <div className={`${styles.facebook} fe-facebook`} /> : null}\n        </div>\n        <div className={styles.summary}>{replies}</div>\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SendMsgComp;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { SendMsgFormState } from 'components/flow/actions/sendmsg/SendMsgForm';\nimport { Types } from 'config/interfaces';\nimport { MsgTemplating, SendMsg } from 'flowTypes';\nimport { AssetStore } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { createUUID } from 'utils';\nimport { Attachment } from './attachments';\n\nexport const TOPIC_OPTIONS: SelectOption[] = [\n  { value: 'event', name: 'Event' },\n  { value: 'account', name: 'Account' },\n  { value: 'purchase', name: 'Purchase' },\n  { value: 'agent', name: 'Agent' }\n];\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): SendMsgFormState => {\n  let template: FormEntry = { value: null };\n  let templateVariables: StringEntry[] = [];\n\n  if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n    const action = settings.originalAction as SendMsg;\n    const attachments: Attachment[] = [];\n    (action.attachments || []).forEach((attachmentString: string) => {\n      const splitPoint = attachmentString.indexOf(':');\n\n      const type = attachmentString.substring(0, splitPoint);\n      const attachment = {\n        type,\n        url: attachmentString.substring(splitPoint + 1),\n        uploaded: type.indexOf('/') > -1\n      };\n\n      attachments.push(attachment);\n    });\n\n    if (action.templating) {\n      const msgTemplate = action.templating.template;\n      template = {\n        value: {\n          uuid: msgTemplate.uuid,\n          name: msgTemplate.name\n        }\n      };\n      templateVariables = action.templating.variables.map((value: string) => {\n        return {\n          value\n        };\n      });\n    }\n\n    return {\n      topic: { value: TOPIC_OPTIONS.find(option => option.value === action.topic) },\n      template,\n      templateVariables,\n      attachments,\n      message: { value: action.text },\n      quickReplies: { value: action.quick_replies || [] },\n      quickReplyEntry: { value: '' },\n      sendAll: action.all_urns,\n      valid: true\n    };\n  }\n\n  return {\n    topic: { value: null },\n    template,\n    templateVariables: [],\n    attachments: [],\n    message: { value: '' },\n    quickReplies: { value: [] },\n    quickReplyEntry: { value: '' },\n    sendAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SendMsgFormState): SendMsg => {\n  const attachments = state.attachments\n    .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n    .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n\n  let templating: MsgTemplating = null;\n\n  if (state.template && state.template.value) {\n    let templatingUUID = createUUID();\n    if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n      const action = settings.originalAction as SendMsg;\n      if (\n        action.templating &&\n        action.templating.template &&\n        action.templating.template.uuid === state.template.value.id\n      ) {\n        templatingUUID = action.templating.uuid;\n      }\n    }\n\n    templating = {\n      uuid: templatingUUID,\n      template: {\n        uuid: state.template.value.uuid,\n        name: state.template.value.name\n      },\n      variables: state.templateVariables.map((variable: StringEntry) => variable.value)\n    };\n  }\n\n  const result: SendMsg = {\n    attachments,\n    text: state.message.value,\n    type: Types.send_msg,\n    all_urns: state.sendAll,\n    quick_replies: state.quickReplies.value,\n    uuid: getActionUUID(settings, Types.send_msg)\n  };\n\n  if (templating) {\n    result.templating = templating;\n  }\n\n  if (state.topic.value) {\n    result.topic = state.topic.value.value;\n  }\n\n  return result;\n};\n","/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { react as bindCallbacks } from 'auto-bind';\nimport { AxiosResponse } from 'axios';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport {\n  initializeForm as stateToForm,\n  stateToAction,\n  TOPIC_OPTIONS\n} from 'components/flow/actions/sendmsg/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { hasUseableTranslation } from 'components/form/assetselector/helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { fetchAsset } from 'external';\nimport { Template, TemplateTranslation } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  SelectOptionEntry,\n  FormEntry\n} from 'store/nodeEditor';\nimport { MaxOfTenItems, Required, shouldRequireIf, validate } from 'store/validators';\nimport { range } from 'utils';\n\nimport styles from './SendMsgForm.module.scss';\nimport { hasFeature } from 'config/typeConfigs';\nimport { FeatureFilter } from 'config/interfaces';\n\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { Attachment, renderAttachments } from './attachments';\n\nexport interface SendMsgFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  quickReplyEntry: StringEntry;\n  sendAll: boolean;\n  attachments: Attachment[];\n  template: FormEntry;\n  topic: SelectOptionEntry;\n  templateVariables: StringEntry[];\n  templateTranslation?: TemplateTranslation;\n}\n\nexport default class SendMsgForm extends React.Component<ActionFormProps, SendMsgFormState> {\n  private filePicker: any;\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = stateToForm(this.props.nodeSettings, this.props.assetStore);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n\n    // intialize our templates if we have them\n    if (this.state.template.value !== null) {\n      fetchAsset(this.props.assetStore.templates, this.state.template.value.uuid).then(\n        (asset: Asset) => {\n          if (asset !== null) {\n            this.handleTemplateChanged([{ ...this.state.template.value, ...asset.content }]);\n          }\n        }\n      );\n    }\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(\n    keys: {\n      text?: string;\n      sendAll?: boolean;\n      quickReplies?: string[];\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendMsgFormState> = {};\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('sendAll')) {\n      updates.sendAll = keys.sendAll;\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate(\n        i18n.t('forms.quick_replies', 'Quick Replies'),\n        keys.quickReplies,\n        [MaxOfTenItems]\n      );\n    }\n\n    const updated = mergeForm(this.state, updates) as SendMsgFormState;\n\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageInput(event: React.KeyboardEvent) {\n    return this.handleUpdate({ text: (event.target as any).value }, false);\n  }\n\n  public handleMessageUpdate(message: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text: message }, submitting);\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  public handleSendAllUpdate(sendAll: boolean): boolean {\n    return this.handleUpdate({ sendAll });\n  }\n\n  private handleSave(): void {\n    // don't continue if our message already has errors\n    if (hasErrors(this.state.message)) {\n      return;\n    }\n\n    // make sure we validate untouched text fields and contact fields\n    let valid = this.handleMessageUpdate(this.state.message.value, null, true);\n\n    let templateVariables = this.state.templateVariables;\n    // make sure we don't have untouched template variables\n    this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\n      const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\n      templateVariables = mutate(templateVariables, {\n        [num]: { $merge: updated }\n      }) as StringEntry[];\n      valid = valid && !hasErrors(updated);\n    });\n\n    valid = valid && !hasErrors(this.state.quickReplyEntry);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n      // notify our modal we are done\n      this.props.onClose(false);\n    } else {\n      this.setState({ templateVariables, valid });\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleTemplateChanged(selected: any[]): void {\n    const template = selected ? selected[0] : null;\n\n    if (!template) {\n      this.setState({\n        template: { value: null },\n        templateTranslation: null,\n        templateVariables: []\n      });\n    } else {\n      const templateTranslation = template.translations[0];\n\n      const templateVariables =\n        this.state.templateVariables.length === 0 ||\n        (this.state.template.value && this.state.template.value.uuid !== template.uuid)\n          ? range(0, templateTranslation.variable_count).map(() => {\n              return {\n                value: ''\n              };\n            })\n          : this.state.templateVariables;\n\n      this.setState({\n        template: { value: template },\n        templateTranslation,\n        templateVariables\n      });\n    }\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, [Required]);\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n    this.setState({ templateVariables });\n  }\n\n  private handleShouldExcludeTemplate(template: any): boolean {\n    return !hasUseableTranslation(template as Template);\n  }\n\n  private renderTopicConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg_facebook_warning',\n            'Sending bulk messages over a Facebook channel requires that a topic be specified if the user has not sent a message in the last 24 hours. Setting a topic to use over Facebook is especially important for the first message in your flow.'\n          )}\n        </p>\n        <SelectElement\n          key={'fb_method_select'}\n          name={i18n.t('forms.method', 'Method')}\n          entry={this.state.topic}\n          onChange={this.handleTopicUpdate}\n          options={TOPIC_OPTIONS}\n          placeholder={i18n.t(\n            'forms.send_msg_facebook_topic_placeholder',\n            'Select a topic to use over Facebook'\n          )}\n          clearable={true}\n        />\n      </>\n    );\n  }\n\n  private handleTopicUpdate(topic: SelectOption) {\n    this.setState({ topic: { value: topic } });\n  }\n\n  private renderTemplateConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.whatsapp_warning',\n            'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n          )}\n        </p>\n        <AssetSelector\n          name={i18n.t('forms.template', 'template')}\n          noOptionsMessage=\"No templates found\"\n          assets={this.props.assetStore.templates}\n          entry={this.state.template}\n          onChange={this.handleTemplateChanged}\n          shouldExclude={this.handleShouldExcludeTemplate}\n          searchable={true}\n          formClearable={true}\n        />\n        {this.state.templateTranslation ? (\n          <>\n            <div className={styles.template_text}>{this.state.templateTranslation.content}</div>\n            {range(0, this.state.templateTranslation.variable_count).map((num: number) => {\n              return (\n                <div className={styles.variable} key={'tr_arg_' + num}>\n                  <TextInputElement\n                    name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    showLabel={false}\n                    placeholder={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    onChange={(updatedText: string) => {\n                      this.handleTemplateVariableChanged(updatedText, num);\n                    }}\n                    entry={this.state.templateVariables[num]}\n                    autocomplete={true}\n                  />\n                </div>\n              );\n            })}\n          </>\n        ) : null}\n      </>\n    );\n  }\n\n  private handleAttachmentUploaded(response: AxiosResponse) {\n    const attachments: any = mutate(this.state.attachments, {\n      $push: [{ type: response.data.type, url: response.data.url, uploaded: true }]\n    });\n    this.setState({ attachments });\n  }\n\n  private handleAttachmentChanged(index: number, type: string, url: string) {\n    let attachments: any = this.state.attachments;\n    if (index === -1) {\n      attachments = mutate(attachments, {\n        $push: [{ type, url }]\n      });\n    } else {\n      attachments = mutate(attachments, {\n        [index]: {\n          $set: { type, url }\n        }\n      });\n    }\n\n    this.setState({ attachments });\n  }\n\n  private handleAttachmentRemoved(index: number) {\n    const attachments: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const quickReplies: Tab = {\n      name: i18n.t('forms.quick_replies', 'Quick Replies'),\n      body: (\n        <>\n          <p>\n            {i18n.t(\n              'forms.quick_replies_summary',\n              'Quick Replies are made into buttons for supported channels. For example, when asking a question, you might add a Quick Reply for \"Yes\" and one for \"No\".'\n            )}\n          </p>\n\n          <MultiChoiceInput\n            name={i18n.t('forms.quick_reply', 'quick_reply')}\n            helpText={\n              <Trans i18nKey=\"forms.add_quick_reply\">Add a new Quick Reply and press enter.</Trans>\n            }\n            items={this.state.quickReplies}\n            entry={this.state.quickReplyEntry}\n            onChange={this.handleQuickRepliesUpdate}\n          />\n        </>\n      ),\n      checked: this.state.quickReplies.value.length > 0,\n      hasErrors: hasErrors(this.state.quickReplyEntry)\n    };\n\n    const attachments: Tab = {\n      name: i18n.t('forms.attachments', 'Attachments'),\n      body: renderAttachments(\n        this.context.config.endpoints.attachments,\n        this.state.attachments,\n        this.handleAttachmentUploaded,\n        this.handleAttachmentChanged,\n        this.handleAttachmentRemoved\n      ),\n      checked: this.state.attachments.length > 0\n    };\n\n    const advanced: Tab = {\n      name: i18n.t('forms.advanced', 'Advanced'),\n      body: (\n        <CheckboxElement\n          name={i18n.t('forms.all_destinations', 'All Destinations')}\n          title={i18n.t('forms.all_destinations', 'All Destinations')}\n          labelClassName={styles.checkbox}\n          checked={this.state.sendAll}\n          description={i18n.t(\n            'forms.all_destinations_description',\n            \"Send a message to all destinations known for this contact. If you aren't sure what this means, leave it unchecked.\"\n          )}\n          onChange={this.handleSendAllUpdate}\n        />\n      ),\n      checked: this.state.sendAll\n    };\n\n    const tabs = [quickReplies, attachments, advanced];\n\n    if (hasFeature(this.context.config, FeatureFilter.HAS_WHATSAPP)) {\n      const templates: Tab = {\n        name: 'WhatsApp',\n        body: this.renderTemplateConfig(),\n        checked: this.state.template.value != null,\n        hasErrors: !!this.state.templateVariables.find((entry: StringEntry) => hasErrors(entry))\n      };\n      tabs.splice(0, 0, templates);\n    }\n\n    if (hasFeature(this.context.config, FeatureFilter.HAS_FACEBOOK)) {\n      const templates: Tab = {\n        name: 'Facebook',\n        body: this.renderTopicConfig(),\n        checked: this.state.topic.value != null\n      };\n      tabs.splice(0, 0, templates);\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          counter=\".sms-counter\"\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n        <temba-charcount class=\"sms-counter\"></temba-charcount>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SetRunResult } from 'flowTypes';\nimport { ellipsize, emphasize } from 'utils';\n\nexport const getSavePlaceholder = (value: string, name: string): JSX.Element => (\n  <div>\n    Save {emphasize(ellipsize(value, 100))} as {emphasize(name)}\n  </div>\n);\n\nexport const getClearPlaceholder = (name: string) => <div>Clear value for {emphasize(name)}</div>;\n\nconst SetRunResultComp: React.SFC<SetRunResult> = ({ value, name }): JSX.Element => {\n  if (value) {\n    return getSavePlaceholder(value, name);\n  }\n  return getClearPlaceholder(name);\n};\n\nexport default SetRunResultComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { snakify } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SetRunResultForm.module.scss';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { SelectOption } from 'components/form/select/SelectElement';\n\nexport interface SetRunResultFormState extends FormState {\n  name: AssetEntry;\n  value: StringEntry;\n  category: StringEntry;\n}\n\nexport default class SetRunResultForm extends React.PureComponent<\n  ActionFormProps,\n  SetRunResultFormState\n> {\n  options: SelectOption[] = [];\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const items = this.props.assetStore.results.items;\n    this.options = Object.keys(items).map((key: string) => {\n      return { name: items[key].name, value: key };\n    });\n  }\n\n  private handleNameUpdate(selected: Asset[]): void {\n    if (selected) {\n      this.handleUpdate({ name: selected[0] });\n    } else {\n      this.handleUpdate({ name: null });\n    }\n  }\n\n  public handleValueUpdate(value: string): boolean {\n    return this.handleUpdate({ value });\n  }\n\n  public handleCategoryUpdate(category: string): boolean {\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdate(\n    keys: { name?: Asset; value?: string; category?: string },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<SetRunResultFormState> = {};\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = validate(i18n.t('forms.name', 'Name'), keys.name, [\n        shouldRequireIf(submitting),\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    if (keys.hasOwnProperty('value')) {\n      updates.value = validate(i18n.t('forms.value', 'Value'), keys.value, []);\n    }\n\n    if (keys.hasOwnProperty('category')) {\n      updates.category = validate(i18n.t('forms.category', 'Category'), keys.category, []);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ name: this.state.name.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleCreateAssetFromInput(input: string): Asset {\n    return {\n      id: snakify(input),\n      name: input,\n      type: AssetType.Result\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const snaked =\n      !hasErrors(this.state.name) && this.state.name.value\n        ? '.' + snakify(this.state.name.value.name)\n        : '';\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.form}>\n          <AssetSelector\n            name={i18n.t('forms.result', 'Result')}\n            assets={this.props.assetStore.results}\n            entry={this.state.name}\n            searchable={true}\n            createPrefix={i18n.t('forms.create_prefix', 'New: ')}\n            onChange={this.handleNameUpdate}\n            createAssetFromInput={this.handleCreateAssetFromInput}\n            formClearable={true}\n            showLabel={true}\n            valueKey=\"value\"\n            nameKey=\"name\"\n            additionalOptions={this.options}\n            helpText={\n              <Trans\n                i18nKey=\"forms.result_name_help\"\n                values={{ resultFormat: `@results${snaked}` }}\n              >\n                By naming the result, you can reference it later using [[resultFormat]]\n              </Trans>\n            }\n          />\n\n          <TextInputElement\n            __className={styles.value}\n            name={i18n.t('forms.value', 'Value')}\n            showLabel={true}\n            onChange={this.handleValueUpdate}\n            entry={this.state.value}\n            autocomplete={true}\n            helpText={i18n.t(\n              'forms.result_value_help',\n              'The value to save for this result or empty to clears it. You can use expressions, for example: @(title(input))'\n            )}\n          />\n          <TextInputElement\n            __className={styles.category}\n            name={i18n.t('forms.category', 'Category')}\n            placeholder=\"Optional\"\n            showLabel={true}\n            onChange={this.handleCategoryUpdate}\n            entry={this.state.category}\n            autocomplete={false}\n            helpText={i18n.t(\n              'forms.result_category_help',\n              \"An optional category for your result. For age, the value might be 17, but the category might be 'Young Adult'\"\n            )}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SetRunResultFormState } from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport { Types } from 'config/interfaces';\nimport { SetRunResult } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { snakify } from 'utils';\n\nexport const initializeForm = (settings: NodeEditorSettings): SetRunResultFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.set_run_result) {\n    const action = settings.originalAction as SetRunResult;\n\n    return {\n      name: {\n        value: {\n          id: snakify(action.name),\n          name: action.name,\n          type: AssetType.Result\n        }\n      },\n      value: { value: action.value },\n      category: { value: action.category },\n      valid: true\n    };\n  }\n\n  return {\n    name: { value: null },\n    value: { value: '' },\n    category: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: SetRunResultFormState\n): SetRunResult => {\n  return {\n    type: Types.set_run_result,\n    name: state.name.value.name,\n    value: state.value.value,\n    category: state.category.value,\n    uuid: getActionUUID(settings, Types.set_run_result)\n  };\n};\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartFlow } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nconst StartFlowComp: React.SFC<StartFlow> = (\n  { flow: { name, uuid } },\n  context: any\n): JSX.Element => (\n  <>{renderAssetList([{ name, id: uuid, type: AssetType.Flow }], 3, context.config.endpoints)}</>\n);\n\nStartFlowComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartFlowComp;\n","import { getRecipients, renderAssetList, renderAsset } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartSession } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nimport styles from './StartSession.module.scss';\n\nconst MAX_TO_SHOW = 5;\n\nexport const StartSessionComp: React.SFC<StartSession> = (\n  action: StartSession,\n  context: any\n): JSX.Element => {\n  const recipients = getRecipients(action);\n  return (\n    <div className={styles.node}>\n      <div className={styles.to}>\n        {action.create_contact\n          ? 'Create a new contact'\n          : action.contact_query\n          ? action.contact_query\n          : renderAssetList(recipients, MAX_TO_SHOW, context.config.endpoints)}\n      </div>\n      <div className={styles.flow}>\n        {renderAsset(\n          {\n            name: action.flow.name,\n            id: action.flow.uuid,\n            type: AssetType.Flow\n          },\n          context.config.endpoints\n        )}\n      </div>\n    </div>\n  );\n};\n\nStartSessionComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartSessionComp;\n","import i18n from 'config/i18n';\n\nexport const WAIT_LABEL = i18n.t('forms.message_label', 'If the message response...');\nexport const EXPRESSION_LABEL = i18n.t('forms.expression_label', 'If the expression...');\nexport const GROUP_LABEL = i18n.t(\n  'forms.split_by_groups',\n  \"Select the groups you'd like to split by below\"\n);\n\nexport const OPERAND_LOCALIZATION_DESC = i18n.t(\n  'forms.localize_rules',\n  'Sometimes languages need special rules to route things properly. If a translation is not provided, the original rule will be used.'\n);\n\n// We intentionally don't localize these names\nexport enum DefaultExitNames {\n  All_Responses = 'All Responses',\n  No_Response = 'No Response',\n  Any_Value = 'Any Value',\n  Other = 'Other'\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetArrayEntry,\n  FormState,\n  mergeForm,\n  StringEntry,\n  SelectOptionEntry,\n  FormEntry\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { initializeForm, stateToAction } from './helpers';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\nimport styles from './StartSessionForm.module.scss';\n\nexport const START_TYPE_ASSETS: SelectOption = {\n  name: i18n.t('forms.start_type_manual', 'Select recipients manually'),\n  value: 'assets'\n};\nexport const START_TYPE_CREATE: SelectOption = {\n  name: i18n.t('forms.start_type_create', 'Create a new contact'),\n  value: 'create_contact'\n};\nexport const START_TYPE_QUERY: SelectOption = {\n  name: i18n.t('forms.start_type_query_contact', 'Select a contact with a query'),\n  value: 'contact_query'\n};\n\nconst START_TYPE_OPTIONS = [START_TYPE_ASSETS, START_TYPE_QUERY, START_TYPE_CREATE];\n\nexport interface StartSessionFormState extends FormState {\n  recipients: AssetArrayEntry;\n  flow: FormEntry;\n  startType: SelectOptionEntry;\n  contactQuery: StringEntry;\n}\n\nexport class StartSessionForm extends React.Component<ActionFormProps, StartSessionFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleFlowChanged(flows: Asset[]): boolean {\n    let flow = null;\n    if (flows && flows.length > 0) {\n      flow = flows[0];\n    }\n    return this.handleUpdate({ flow });\n  }\n\n  public handleStartTypeChanged(startType: SelectOption): boolean {\n    return this.handleUpdate({ startType });\n  }\n\n  public handleContactQueryChanged(contactQuery: string): boolean {\n    return this.handleUpdate({ contactQuery });\n  }\n\n  private handleUpdate(\n    keys: { flow?: Asset; recipients?: Asset[]; startType?: SelectOption; contactQuery?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<StartSessionFormState> = {};\n\n    if (keys.hasOwnProperty('startType')) {\n      updates.startType = { value: keys.startType };\n      if (keys.startType !== START_TYPE_ASSETS) {\n        updates.recipients = { value: [] };\n      }\n\n      if (keys.startType !== START_TYPE_QUERY) {\n        updates.contactQuery = { value: '' };\n      }\n    }\n\n    if (keys.hasOwnProperty('contactQuery')) {\n      updates.contactQuery = validate(\n        i18n.t('forms.contact_query', 'Contact Query'),\n        keys.contactQuery,\n        [shouldRequireIf(submitting && this.state.startType.value === START_TYPE_QUERY)]\n      );\n    }\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients, [\n        shouldRequireIf(submitting && this.state.startType.value === START_TYPE_ASSETS)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('flow')) {\n      updates.flow = validate(i18n.t('forms.flow', 'Flow'), keys.flow, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        flow: this.state.flow.value,\n        contactQuery: this.state.contactQuery.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>\n          <SelectElement\n            key=\"start_type_select\"\n            name={i18n.t('forms.start_type', 'Start Type')}\n            entry={this.state.startType}\n            onChange={this.handleStartTypeChanged}\n            options={START_TYPE_OPTIONS}\n          />\n        </div>\n        <p />\n        <div>\n          {renderIf(this.state.startType.value === START_TYPE_ASSETS)(\n            <div data-testid=\"recipients\">\n              <AssetSelector\n                name={i18n.t('forms.recipients', 'Recipients')}\n                placeholder={i18n.t(\n                  'forms.select_who_to_start',\n                  'Select who should be started in the flow'\n                )}\n                assets={this.props.assetStore.recipients}\n                entry={this.state.recipients}\n                searchable={true}\n                multi={true}\n                expressions={true}\n                onChange={this.handleRecipientsChanged}\n              />\n              <p />\n            </div>\n          )}\n\n          {renderIf(this.state.startType.value === START_TYPE_QUERY)(\n            <div data-testid=\"contact_query\">\n              <TextInputElement\n                name={i18n.t('forms.contact_query', 'Contact Query')}\n                placeholder={'household_id = @fields.household_id'}\n                onChange={this.handleContactQueryChanged}\n                entry={this.state.contactQuery}\n                autocomplete={true}\n                focus={true}\n              />\n              <div className={styles.helpText}>\n                {i18n.t('forms.contact_query_help', 'Only one matching contact will be started')}\n              </div>\n            </div>\n          )}\n\n          <AssetSelector\n            name={i18n.t('forms.flow', 'Flow')}\n            placeholder={i18n.t('forms.select_flow', 'Select the flow to start')}\n            assets={this.props.assetStore.flows}\n            entry={this.state.flow}\n            searchable={true}\n            onChange={this.handleFlowChanged}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n\nexport default StartSessionForm;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport {\n  StartSessionFormState,\n  START_TYPE_CREATE,\n  START_TYPE_ASSETS,\n  START_TYPE_QUERY\n} from 'components/flow/actions/startsession/StartSessionForm';\nimport { Types } from 'config/interfaces';\nimport { StartSession } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): StartSessionFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.start_session) {\n    const action = settings.originalAction as StartSession;\n\n    const init = {\n      recipients: {\n        value: getRecipients(action)\n      },\n      flow: {\n        value: action.flow\n      },\n      startType: {\n        value: action.create_contact\n          ? START_TYPE_CREATE\n          : action.contact_query\n          ? START_TYPE_QUERY\n          : START_TYPE_ASSETS\n      },\n      contactQuery: { value: action.contact_query || '' },\n      valid: true\n    };\n\n    return init;\n  }\n\n  return {\n    recipients: { value: [] },\n    flow: { value: null },\n    startType: { value: START_TYPE_ASSETS },\n    contactQuery: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: StartSessionFormState\n): StartSession => {\n  const flow = state.flow.value;\n\n  const action: StartSession = {\n    legacy_vars: getExpressions(state.recipients.value),\n    contacts: getRecipientsByAsset(state.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(state.recipients.value, AssetType.Group),\n    create_contact: state.startType.value === START_TYPE_CREATE,\n    flow: { name: flow.name, uuid: flow.uuid },\n    type: Types.start_session,\n    uuid: getActionUUID(settings, Types.start_session)\n  };\n\n  // only include contact query if it is set\n  if (state.contactQuery.value) {\n    action['contact_query'] = state.contactQuery.value;\n  }\n\n  return action;\n};\n","import { TransferAirtime } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './TransferAirtime.module.scss';\n\nconst TransferAirtimeComp: React.SFC<TransferAirtime> = (transfer): JSX.Element => {\n  const details = Object.keys(transfer.amounts).map((key: string) => {\n    return (\n      <div key={'transfer_' + key}>\n        <div className={styles.amount}>{transfer.amounts[key]}</div>\n        <div className={styles.code}>{key}</div>\n      </div>\n    );\n  });\n\n  return <div>{details}</div>;\n};\n\nexport default TransferAirtimeComp;\n","import { getLanguageForCode } from 'components/flow/actions/updatecontact/helpers';\nimport i18n from 'config/i18n';\nimport { Types } from 'config/interfaces';\nimport {\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactLanguage,\n  SetContactName,\n  SetContactStatus\n} from 'flowTypes';\nimport * as React from 'react';\nimport { emphasize } from 'utils';\nconst styles = require('components/shared.module.scss');\n\nconst withEmph = (text: string, emph: boolean) => (emph ? emphasize(text) : text);\n\nexport const renderSetText = (\n  name: string,\n  value: string,\n  emphasizeName: boolean = false\n): JSX.Element => {\n  if (value) {\n    return (\n      <div className={`${styles.node_asset}`}>\n        Set {withEmph(name, emphasizeName)} to {emphasize(value)}.\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {i18n.t('forms.clear', 'Clear')} {withEmph(name, emphasizeName)}.\n      </div>\n    );\n  }\n};\n\nconst UpdateContactComp: React.SFC<SetContactAttribute> = (\n  action: SetContactAttribute\n): JSX.Element => {\n  if (action.type === Types.set_contact_field) {\n    return renderSetText(action.field.name, action.value, true);\n  }\n\n  if (action.type === Types.set_contact_channel) {\n    const setContactAction = action as SetContactChannel;\n    return renderSetText(\n      'channel',\n      setContactAction.channel ? setContactAction.channel.name : null,\n      false\n    );\n  }\n\n  if (action.type === Types.set_contact_language) {\n    const setLanguageAction = action as SetContactLanguage;\n    return renderSetText(\n      'language',\n      getLanguageForCode(setLanguageAction.language, (action as any).languages),\n      false\n    );\n  }\n\n  if (action.type === Types.set_contact_status) {\n    return renderSetText('status', (action as SetContactStatus).status, false);\n  }\n\n  if (action.type === Types.set_contact_name) {\n    return renderSetText('name', (action as SetContactName).name, false);\n  }\n\n  return null;\n};\n\nexport default UpdateContactComp;\n","import {\n  CHANNEL_PROPERTY,\n  LANGUAGE_PROPERTY,\n  NAME_PROPERTY,\n  STATUS_PROPERTY\n} from 'components/flow/props';\nimport { isOnlineFlowType } from 'config/helpers';\nimport { FlowTypes } from 'config/interfaces';\nimport { Asset, RenderNode } from 'store/flowContext';\n\nexport interface DragPoint {\n  exitUUID: string;\n  nodeUUID: string;\n}\n\nexport const getDraggedFrom = (ghostNode: RenderNode): DragPoint => {\n  if (ghostNode.ghost) {\n    const exitUUIDs = Object.keys(ghostNode.inboundConnections);\n    if (exitUUIDs.length > 0) {\n      const exitUUID = exitUUIDs[0];\n      const nodeUUID = ghostNode.inboundConnections[exitUUID];\n      return { exitUUID, nodeUUID };\n    }\n  }\n};\n\nconst ONLINE_PROPERTIES: Asset[] = [\n  NAME_PROPERTY,\n  LANGUAGE_PROPERTY,\n  CHANNEL_PROPERTY,\n  STATUS_PROPERTY\n];\nconst OFFLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY, STATUS_PROPERTY];\n\nexport const getContactProperties = (flowType: FlowTypes = null): Asset[] => {\n  return !flowType || isOnlineFlowType(flowType) ? ONLINE_PROPERTIES : OFFLINE_PROPERTIES;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport {\n  Action,\n  CallResthook,\n  CallWebhook,\n  Case,\n  Category,\n  Exit,\n  FlowNode,\n  Router,\n  RouterTypes,\n  SwitchRouter,\n  TransferAirtime,\n  UIConfig,\n  WebhookExitNames,\n  CallClassifier,\n  OpenTicket\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { createUUID, snakify } from 'utils';\n\nexport interface CategorizedCases {\n  cases: Case[];\n  categories: Category[];\n  exits: Exit[];\n  caseConfig: { [uuid: string]: any };\n}\nexport interface ResolvedRoutes extends CategorizedCases {\n  defaultCategory: string;\n  timeoutCategory?: string;\n}\n\nexport const createRenderNode = (\n  uuid: string,\n  router: Router,\n  exits: Exit[],\n  type: Types,\n  actions: Action[] = [],\n  uiConfig: { [key: string]: any } = {}\n): RenderNode => {\n  const renderNode: RenderNode = {\n    node: {\n      uuid,\n      actions,\n      router,\n      exits\n    },\n    ui: {\n      type,\n      position: null,\n      config: uiConfig\n    },\n    inboundConnections: {}\n  };\n  return renderNode;\n};\n\nexport const hasCases = (node: FlowNode): boolean => {\n  if (\n    node.router &&\n    (node.router as SwitchRouter).cases &&\n    (node.router as SwitchRouter).cases.length\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getCategories = (renderNode: RenderNode): Category[] => {\n  if (renderNode.node.router) {\n    return renderNode.node.router.categories;\n  }\n  return [];\n};\n\nexport const createCaseProps = (cases: Case[], renderNode: RenderNode): CaseProps[] => {\n  const categories: Category[] = getCategories(renderNode);\n\n  // make sure we don't mutate the in memory version of our cases\n  const newCases = JSON.parse(JSON.stringify(cases));\n  return newCases.map((kase: Case) => {\n    const matchingCategory = categories.find(\n      (category: Category) => category.uuid === kase.category_uuid\n    );\n\n    if (isRelativeDate(kase.type)) {\n      if (renderNode.ui.config && renderNode.ui.config.cases) {\n        const caseConfig = renderNode.ui.config.cases[kase.uuid];\n        if (caseConfig && caseConfig.arguments) {\n          kase.arguments = caseConfig.arguments;\n        }\n      }\n    }\n\n    return {\n      uuid: kase.uuid,\n      kase,\n      categoryName: matchingCategory ? matchingCategory.name : null,\n      valid: true\n    };\n  });\n};\n\nexport const isRelativeDate = (operatorType: Operators): boolean => {\n  return !![Operators.has_date_eq, Operators.has_date_gt, Operators.has_date_lt].find(\n    (type: string) => operatorType === type\n  );\n};\n\nconst isCategoryMatch = (cat: Category, kase: CaseProps) => {\n  // see if we have the same name\n  return cat.name.toLowerCase().trim() === kase.categoryName.trim().toLowerCase();\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const categorizeCases = (\n  newCases: CaseProps[],\n  originalNode: FlowNode\n): CategorizedCases => {\n  const categories: Category[] = [];\n  const cases: Case[] = [];\n  const exits: Exit[] = [];\n  const caseConfig: UIConfig = {};\n\n  const originalRouter = originalNode && originalNode.router;\n  const previousCategories = (originalRouter && originalRouter.categories) || [];\n\n  // look over the new cases and match up categories and exits\n  for (const newCase of newCases) {\n    // ignore empty cases\n    if (!newCase.categoryName || newCase.categoryName.trim().length === 0) {\n      continue;\n    }\n\n    // convert relative dates to expressions with configs\n    if (isRelativeDate(newCase.kase.type)) {\n      caseConfig[newCase.uuid] = { arguments: newCase.kase.arguments };\n      newCase.kase.arguments = [`@(datetime_add(today(), ${newCase.kase.arguments[0]}, \"D\"))`];\n    }\n\n    //  see if it exists on a previous case\n    let category = categories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n    // if not, see if that category exists on our old node\n    if (!category) {\n      category = previousCategories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n      // still no category, lets see if we can find a case uuid match\n      if (!category) {\n        const router = getSwitchRouter(originalNode);\n        if (router) {\n          const previousCase = router.cases.find((kase: Case) => kase.uuid === newCase.uuid);\n          if (previousCase) {\n            const previousCategory = previousCategories.find(\n              (cat: Category) => cat.uuid === previousCase.category_uuid\n            );\n\n            if (previousCategory) {\n              category = { ...previousCategory, name: newCase.categoryName };\n            }\n          }\n        }\n      }\n\n      // don't pull over an old category more than once\n      if (category && categories.find((cat: Category) => cat.uuid === category.uuid)) {\n        category = null;\n      }\n\n      // we found an old category, bring it and its exit over\n      if (category) {\n        categories.push(category);\n        const previousExit = originalNode.exits.find(\n          (exit: Exit) => category.exit_uuid === exit.uuid\n        );\n        exits.push(previousExit);\n      }\n    }\n\n    // if still no category, finally lets just create a new one\n    if (!category) {\n      const exit: Exit = {\n        uuid: createUUID()\n      };\n\n      exits.push(exit);\n\n      category = {\n        uuid: createUUID(),\n        name: newCase.categoryName,\n        exit_uuid: exit.uuid\n      };\n\n      categories.push(category);\n    }\n\n    // lastly, add our case\n    cases.push({\n      ...newCase.kase,\n      category_uuid: category.uuid\n    });\n  }\n\n  return { cases, categories, exits, caseConfig };\n};\n\nexport const getSwitchRouter = (node: FlowNode): SwitchRouter => {\n  if (node && node.router && node.router.type === RouterTypes.switch) {\n    return node.router as SwitchRouter;\n  }\n  return null;\n};\n\n/**\n * Adds a default route, reusing the previous one if possible\n * @param originalNode\n */\nexport const getDefaultRoute = (\n  defaultCategoryName: string,\n  originalNode: FlowNode\n): { defaultCategory: Category; defaultExit: Exit } => {\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // use the previous default if it had one\n  if (originalRouter) {\n    const defaultCategory = originalRouter.categories.find(\n      (cat: Category) => cat.uuid === originalRouter.default_category_uuid\n    );\n\n    const defaultExit = originalNode.exits.find((e: Exit) => e.uuid === defaultCategory.exit_uuid);\n\n    defaultCategory.name = defaultCategoryName;\n\n    return { defaultCategory, defaultExit };\n  }\n  // otherwise, create a new exit and category\n  else {\n    const defaultExit: Exit = {\n      uuid: createUUID()\n    };\n\n    const defaultCategory = {\n      uuid: createUUID(),\n      name: defaultCategoryName,\n      exit_uuid: defaultExit.uuid\n    };\n\n    return { defaultCategory, defaultExit };\n  }\n};\n\nconst getTimeoutRoute = (\n  originalNode: FlowNode\n): { timeoutCategory: Category; timeoutExit: Exit } => {\n  let timeoutCategory: Category = null;\n  let timeoutExit: Exit = null;\n\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // see if our previous node had a timeout case\n  if (originalRouter) {\n    if (originalRouter.wait && originalRouter.wait.timeout) {\n      const previousCategory = originalRouter.wait.timeout.category_uuid;\n      timeoutCategory = originalRouter.categories.find(\n        (cat: Category) => cat.uuid === previousCategory\n      );\n      timeoutExit = originalNode.exits.find(\n        (exit: Exit) => exit.uuid === timeoutCategory.exit_uuid\n      );\n    }\n  }\n\n  if (!timeoutCategory) {\n    // create a new route\n    timeoutExit = {\n      uuid: createUUID()\n    };\n\n    timeoutCategory = {\n      uuid: createUUID(),\n      name: DefaultExitNames.No_Response,\n      exit_uuid: timeoutExit.uuid\n    };\n  }\n\n  return { timeoutCategory, timeoutExit };\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const resolveRoutes = (\n  newCases: CaseProps[],\n  hasTimeout: boolean,\n  originalNode: FlowNode,\n  defaultCategoryName: string = null\n): ResolvedRoutes => {\n  const resolved = categorizeCases(newCases, originalNode);\n\n  let resolvedDefaultCategory = defaultCategoryName;\n  if (!resolvedDefaultCategory) {\n    resolvedDefaultCategory =\n      resolved.categories.length > 0 ? DefaultExitNames.Other : DefaultExitNames.All_Responses;\n  }\n\n  // tack on our other category\n  const { defaultCategory, defaultExit } = getDefaultRoute(resolvedDefaultCategory, originalNode);\n  resolved.categories.push(defaultCategory);\n  resolved.exits.push(defaultExit);\n\n  const results: ResolvedRoutes = {\n    ...resolved,\n    defaultCategory: defaultCategory.uuid\n  };\n\n  // add in a timeout route if we need one\n  if (hasTimeout) {\n    const { timeoutCategory, timeoutExit } = getTimeoutRoute(originalNode);\n    resolved.categories.push(timeoutCategory);\n    resolved.exits.push(timeoutExit);\n    results.timeoutCategory = timeoutCategory.uuid;\n  }\n\n  return results;\n};\n\nexport const createWebhookBasedNode = (\n  action: CallWebhook | CallResthook | OpenTicket | TransferAirtime,\n  originalNode: RenderNode,\n  useCategoryTest: boolean\n): RenderNode => {\n  const exits: Exit[] = [];\n  let cases: Case[] = [];\n  let categories: Category[] = [];\n\n  // see if we are editing an existing router so we reuse exits\n  if (\n    originalNode &&\n    originalNode.node.actions.length === 1 &&\n    originalNode.node.actions[0].type === action.type\n  ) {\n    const previousRouter = getSwitchRouter(originalNode.node);\n    originalNode.node.exits.forEach((exit: any) => exits.push(exit));\n    previousRouter.cases.forEach(kase => cases.push(kase));\n    originalNode.node.router.categories.forEach(category => categories.push(category));\n  } else {\n    // Otherwise, let's create some new ones\n    exits.push(\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    );\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Success,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Failure,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: useCategoryTest ? Operators.has_category : Operators.has_only_text,\n        arguments: [WebhookExitNames.Success],\n        category_uuid: categories[0].uuid\n      }\n    ];\n  }\n\n  let operand = '@results.' + snakify(action.result_name);\n  if (!useCategoryTest) {\n    operand += '.category';\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: operand,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  let splitType = Types.split_by_webhook;\n  if (action.type === Types.call_resthook) {\n    splitType = Types.split_by_resthook;\n  } else if (action.type === Types.open_ticket) {\n    splitType = Types.split_by_ticket;\n  } else if (action.type === Types.transfer_airtime) {\n    splitType = Types.split_by_airtime;\n  }\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n\nexport const createSplitOnActionResultNode = (\n  action: CallClassifier,\n  originalNode: RenderNode\n): RenderNode => {\n  const splitType = Types.split_by_intent;\n  const exits: Exit[] = [];\n  const router: SwitchRouter = {\n    cases: [],\n    operand: '',\n    categories: [],\n    type: RouterTypes.switch,\n    default_category_uuid: null\n  };\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n","import { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport {\n  CallResthook,\n  CallWebhook,\n  Category,\n  Exit,\n  FlowNode,\n  RouterTypes,\n  TransferAirtime,\n  Action,\n  AnyAction,\n  FlowIssue\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { getType } from 'config/typeConfigs';\n\nexport const getCategoriesForExit = (renderNode: RenderNode, exit: Exit): Category[] => {\n  // if we are\n  const isGroupSplit = getType(renderNode) === Types.split_by_groups;\n\n  if (!renderNode.node.router) {\n    return [];\n  }\n  return renderNode.node.router.categories\n    .filter((cat: Category) => cat.exit_uuid === exit.uuid)\n    .map((cat: Category) => {\n      if (isGroupSplit) {\n        return {\n          ...cat\n        };\n      } else {\n        return { ...cat, missing: false };\n      }\n    });\n};\n\nexport const getResultName = (node: FlowNode) => {\n  const switchRouter = getSwitchRouter(node);\n  if (switchRouter && switchRouter.result_name) {\n    return switchRouter.result_name;\n  }\n\n  if (node.router && node.router.type === RouterTypes.random) {\n    return node.router.result_name;\n  }\n\n  if (node.actions.length === 1) {\n    const action = node.actions[0];\n    if (\n      action.type === Types.call_webhook ||\n      action.type === Types.call_resthook ||\n      action.type === Types.open_ticket ||\n      action.type === Types.transfer_airtime\n    ) {\n      const resultAction = action as CallWebhook | CallResthook | TransferAirtime;\n      return resultAction.result_name;\n    }\n  }\n};\n\nexport const getVisibleActions = (renderNode: RenderNode): Action[] => {\n  // subflow nodes hide their set run results\n  if (getType(renderNode) === Types.split_by_subflow) {\n    return renderNode.node.actions.filter((action: Action) => action.type !== Types.set_run_result);\n  }\n\n  return renderNode.node.actions;\n};\n\nexport const filterIssuesForAction = (\n  nodeUUID: string,\n  action: AnyAction,\n  issues: FlowIssue[]\n): FlowIssue[] => {\n  return issues.filter(issue => issue.node_uuid === nodeUUID && issue.action_uuid === action.uuid);\n};\n","import { getResultName } from 'components/flow/node/helpers';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { Types } from 'config/interfaces';\nimport {\n  AnyAction,\n  Dimensions,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  RouterTypes,\n  StickyNote,\n  SwitchRouter\n} from 'flowTypes';\nimport {\n  Asset,\n  AssetMap,\n  AssetStore,\n  AssetType,\n  Reference,\n  RenderNode,\n  RenderNodeMap\n} from 'store/flowContext';\nimport { assetListToMap, detectLoops, getActionIndex, getExitIndex, getNode } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { LocalizationUpdates } from 'store/thunks';\nimport { createUUID, merge, push, set, snakify, snapToGrid, splice, unset } from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const uniquifyNode = (newNode: FlowNode): FlowNode => {\n  // Give our node a unique uuid\n  return mutate(newNode, merge({ uuid: createUUID() }));\n};\n\nexport const getDefaultExit = (node: FlowNode) => {\n  if (node.router.type === RouterTypes.switch) {\n    const switchRouter = node.router as SwitchRouter;\n    return node.exits.find(exit => exit.uuid === switchRouter.default_category_uuid);\n  }\n};\n\nexport const addAssets = (type: string, store: AssetStore, assets: Asset[]): AssetStore => {\n  const assetMap = assetListToMap(assets);\n  const updated = mutate(store, {\n    [type]: {\n      items: {\n        $merge: assetMap\n      }\n    }\n  });\n  return updated;\n};\n\nexport const removeResultReference = (\n  resultName: string,\n  items: AssetMap,\n  reference: Reference\n): AssetMap => {\n  const key = snakify(resultName);\n\n  if (key in items) {\n    const item = items[key];\n    const filteredRefs = item.references.filter(\n      (ref: Reference) =>\n        ref.nodeUUID !== reference.nodeUUID || ref.actionUUID !== reference.actionUUID\n    );\n\n    if (filteredRefs.length === 0) {\n      return mutate(items, { $unset: [key] });\n    }\n\n    return mutate(items, { [key]: { references: { $set: filteredRefs } } });\n  }\n  return items;\n};\n\nexport const removeResultFromStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName && assets.results) {\n    const items = removeResultReference(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n  return assets;\n};\n\nexport const addResultToStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n};\n\nexport const addResult = (resultName: string, items: AssetMap, reference: Reference): AssetMap => {\n  const key = snakify(resultName);\n  const result =\n    key in items\n      ? items[key]\n      : {\n          name: resultName,\n          id: key,\n          type: AssetType.Result,\n          references: []\n        };\n\n  if (\n    !result.references.find(\n      (ref: Reference) =>\n        ref.nodeUUID === reference.nodeUUID && ref.actionUUID === reference.actionUUID\n    )\n  ) {\n    result.references.push(reference);\n  }\n\n  return mutate(items, { $merge: { [key]: result } });\n};\n\nexport const addRevision = (assets: AssetStore, revision: Revision): AssetStore => {\n  return mutate(assets, {\n    revisions: { items: { $merge: { [revision.id]: revision } } }\n  });\n};\n\nexport const addFlowResult = (assets: AssetStore, node: FlowNode): AssetStore => {\n  let updated = assets;\n\n  // TODO: initialize these to empties further up to avoid this\n  if (!updated) {\n    updated = { results: { items: {}, type: AssetType.Result } };\n  }\n\n  if (!updated.results) {\n    updated.results = { items: {}, type: AssetType.Result };\n  }\n\n  const resultName = getResultName(node);\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, {\n      nodeUUID: node.uuid\n    });\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n\n  return assets;\n};\n\n/**\n * Update the destination for a specific exit. Updates destination_uuid and\n * the inboundConnections for the given node\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n * @param destination\n */\nexport const updateConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string,\n  destinationNodeUUID: string\n): RenderNodeMap => {\n  let updatedNodes = nodes;\n  const fromNode = getNode(nodes, fromNodeUUID);\n\n  // make sure our destination exits if they provided one\n  if (destinationNodeUUID) {\n    getNode(nodes, destinationNodeUUID);\n  }\n\n  const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n  const previousDestination = fromNode.node.exits[exitIdx].destination_uuid;\n\n  updatedNodes = mutate(updatedNodes, {\n    [fromNodeUUID]: {\n      node: {\n        exits: {\n          [exitIdx]: {\n            destination_uuid: set(destinationNodeUUID)\n          }\n        }\n      }\n    }\n  });\n\n  // update our pointers\n  if (destinationNodeUUID) {\n    updatedNodes = mutate(updatedNodes, {\n      [destinationNodeUUID]: {\n        inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n      }\n    });\n  }\n\n  if (previousDestination != null) {\n    updatedNodes = mutate(updatedNodes, {\n      [previousDestination]: { inboundConnections: unset([[fromExitUUID]]) }\n    });\n  }\n\n  return updatedNodes;\n};\n\nexport const addLanguage = (languages: Asset[], language: Asset): Asset[] => {\n  return mutate(languages, push([language]));\n};\n\n/**\n * Removes a spcific destination for an exit and the associated inboundConnection.\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n */\nexport const removeConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string\n): RenderNodeMap => {\n  return updateConnection(nodes, fromNodeUUID, fromExitUUID, null);\n};\n\n/**\n * Adds a given RenderNode to our node map or updates an existing one.\n * Updates destinations for any inboundConnections provided and updates\n * inboundConnections for any destination_uuid our exits point to.\n * @param nodes\n * @param node the node to add, if unique uuid, it will be added\n */\nexport const mergeNode = (nodes: RenderNodeMap, node: RenderNode): RenderNodeMap => {\n  let updatedNodes = nodes;\n\n  // if the node is already there, remove it first\n  if (updatedNodes[node.node.uuid]) {\n    updatedNodes = removeNode(nodes, node.node.uuid);\n  }\n\n  // add our node upadted node\n  updatedNodes = mutate(nodes, merge({ [node.node.uuid]: node }));\n\n  // if we have inbound connections, update our nodes accordingly\n  for (const fromExitUUID of Object.keys(node.inboundConnections)) {\n    const fromNodeUUID = node.inboundConnections[fromExitUUID];\n\n    const fromNode = getNode(nodes, fromNodeUUID);\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: merge({ destination_uuid: node.node.uuid })\n          }\n        }\n      }\n    });\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Adds a given action to the provided node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const addAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  // check that our node exists\n  getNode(nodes, nodeUUID);\n  return mutate(nodes, { [nodeUUID]: { node: { actions: push([action]) } } });\n};\n\n/**\n * Updates the given action in place by it's uuid\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const updateAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  newAction: AnyAction,\n  originalAction?: AnyAction\n) => {\n  const originalNode = getNode(nodes, nodeUUID);\n  // If we have existing actions, find our action and update it\n  const actionIdx = originalAction ? getActionIndex(originalNode.node, originalAction.uuid) : 0;\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: {\n        actions: { [actionIdx]: set(newAction) }\n      }\n    }\n  });\n};\n\nexport const spliceInAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  const { [nodeUUID]: previousNode } = nodes;\n\n  const otherExit = getDefaultExit(previousNode.node);\n  const destination = otherExit ? otherExit.destination_uuid : null;\n\n  // remove our previous node\n  let updatedNodes = removeNode(nodes, previousNode.node.uuid, false);\n\n  const newNode: RenderNode = {\n    node: {\n      uuid: createUUID(),\n      actions: [action],\n      exits: [{ uuid: createUUID(), destination_uuid: destination }]\n    },\n    ui: { position: previousNode.ui.position, type: Types.execute_actions },\n    inboundConnections: previousNode.inboundConnections\n  };\n\n  // add our new node\n  updatedNodes = mergeNode(updatedNodes, newNode);\n\n  return updatedNodes;\n};\n\n/** Removes a specific action from a node */\nexport const removeAction = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n  return mutate(nodes, {\n    [nodeUUID]: { node: { actions: splice([[actionIdx, 1]]) } }\n  });\n};\n\n/**\n * Moves a single action up in the list for the given node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const moveActionUp = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n\n  const actions = renderNode.node.actions;\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n\n  if (actionIdx === 0) {\n    throw new Error('Cannot move an action at the top upwards');\n  }\n\n  const action = actions[actionIdx];\n  const actionAbove = actions[actionIdx - 1];\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: { actions: splice([[actionIdx - 1, 2, action, actionAbove]]) }\n    }\n  });\n};\n\n/**\n * Removes a given node from our node map. Updates destinations for any exits that point to us\n * and removes any inboundConnections that reference our exits. Also will reroute connections\n * that route through us.\n * @param nodes\n * @param nodeToRemove\n */\nexport const removeNode = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  remap: boolean = true\n): RenderNodeMap => {\n  const nodeToRemove = getNode(nodes, nodeUUID);\n  let updatedNodes = nodes;\n\n  // remove us from any inbound connections\n  for (const exit of nodeToRemove.node.exits) {\n    if (exit.destination_uuid) {\n      updatedNodes = mutate(updatedNodes, {\n        [exit.destination_uuid]: {\n          inboundConnections: unset([exit.uuid])\n        }\n      });\n    }\n  }\n\n  // clear any destinations that point to us\n  for (const fromExitUUID of Object.keys(nodeToRemove.inboundConnections)) {\n    // if we have a single destination, reroute those pointing to us\n    let destination = null;\n    if (remap && nodeToRemove.node.exits.length === 1) {\n      ({ destination_uuid: destination } = nodeToRemove.node.exits[0]);\n    }\n\n    const fromNodeUUID = nodeToRemove.inboundConnections[fromExitUUID];\n    const fromNode = getNode(nodes, fromNodeUUID);\n\n    // make sure we aren't creating a loop\n    if (destination) {\n      try {\n        detectLoops(updatedNodes, fromNodeUUID, destination);\n      } catch {\n        destination = null;\n      }\n    }\n\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: { destination_uuid: set(destination) }\n          }\n        }\n      }\n    });\n\n    // if we are setting a new destination, update the inboundConnections\n    if (destination) {\n      // make sure our destination exists\n      getNode(nodes, destination);\n      updatedNodes = mutate(updatedNodes, {\n        [destination]: {\n          inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n        }\n      });\n    }\n  }\n\n  // remove the actual node\n  return mutate(updatedNodes, unset([nodeUUID]));\n};\n\n/**\n * Update the position for a given node\n * @param nodes\n * @param nodeUUID\n * @param x\n * @param y\n */\nexport const updatePosition = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): RenderNodeMap => {\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: set({\n          left: adjusted.left,\n          top: adjusted.top\n        })\n      }\n    }\n  });\n};\n\nexport const updateStickyNotePosition = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n\n  const lastPos = definition._ui.stickies[stickyUUID].position;\n  const width = lastPos.right - lastPos.left;\n  const height = lastPos.bottom - lastPos.top;\n\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [stickyUUID]: {\n          position: set({\n            left: adjusted.left,\n            top: adjusted.top,\n            right: adjusted.left + width,\n            bottom: adjusted.top + height\n          })\n        }\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific node\n * @param nodes\n * @param nodeUUID\n * @param dimensions\n */\nexport const updateNodeDimensions = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  dimensions: Dimensions\n): RenderNodeMap => {\n  const node = getNode(nodes, nodeUUID);\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: merge({\n          bottom: node.ui.position.top + dimensions.height,\n          right: node.ui.position.left + dimensions.width\n        })\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific sticky\n * @param definition\n * @param uuuid\n * @param dimensions\n */\nexport const updateStickyDimensions = (\n  definition: FlowDefinition,\n  uuid: string,\n  dimensions: Dimensions\n): FlowDefinition => {\n  const position = definition._ui.stickies[uuid].position;\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [uuid]: {\n          position: merge({\n            bottom: position.top + dimensions.height,\n            right: position.left + dimensions.width\n          })\n        }\n      }\n    }\n  });\n};\n\nexport const updateStickyNote = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  sticky: StickyNote\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n  if (sticky) {\n    return mutate(definition, {\n      _ui: { stickies: merge({ [stickyUUID]: sticky }) }\n    });\n  } else {\n    return mutate(definition, { _ui: { stickies: unset([stickyUUID]) } });\n  }\n};\n\nexport const mergeNodeEditorSettings = (\n  current: NodeEditorSettings,\n  newSettings: NodeEditorSettings\n) => {\n  if (!newSettings) {\n    return current;\n  }\n\n  if (!current) {\n    return newSettings;\n  }\n\n  return mutate(current, { $merge: newSettings });\n};\n\n/**\n * Prunes the definition for editing, removing node references\n * @param definition our full definition\n */\nexport const pruneDefinition = (definition: FlowDefinition): FlowDefinition =>\n  mutate(definition, { nodes: [], _ui: { $merge: { nodes: {} } } });\n\n/**\n * Update the localization in the definition with the provided changes for a language\n * @param definition\n * @param language\n * @param changes\n */\nexport const updateLocalization = (\n  definition: FlowDefinition,\n  language: string,\n  changes: LocalizationUpdates\n) => {\n  let newDef = definition;\n\n  // Add language to localization map if not present\n  if (!newDef.localization[language]) {\n    newDef = mutate(newDef, {\n      localization: {\n        [language]: set({})\n      }\n    });\n  }\n\n  // Apply changes\n  changes.forEach(({ translations, uuid }) => {\n    if (translations) {\n      // normalize our translations so all are treated as arrays\n      const normalizedTranslations: { [uuid: string]: string[] } = {};\n      for (const key of Object.keys(translations)) {\n        const prev = translations[key];\n        if (Array.isArray(prev)) {\n          normalizedTranslations[key] = prev;\n        } else {\n          normalizedTranslations[key] = [prev];\n        }\n      }\n\n      // adding localization\n      newDef = mutate(newDef, {\n        localization: { [language]: { [uuid]: set(normalizedTranslations) } }\n      });\n    } else {\n      // removing localization\n      newDef = mutate(newDef, {\n        localization: { [language]: unset([uuid]) }\n      });\n    }\n  });\n\n  return newDef;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport {\n  getName,\n  initializeForm,\n  sortFieldsAndProperties,\n  stateToAction,\n  UpdateContactFormState\n} from 'components/flow/actions/updatecontact/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getContactProperties } from 'components/helpers';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types, ContactStatus } from 'config/interfaces';\nimport { ContactProperties } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType, updateAssets } from 'store/flowContext';\nimport * as mutators from 'store/mutators';\nimport { mergeForm } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './UpdateContactForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\n\nexport const CONTACT_STATUS_ACTIVE: SelectOption = {\n  name: i18n.t('contact_statuses.active', 'Active'),\n  value: ContactStatus.ACTIVE\n};\nexport const CONTACT_STATUS_BLOCKED: SelectOption = {\n  name: i18n.t('contact_statuses.blocked', 'Blocked - remove from groups, ignore forever'),\n  value: ContactStatus.BLOCKED\n};\nexport const CONTACT_STATUS_STOPPED: SelectOption = {\n  name: i18n.t(\n    'contact_statuses.stopped',\n    'Stopped - remove from groups, ignore until they message again'\n  ),\n  value: ContactStatus.STOPPED\n};\nexport const CONTACT_STATUS_ARCHIVED: SelectOption = {\n  name: i18n.t('contact_statuses.archived', 'Archived - remove from groups, ignore forever'),\n  value: ContactStatus.ARCHIVED\n};\nexport const CONTACT_STATUS_OPTIONS: SelectOption[] = [\n  CONTACT_STATUS_ACTIVE,\n  CONTACT_STATUS_BLOCKED,\n  CONTACT_STATUS_STOPPED,\n  CONTACT_STATUS_ARCHIVED\n];\n\nexport default class UpdateContactForm extends React.Component<\n  ActionFormProps,\n  UpdateContactFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^get/, /^on/, /^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      type?: Types;\n      name?: string;\n      channel?: Asset;\n      language?: Asset;\n      status?: SelectOption;\n      field?: Asset;\n      fieldValue?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<UpdateContactFormState> = {};\n\n    if (keys.hasOwnProperty('type')) {\n      updates.type = keys.type;\n    }\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = { value: keys.name };\n    }\n\n    if (keys.hasOwnProperty('channel')) {\n      updates.channel = validate(i18n.t('forms.channel', 'Channel'), keys.channel, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('language')) {\n      updates.language = validate(i18n.t('forms.language', 'Language'), keys.language, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('status')) {\n      updates.status = { value: keys.status };\n    }\n\n    if (keys.hasOwnProperty('field')) {\n      updates.field = { value: keys.field };\n    }\n\n    if (keys.hasOwnProperty('fieldValue')) {\n      updates.fieldValue = { value: keys.fieldValue, validationFailures: [] };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handlePropertyChange(selected: any[]): boolean {\n    const selection = selected[0];\n    if (selection) {\n      if (selection.type === AssetType.ContactProperty) {\n        switch (selection.id) {\n          case ContactProperties.Name:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_name,\n              name: ''\n            });\n          case ContactProperties.Language:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_language\n            });\n          case ContactProperties.Status:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_status\n            });\n          case ContactProperties.Channel:\n            return this.handleUpdate({\n              field: selection,\n              type: Types.set_contact_channel\n            });\n        }\n      }\n      return this.handleUpdate({\n        type: Types.set_contact_field,\n        field: selection,\n        fieldValue: ''\n      });\n    }\n  }\n\n  private handleChannelUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ channel: selection[0] }, submitting);\n  }\n\n  private handleLanguageUpdate(selection: any[], submitting = false): boolean {\n    return this.handleUpdate({ language: selection[0] }, submitting);\n  }\n\n  private handleStatusUpdate(status: SelectOption): boolean {\n    return this.handleUpdate({ status, fieldValue: '' });\n  }\n\n  private handleFieldValueUpdate(fieldValue: string): boolean {\n    return this.handleUpdate({ fieldValue, name: '' });\n  }\n\n  private handleNameUpdate(name: string): boolean {\n    return this.handleUpdate({ name, fieldValue: '' });\n  }\n\n  private onUpdated(dispatch: DispatchWithState, getState: GetState): void {\n    const {\n      flowContext: { assetStore }\n    } = getState();\n\n    if (this.state.field.value.type === AssetType.Field) {\n      dispatch(updateAssets(mutators.addAssets('fields', assetStore, [this.state.field.value])));\n    }\n  }\n\n  public handleFieldAdded(field: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('fields', field);\n    this.handlePropertyChange([field]);\n  }\n\n  private handleSave(): void {\n    let valid = this.state.valid;\n\n    // check if language required\n    if (this.state.type === Types.set_contact_language) {\n      valid = this.handleLanguageUpdate([this.state.language.value], true) && valid;\n    }\n\n    // check if channel required\n    if (this.state.type === Types.set_contact_channel) {\n      valid = this.handleChannelUpdate([this.state.channel.value], true) && valid;\n    }\n\n    if (valid) {\n      // do the saving!\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state), this.onUpdated);\n      this.props.onClose(true);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  /**\n   * The value widget varies for the action type\n   */\n  private getValueWidget(): JSX.Element {\n    if (this.state.type === Types.set_contact_channel) {\n      return (\n        <AssetSelector\n          key=\"select_channel\"\n          name={i18n.t('forms.channel', 'Channel')}\n          placeholder={i18n.t('forms.select_channel', 'Select the channel to use for this contact')}\n          assets={this.props.assetStore.channels}\n          entry={this.state.channel}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleChannelUpdate}\n        />\n      );\n    }\n\n    if (this.state.type === Types.set_contact_language) {\n      return (\n        <AssetSelector\n          key=\"select_language\"\n          name={i18n.t('forms.language', 'Language')}\n          placeholder={i18n.t(\n            'forms.select_language',\n            'Select the language to use for this contact'\n          )}\n          assets={this.props.assetStore.languages}\n          entry={this.state.language}\n          valueClearable={true}\n          onChange={this.handleLanguageUpdate}\n          shouldExclude={(language: any) => {\n            return language.iso === 'base';\n          }}\n        />\n      );\n    } else if (this.state.type === Types.set_contact_status) {\n      return (\n        <SelectElement\n          key=\"contact_status_select\"\n          name={i18n.t('forms.status', 'Status')}\n          entry={this.state.status}\n          onChange={this.handleStatusUpdate}\n          options={CONTACT_STATUS_OPTIONS}\n        />\n      );\n    } else if (this.state.type === Types.set_contact_name) {\n      return (\n        <TextInputElement\n          name={i18n.t('forms.name', 'Name')}\n          placeholder={i18n.t('forms.enter_new_name', 'Enter a new name for the contact')}\n          onChange={this.handleNameUpdate}\n          entry={this.state.name}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    } else {\n      return (\n        <TextInputElement\n          name={i18n.t('forms.field_value', 'Field Value')}\n          placeholder={i18n.t('forms.enter_field_value', { field: this.state.field.value.label })}\n          onChange={this.handleFieldValueUpdate}\n          entry={this.state.fieldValue}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    }\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { label: input, value_type: 'text' };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        <p>{i18n.t('forms.select_what_to_update', 'Select what to update')}</p>\n        <AssetSelector\n          name={i18n.t('forms.contact_field', 'Contact Field')}\n          assets={this.props.assetStore.fields}\n          additionalOptions={getContactProperties(this.context.config.flowType)}\n          entry={this.state.field}\n          searchable={true}\n          sortFunction={sortFieldsAndProperties}\n          onChange={this.handlePropertyChange}\n          getName={getName}\n          // Fields can be created on the fly\n          createPrefix=\"Create Contact Field: \"\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleFieldAdded}\n        />\n\n        <div className={styles.value}>{this.getValueWidget()}</div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { AirtimeTransferEntry } from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement, { TextInputStyle } from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { Asset, Assets } from 'store/flowContext';\nimport { ValidationFailure } from 'store/nodeEditor';\n\nimport styles from './CurrencyElement.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface AirtimeTransfer {\n  amount: string;\n  code: string;\n}\n\nexport interface CurrencyElementProps {\n  currencies: Assets;\n  transfer: AirtimeTransferEntry;\n  index: number;\n  exclude: AirtimeTransferEntry[];\n  onChange(index: number, transfer: AirtimeTransferEntry): void;\n  onRemove(index: number): void;\n}\n\nexport default class CurrencyElement extends React.Component<CurrencyElementProps> {\n  constructor(props: CurrencyElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleCurrencyChanged(selected: any[]): void {\n    this.props.onChange(this.props.index, {\n      value: { amount: this.props.transfer.value.amount, code: selected[0].id },\n      validationFailures: this.props.transfer.validationFailures\n    });\n  }\n\n  private handleAmountChanged(value: string): void {\n    const validationFailures: ValidationFailure[] = [];\n    if (isNaN(Number(value))) {\n      validationFailures.push({\n        message: 'Invalid amount, please enter a number'\n      });\n    }\n    this.props.onChange(this.props.index, {\n      value: { amount: value, code: this.props.transfer.value.code },\n      validationFailures\n    });\n  }\n\n  public render(): JSX.Element {\n    let placeholder = 'Transfer Amount';\n\n    let amount = '';\n    let currency: any = null;\n\n    if (this.props.transfer.value) {\n      const transfer = this.props.transfer.value;\n      if (transfer.code) {\n        placeholder = `${transfer.code} ${placeholder}`;\n        currency = { id: transfer.code };\n      }\n\n      amount = '' + transfer.amount;\n    }\n\n    const amountInput =\n      this.props.index > -1 ? (\n        <div className={styles.amount}>\n          <TextInputElement\n            placeholder={placeholder}\n            name={i18n.t('forms.value', 'value')}\n            onChange={this.handleAmountChanged}\n            entry={{ value: amount }}\n            style={TextInputStyle.medium}\n          />\n        </div>\n      ) : null;\n\n    const removeIco =\n      this.props.index > -1 ? (\n        <div\n          className={styles.remove}\n          onClick={() => {\n            this.props.onRemove(this.props.index);\n          }}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      ) : null;\n\n    const shouldExclude = (asset: Asset): boolean => {\n      return (\n        this.props.exclude.filter(\n          (airtime: AirtimeTransferEntry) => airtime.value.code === asset.id\n        ).length > 1\n      );\n    };\n\n    return (\n      <FormElement\n        name={i18n.t('forms.currency', 'Currency')}\n        entry={this.props.transfer}\n        __className={styles.form_element}\n      >\n        <div className={styles.transfer}>\n          <div className={styles.currency}>\n            <AssetSelector\n              style={TembaSelectStyle.small}\n              name={i18n.t('forms.currency', 'Currency')}\n              shouldExclude={shouldExclude}\n              entry={{ value: currency }}\n              nameKey=\"id\"\n              valueKey=\"id\"\n              onChange={this.handleCurrencyChanged}\n              assets={this.props.currencies}\n              placeholder={i18n.t('forms.currency', 'Select a Currency')}\n            />\n          </div>\n          {amountInput} {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\n\nimport styles from './OptionalTextInput.module.scss';\n\nexport interface OptionalTextInputProps {\n  name: string;\n  value: StringEntry;\n  toggleText: string;\n  onChange(value: string): void;\n  helpText?: string | JSX.Element;\n  maxLength?: number;\n}\n\nexport interface OptionalTextInputState extends FormState {\n  editing: boolean;\n}\n\n/**\n * OptionalText is a hideable text box\n */\nexport default class OptionalTextInput extends React.Component<\n  OptionalTextInputProps,\n  OptionalTextInputState\n> {\n  constructor(props: OptionalTextInputProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    this.state = {\n      editing: this.props.value.value.trim().length > 0,\n      valid: true\n    };\n  }\n\n  private handleTextChanged(text: string): void {\n    this.props.onChange(text);\n  }\n\n  private handleEditingChanged(): void {\n    this.setState({ editing: true });\n  }\n\n  public render(): JSX.Element {\n    let ele: JSX.Element;\n\n    if (this.state.editing) {\n      ele = (\n        <TextInputElement\n          data-testid=\"optional-field\"\n          data-spec=\"optional-field\"\n          name={this.props.name}\n          showLabel={true}\n          entry={this.props.value}\n          onChange={this.handleTextChanged}\n          helpText={this.props.helpText}\n          maxLength={this.props.maxLength}\n        />\n      );\n    } else {\n      ele = (\n        <span\n          data-testid=\"toggle-link\"\n          data-spec=\"toggle-link\"\n          className={styles.toggle_link}\n          onClick={this.handleEditingChanged}\n        >\n          {this.props.toggleText}\n        </span>\n      );\n    }\n\n    return <div className={styles.optional_text_input}>{ele}</div>;\n  }\n}\n","import * as React from 'react';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport OptionalTextInput from 'components/form/optionaltext/OptionalTextInput';\nimport { StringEntry } from 'store/nodeEditor';\nimport { snakify } from 'utils';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport const createResultNameInput = (\n  value: StringEntry,\n  onChange: (value: string) => void\n): JSX.Element => {\n  const snaked = !hasErrors(value) && value.value ? '.' + snakify(value.value) : '';\n\n  return (\n    <OptionalTextInput\n      name={i18n.t('forms.save_result_name', 'Result Name')}\n      maxLength={64}\n      value={value}\n      onChange={onChange}\n      toggleText={i18n.t('forms.save_as_title', 'Save as..')}\n      helpText={\n        <Trans i18nKey=\"forms.result_name_help\" values={{ resultFormat: `@results${snaked}` }}>\n          By naming the result, you can reference it later using [[resultFormat]]\n        </Trans>\n      }\n    />\n  );\n};\n","import * as React from 'react';\nimport { ValidationFailure } from 'store/nodeEditor';\n\nimport styles from './ValidationFailures.module.scss';\n\nexport interface Validation {\n  validationFailures: ValidationFailure[];\n}\n\nconst ValidationFailures: React.SFC<Validation> = (validation): JSX.Element => {\n  const errors = validation.validationFailures.map((failure: ValidationFailure, idx: number) => {\n    return (\n      <div key={'validation_' + idx} className={styles.error}>\n        {failure.message}\n      </div>\n    );\n  });\n  return <div className={styles.errors}>{errors}</div>;\n};\n\nexport default ValidationFailures;\n","import {\n  AirtimeRouterFormState,\n  AirtimeTransferEntry\n} from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { TransferAirtime } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): AirtimeRouterFormState => {\n  const originalAction = getOriginalAction(settings);\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const amounts: AirtimeTransferEntry[] = [];\n  if (originalAction && originalAction.type === Types.transfer_airtime) {\n    Object.keys(originalAction.amounts).forEach((key: string) => {\n      amounts.push({\n        value: { code: key, amount: '' + originalAction.amounts[key] }\n      });\n    });\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    valid,\n    amounts,\n    resultName\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: AirtimeRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const amounts = {};\n  state.amounts.forEach((entry: AirtimeTransferEntry) => {\n    if (entry.value.amount.trim().length > 0) {\n      (amounts as any)[entry.value.code] = Number(entry.value.amount);\n    }\n  });\n\n  const newAction: TransferAirtime = {\n    uuid,\n    type: Types.transfer_airtime,\n    amounts,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): TransferAirtime => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.transfer_airtime) {\n    return action as TransferAirtime;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CurrencyElement, {\n  AirtimeTransfer\n} from 'components/flow/routers/airtime/currency/CurrencyElement';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport ValidationFailures from 'components/form/ValidationFailures';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { FormEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './AirtimeRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\nexport interface AirtimeTransferEntry extends FormEntry {\n  value: AirtimeTransfer;\n}\n\nexport interface AirtimeRouterFormState extends FormState {\n  amounts: AirtimeTransferEntry[];\n  resultName: StringEntry;\n}\n\nexport default class AirtimeRouterForm extends React.PureComponent<\n  RouterFormProps,\n  AirtimeRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleSave(): void {\n    const missing: number[] = [];\n\n    this.state.amounts.forEach((entry: AirtimeTransferEntry, index: number) => {\n      if (entry.value.amount.trim().length === 0) {\n        missing.push(index);\n      }\n    });\n\n    let valid: boolean = !!!this.state.amounts.find(\n      (entry: AirtimeTransferEntry) => (entry.validationFailures || []).length > 0\n    );\n\n    // make sure at least one has a value\n    if (valid) {\n      valid =\n        this.state.amounts.find(\n          (entry: AirtimeTransferEntry) => entry.value.amount.trim().length > 0\n        ) !== undefined;\n\n      if (!valid) {\n        this.setState({\n          valid: false,\n          validationFailures: [{ message: 'At least one amount to transfer is required' }]\n        });\n      }\n    }\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public handleRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.amounts, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ amounts: updated });\n  }\n\n  public handleTransferChanged(idx: number, transfer: AirtimeTransferEntry): void {\n    let updated: any = this.state.amounts;\n\n    if (idx > -1) {\n      // we found a match, merge us in\n      updated = mutate(this.state.amounts, {\n        $merge: { [idx]: transfer }\n      });\n    } else {\n      // otherwise push us on\n      updated = mutate(this.state.amounts, {\n        $push: [transfer]\n      });\n    }\n\n    this.setState({ amounts: updated, validationFailures: [] });\n  }\n\n  private renderAmount(index: number, entry: AirtimeTransferEntry): JSX.Element {\n    return (\n      <CurrencyElement\n        key={'currency_' + index}\n        exclude={this.state.amounts}\n        currencies={this.props.assetStore.currencies}\n        transfer={entry}\n        index={index}\n        onChange={this.handleTransferChanged}\n        onRemove={this.handleRemoved}\n      />\n    );\n  }\n\n  private renderAmounts(): JSX.Element {\n    const amounts = this.state.amounts.map((entry: AirtimeTransferEntry, index: number) => {\n      return this.renderAmount(index, entry);\n    });\n\n    return (\n      <div>\n        {amounts}\n        {this.renderAmount(-1, { value: { code: null, amount: '' } })}\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const errors = this.state.validationFailures ? (\n      <ValidationFailures validationFailures={this.state.validationFailures} />\n    ) : null;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        {this.renderAmounts()}\n        {errors}\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from 'components/flow/routers/dial/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\nexport interface DialRouterFormState extends FormState {\n  phone: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class DialRouterForm extends React.Component<RouterFormProps, DialRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handlePhoneUpdated(value: string): void {\n    const phone = validate(i18n.t('forms.phone_number', 'Phone Number'), value, [Required]);\n    this.setState({\n      phone: phone,\n      valid: this.state.valid && !hasErrors(phone)\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>Enter the phone number to dial</p>\n        <TextInputElement\n          name=\"phone\"\n          placeholder={i18n.t('forms.phone_number', 'Phone Number')}\n          showLabel={false}\n          autocomplete={true}\n          onChange={this.handlePhoneUpdated}\n          entry={this.state.phone}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { DialRouterFormState } from 'components/flow/routers/dial/DialRouterForm';\nimport { createRenderNode, getSwitchRouter } from 'components/flow/routers/helpers';\nimport { DIAL_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport {\n  Case,\n  Category,\n  DialCategoryNames,\n  DialStatus,\n  Exit,\n  Router,\n  RouterTypes,\n  SwitchRouter,\n  Wait,\n  WaitTypes\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): DialRouterFormState => {\n  let phone = '';\n  let resultName: StringEntry = { value: '' };\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.wait_for_dial) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      phone = router.wait.phone;\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    phone: { value: phone },\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: DialRouterFormState\n): RenderNode => {\n  let categories: Category[] = [];\n  let cases: Case[] = [];\n  let exits: Exit[] = [];\n\n  const previousRouter = settings.originalNode ? getSwitchRouter(settings.originalNode.node) : null;\n\n  // see if we are editing an existing dial router so we reuse exits\n  if (previousRouter && previousRouter.wait && previousRouter.wait.type === WaitTypes.dial) {\n    previousRouter.cases.forEach(kase => cases.push(kase));\n    previousRouter.categories.forEach(category => categories.push(category));\n    settings.originalNode.node.exits.forEach((exit: any) => exits.push(exit));\n  } else {\n    // otherwise, let's create some new ones\n    exits = [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ];\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: DialCategoryNames.Answered,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: DialCategoryNames.NoAnswer,\n        exit_uuid: exits[1].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: DialCategoryNames.Busy,\n        exit_uuid: exits[2].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: DialCategoryNames.Failure,\n        exit_uuid: exits[3].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: [DialStatus.answered],\n        category_uuid: categories[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: [DialStatus.noAnswer],\n        category_uuid: categories[1].uuid\n      },\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: [DialStatus.busy],\n        category_uuid: categories[2].uuid\n      }\n    ];\n  }\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const wait = { type: WaitTypes.dial, phone: state.phone.value } as Wait;\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    wait: wait,\n    default_category_uuid: categories[categories.length - 1].uuid,\n    categories,\n    cases,\n    operand: DIAL_OPERAND,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_dial,\n    []\n  );\n\n  return newRenderNode;\n};\n","export const DEFAULT_OPERAND = '@input.text';\nexport const GROUPS_OPERAND = '@contact.groups';\nexport const WEBHOOK_OPERAND = '@run.webhook';\nexport const SUBFLOW_OPERAND = '@child.status';\nexport const MEDIA_OPERAND = '@input';\nexport const DIGITS_OPERAND = '@input.text';\nexport const MENU_OPERAND = '@input.text';\nexport const SCHEMES_OPERAND = '@(urn_parts(contact.urn).scheme)';\nexport const DIAL_OPERAND = '@(default(resume.dial.status, \"\"))';\n\n// default body for non-GET webhook actions\nexport const DEFAULT_BODY: string = `@(json(object(\n  \"contact\", object(\n    \"uuid\", contact.uuid, \n    \"name\", contact.name, \n    \"urn\", contact.urn\n  ),\n  \"flow\", object(\n    \"uuid\", run.flow.uuid, \n    \"name\", run.flow.name\n  ),\n  \"results\", foreach_value(results, extract_object, \"value\", \"category\")\n)))`;\n","import {\n  Operator,\n  OperatorMap,\n  Operators,\n  VISIBILITY_ONLINE,\n  VISIBILITY_HIDDEN,\n  FeatureFilter\n} from 'config/interfaces';\nimport i18n from 'config/i18n';\n\nexport const intentOperatorList: Operator[] = [\n  {\n    type: Operators.has_top_intent,\n    verboseName: i18n.t('operators.has_top_intent', 'has top intent'),\n    operands: 2,\n    visibility: VISIBILITY_ONLINE\n  },\n  {\n    type: Operators.has_intent,\n    verboseName: i18n.t('operators.has_intent', 'has intent'),\n    operands: 2,\n    visibility: VISIBILITY_ONLINE\n  }\n];\n\nexport const operatorConfigList: Operator[] = [\n  {\n    type: Operators.has_any_word,\n    verboseName: i18n.t('operators.has_any_word', 'has any of the words'),\n    operands: 1\n  },\n  {\n    type: Operators.has_all_words,\n    verboseName: i18n.t('operators.has_all_words', 'has all of the words'),\n    operands: 1\n  },\n  {\n    type: Operators.has_phrase,\n    verboseName: i18n.t('operators.has_phrase', 'has the phrase'),\n    operands: 1\n  },\n  {\n    type: Operators.has_only_phrase,\n    verboseName: i18n.t('operators.has_only_phrase', 'has only the phrase'),\n    operands: 1\n  },\n  {\n    type: Operators.has_beginning,\n    verboseName: i18n.t('operators.has_beginning', 'starts with'),\n    operands: 1\n  },\n  {\n    type: Operators.has_text,\n    verboseName: i18n.t('operators.has_text', 'has some text'),\n    operands: 0,\n    categoryName: 'Has Text'\n  },\n  {\n    type: Operators.has_number,\n    verboseName: i18n.t('operators.has_number', 'has a number'),\n    operands: 0,\n    categoryName: 'Has Number'\n  },\n  {\n    type: Operators.has_number_between,\n    verboseName: i18n.t('operators.has_number_between', 'has a number between'),\n    operands: 2\n  },\n  {\n    type: Operators.has_number_lt,\n    verboseName: i18n.t('operators.has_number_lt', 'has a number below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_lte,\n    verboseName: i18n.t('operators.has_number_lte', 'has a number at or below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_eq,\n    verboseName: i18n.t('operators.has_number_eq', 'has a number equal to'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gte,\n    verboseName: i18n.t('operators.has_number_gte', 'has a number at or above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gt,\n    verboseName: i18n.t('operators.has_number_gt', 'has a number above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_date,\n    verboseName: i18n.t('operators.has_date', 'has a date'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_date_category', 'Has Date')\n  },\n  {\n    type: Operators.has_date_lt,\n    verboseName: i18n.t('operators.has_date_lt', 'has a date before'),\n    operands: 1\n  },\n  {\n    type: Operators.has_date_eq,\n    verboseName: i18n.t('operators.has_date_eq', 'has a date equal to'),\n    operands: 1\n  },\n  {\n    type: Operators.has_date_gt,\n    verboseName: i18n.t('operators.has_date_gt', 'has a date after'),\n    operands: 1\n  },\n  {\n    type: Operators.has_time,\n    verboseName: i18n.t('operators.has_time', 'has a time'),\n    operands: 0,\n    categoryName: 'Has Time'\n  },\n  {\n    type: Operators.has_group,\n    verboseName: i18n.t('operators.has_group', 'is in the group'),\n    operands: 1,\n    visibility: VISIBILITY_HIDDEN\n  },\n  {\n    type: Operators.has_category,\n    verboseName: i18n.t('operators.has_category', 'has the category'),\n    operands: 0,\n    visibility: VISIBILITY_HIDDEN\n  },\n  {\n    type: Operators.has_phone,\n    verboseName: i18n.t('operators.has_phone', 'has a phone number'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_phone_category', 'Has Phone')\n  },\n  {\n    type: Operators.has_email,\n    verboseName: i18n.t('operators.has_email', 'has an email'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_email_category', 'Has Email')\n  },\n  {\n    type: Operators.has_state,\n    verboseName: i18n.t('operators.has_state', 'has state'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_state_category', 'Has State'),\n    filter: FeatureFilter.HAS_LOCATIONS\n  },\n  {\n    type: Operators.has_district,\n    verboseName: i18n.t('operators.has_district', 'has district'),\n    operands: 1,\n    categoryName: i18n.t('operators.has_district_category', 'Has District'),\n    filter: FeatureFilter.HAS_LOCATIONS\n  },\n  {\n    type: Operators.has_ward,\n    verboseName: i18n.t('operators.has_ward', 'has ward'),\n    operands: 2,\n    categoryName: i18n.t('operators.has_ward_category', 'Has Ward'),\n    filter: FeatureFilter.HAS_LOCATIONS\n  },\n  {\n    type: Operators.has_error,\n    verboseName: i18n.t('operators.has_error', 'has an error'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_error_category', 'Has Error'),\n    visibility: VISIBILITY_HIDDEN\n  },\n  {\n    type: Operators.has_value,\n    verboseName: i18n.t('operators.has_value', 'is not empty'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_value_category', 'Not Empty'),\n    visibility: VISIBILITY_HIDDEN\n  },\n  {\n    type: Operators.has_pattern,\n    verboseName: i18n.t('operators.has_pattern', 'matches regex'),\n    operands: 1\n  }\n];\n\nexport const operatorConfigMap: OperatorMap = [...operatorConfigList, ...intentOperatorList].reduce(\n  (map: OperatorMap, operatorConfig: Operator) => {\n    map[operatorConfig.type] = operatorConfig;\n    return map;\n  },\n  {}\n);\n\n/**\n * Shortcut for constant lookup of operator config in operator configs map\n * @param {string} type - The type of the operator config to return, e.g. 'send_msg'\n * @returns {Object} - The operator config found at operatorConfigs[type] or -1\n */\nexport const getOperatorConfig = (type: Operators): Operator => operatorConfigMap[type];\n","import { isRelativeDate } from 'components/flow/routers/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport {\n  LessThan,\n  MoreThan,\n  Numeric,\n  NumOrExp,\n  Required,\n  validate,\n  IsValidIntent\n} from 'store/validators';\nimport { titleCase } from 'utils';\n\nimport { CaseElementProps, CaseElementState } from './CaseElement';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Asset } from 'store/flowContext';\nimport i18n from 'config/i18n';\n\nexport const initializeForm = (props: CaseElementProps): CaseElementState => {\n  const arg1 =\n    props.kase.arguments && props.kase.arguments.length >= 1 ? props.kase.arguments[0] : '';\n  const arg2 =\n    props.kase.arguments && props.kase.arguments.length === 2 ? props.kase.arguments[1] : '';\n\n  return {\n    errors: [],\n    operatorConfig: getOperatorConfig(props.kase.type),\n    argument: { value: arg1 },\n    min: { value: arg1 },\n    max: { value: arg2 },\n    state: { value: arg1 },\n    district: { value: arg2 },\n    intent: { value: arg1 ? { name: arg1, value: arg1 } : null },\n    confidence: { value: arg2 },\n    categoryName: { value: props.categoryName || '' },\n    categoryNameEdited: !!props.categoryName,\n    valid: true\n  };\n};\n/**\n * Determines prefix for case's exit name\n */\nexport const prefix = (operatorType: string): string => {\n  let pre = '';\n\n  if (operatorType.indexOf('_lt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'Before ';\n    } else {\n      if (operatorType.indexOf('lte') > -1) {\n        pre = '<= ';\n      } else {\n        pre = '< ';\n      }\n    }\n  } else if (operatorType.indexOf('_gt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'After ';\n    } else {\n      if (operatorType.indexOf('gte') > -1) {\n        pre = '>= ';\n      } else {\n        pre = '>';\n      }\n    }\n  }\n\n  return pre;\n};\n\n/**\n * Returns min, max values for Operators.has_number_between case\n */\nexport const getMinMax = (args: string[] = []): { min: string; max: string } => {\n  let min = '';\n  let max = '';\n  if (args.length) {\n    if (strContainsNum(args[0])) {\n      min = args[0];\n    }\n    if (args[1]) {\n      if (strContainsNum(args[1])) {\n        max = args[1];\n      }\n    }\n  }\n  return {\n    min,\n    max\n  };\n};\n\nexport const isFloat = (val: string): boolean => /^[+-]?\\d?(\\.\\d*)?$/.test(val.trim());\n\nexport const isInt = (val: string): boolean => /^[+-]?\\d+$/.test(val.trim());\n\nexport const strContainsNum = (str: string): boolean => {\n  const trimmed = str.trim();\n  if (isFloat(trimmed)) {\n    return true;\n  } else if (isInt(trimmed)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const parseNum = (str: string): number => {\n  const trimmed = (str || '').trim();\n  if (isFloat(trimmed)) {\n    return parseFloat(str);\n  } else if (isInt(trimmed)) {\n    return parseInt(trimmed, 10);\n  }\n};\n\nexport const validateCase = (keys: {\n  operatorConfig: Operator;\n  argument?: string;\n  state?: string;\n  district?: string;\n  min?: string;\n  max?: string;\n  confidence?: string;\n  intent?: SelectOption;\n  exitName?: string;\n  exitEdited?: boolean;\n  classifier?: Asset;\n}): Partial<CaseElementState> => {\n  // when the exit is set, our arguments become required\n  const validators = keys.exitEdited && keys.exitName ? [Required] : [];\n\n  const updates: Partial<CaseElementState> = {\n    operatorConfig: keys.operatorConfig\n  };\n\n  updates.district = { value: '', validationFailures: [] };\n  updates.state = { value: '', validationFailures: [] };\n  updates.min = { value: '', validationFailures: [] };\n  updates.max = { value: '', validationFailures: [] };\n  updates.argument = { value: '', validationFailures: [] };\n  updates.intent = { value: null, validationFailures: [] };\n  updates.confidence = { value: '', validationFailures: [] };\n\n  if (keys.operatorConfig.operands > 0) {\n    switch (keys.operatorConfig.type) {\n      case Operators.has_number_eq:\n      case Operators.has_number_gt:\n      case Operators.has_number_gte:\n      case Operators.has_number_lt:\n      case Operators.has_number_lte:\n        validators.push(NumOrExp);\n        break;\n      case Operators.has_date_eq:\n      case Operators.has_date_lt:\n      case Operators.has_date_gt:\n        validators.push(Numeric);\n        break;\n    }\n\n    if (keys.operatorConfig.type === Operators.has_number_between) {\n      const max = keys.max || '';\n      const min = keys.min || '';\n\n      const maxExpression = max.indexOf('@') > -1;\n      const minExpression = min.indexOf('@') > -1;\n      const hasExpression = maxExpression || minExpression;\n\n      const numeric = [Numeric];\n\n      updates.min = validate(\n        i18n.t('forms.minimum_value', 'Minimum value'),\n        min,\n        validators\n          .concat(!minExpression ? numeric : [])\n          .concat(\n            !hasExpression\n              ? [LessThan(parseFloat(keys.max), i18n.t('forms.the_maximum', 'the maximum'))]\n              : []\n          )\n      );\n\n      updates.max = validate(\n        i18n.t('forms.maximum_value', 'Maximum value'),\n        max,\n        validators\n          .concat(!maxExpression ? numeric : [])\n          .concat(\n            !hasExpression\n              ? [MoreThan(parseFloat(keys.min), i18n.t('forms.the_minimum', 'the minimum'))]\n              : []\n          )\n      );\n    } else if (keys.operatorConfig.type === Operators.has_district) {\n      updates.argument = validate(\n        i18n.t('forms.state', 'State'),\n        keys.argument || '',\n        validators.concat([])\n      );\n    } else if (keys.operatorConfig.type === Operators.has_ward) {\n      updates.state = validate(\n        i18n.t('forms.state', 'State'),\n        keys.state || '',\n        validators.concat([])\n      );\n      updates.district = validate(\n        i18n.t('forms.district', 'District'),\n        keys.district || '',\n        validators.concat([])\n      );\n    } else if (\n      keys.operatorConfig.type === Operators.has_top_intent ||\n      keys.operatorConfig.type === Operators.has_intent\n    ) {\n      const intentValidators = [IsValidIntent(keys.classifier)];\n      if (keys.confidence) {\n        intentValidators.push(Required);\n      }\n      updates.intent = validate(i18n.t('forms.intent', 'Intent'), keys.intent, intentValidators);\n      updates.confidence = validate(\n        i18n.t('forms.confidence', 'Confidence'),\n        keys.confidence || '',\n        validators.concat(keys.intent ? [Numeric, Required] : [Numeric])\n      );\n    } else {\n      updates.argument = validate('Value', keys.argument || '', validators);\n    }\n  }\n\n  updates.categoryNameEdited = !!keys.exitEdited;\n  updates.categoryName = validate(\n    i18n.t('forms.category', 'Category'),\n    updates.categoryNameEdited ? keys.exitName : getCategoryName(updates),\n    updates.argument.value ||\n      (updates.min.value && updates.max.value) ||\n      (updates.state.value && updates.district.value)\n      ? [Required]\n      : []\n  );\n\n  updates.valid =\n    updates.state.validationFailures.length === 0 &&\n    updates.district.validationFailures.length === 0 &&\n    updates.min.validationFailures.length === 0 &&\n    updates.max.validationFailures.length === 0 &&\n    updates.argument.validationFailures.length === 0 &&\n    updates.intent.validationFailures.length === 0 &&\n    updates.confidence.validationFailures.length === 0 &&\n    updates.categoryName.validationFailures.length === 0;\n\n  return updates;\n};\n\nexport const getCategoryName = (state: Partial<CaseElementState>): string => {\n  if (state.categoryNameEdited) {\n    return state.categoryName.value;\n  }\n\n  if (state.operatorConfig.operands === 0) {\n    return state.operatorConfig.categoryName;\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_intent ||\n    state.operatorConfig.type === Operators.has_top_intent\n  ) {\n    if (state.intent.value) {\n      return titleCase(state.intent.value.name.replace('_', ' '));\n    }\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_number_between &&\n    state.min.value &&\n    state.max.value\n  ) {\n    return `${state.min.value} - ${state.max.value}`;\n  }\n\n  if (isRelativeDate(state.operatorConfig.type)) {\n    const count = parseInt(state.argument.value, 10);\n    if (!isNaN(count)) {\n      const today =\n        state.operatorConfig.type === Operators.has_date_eq\n          ? i18n.t('forms.today_proper', 'Today')\n          : i18n.t('forms.today', 'today');\n      const op = count < 0 ? ' - ' : ' + ';\n      const inDays =\n        ' ' + (Math.abs(count) === 1 ? i18n.t('forms.day', 'day') : i18n.t('forms.days', 'days'));\n      return prefix(state.operatorConfig.type) + today + op + Math.abs(count) + inDays;\n    }\n  }\n\n  if (state.argument && state.argument.value) {\n    const pre = prefix(state.operatorConfig.type);\n    const words = state.argument.value.match(/\\w+/g);\n\n    if (words && words.length > 0) {\n      const [firstWord] = words;\n      return pre + titleCase(firstWord);\n    }\n\n    return pre + titleCase(state.argument.value);\n  }\n\n  return '';\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { isRelativeDate } from 'components/flow/routers/helpers';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement, { TextInputStyle } from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { filterOperators } from 'config/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { operatorConfigList } from 'config/operatorConfigs';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, StringEntry, SelectOptionEntry } from 'store/nodeEditor';\nimport { hasErrorType } from 'utils';\n\nimport styles from './CaseElement.module.scss';\nimport { initializeForm, validateCase } from './helpers';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface CaseElementProps {\n  kase: Case;\n  categoryName: string;\n  name?: string; // satisfy form widget props\n  onRemove?(uuid: string): void;\n  onChange?(c: CaseProps): void;\n  operators?: Operator[];\n  classifier?: any;\n}\n\nexport interface CaseElementState extends FormState {\n  errors: string[];\n  operatorConfig: Operator;\n  categoryName: StringEntry;\n  categoryNameEdited: boolean;\n\n  // for string based args\n  argument: StringEntry;\n\n  // for numeric operators\n  min: StringEntry;\n  max: StringEntry;\n\n  // intents\n  intent: SelectOptionEntry;\n  confidence: StringEntry;\n\n  state: StringEntry;\n  district: StringEntry;\n}\n\nexport default class CaseElement extends React.Component<CaseElementProps, CaseElementState> {\n  private operators: Operator[];\n\n  constructor(props: CaseElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n\n    this.state = initializeForm(props);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public componentDidMount() {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, this.handleChange);\n  }\n\n  public componentDidUpdate(previousProps: CaseElementProps): void {\n    if (\n      this.props.classifier &&\n      this.props.classifier !== previousProps.classifier &&\n      this.state.intent.value\n    ) {\n      const updates = validateCase({\n        operatorConfig: this.state.operatorConfig,\n        argument: this.state.argument.value,\n        min: this.state.min.value,\n        max: this.state.max.value,\n        intent: this.state.intent.value,\n        confidence: this.state.confidence.value,\n        exitName: this.state.categoryName.value,\n        exitEdited: this.state.categoryNameEdited,\n        classifier: this.props.classifier\n      });\n\n      this.setState(updates as CaseElementState, this.handleChange);\n    }\n  }\n\n  private getOperators(): Operator[] {\n    let operators = this.props.operators || operatorConfigList;\n    if (this.operators === undefined) {\n      this.operators = filterOperators(operators, this.context.config);\n    }\n\n    return this.operators;\n  }\n\n  private getArgumentArray(): string[] {\n    if (this.state.operatorConfig.operands === 0) {\n      return [];\n    }\n\n    if (\n      this.state.operatorConfig.type === Operators.has_intent ||\n      this.state.operatorConfig.type === Operators.has_top_intent\n    ) {\n      if (this.state.intent.value) {\n        return [this.state.intent.value.value, this.state.confidence.value];\n      } else {\n        return ['', this.state.confidence.value];\n      }\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_number_between) {\n      return [this.state.min.value, this.state.max.value];\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_ward) {\n      return [this.state.state.value, this.state.district.value];\n    }\n\n    return [this.state.argument.value];\n  }\n\n  private handleOperatorChanged(operatorConfig: Operator): void {\n    const updates = validateCase({\n      operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleArgumentChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleDistrictChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      state: this.state.state.value,\n      district: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  /** The user changed the value for the state (a location-based state) */\n  private handleStateChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      district: this.state.district.value,\n      state: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleIntentChanged(selected: SelectOption): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: selected,\n      confidence: this.state.confidence.value || '.9',\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleConfidenceChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: this.state.intent.value,\n      confidence: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMinChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: value,\n      max: this.state.max.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMaxChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: this.state.min.value,\n      max: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleExitChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      state: this.state.state.value,\n      district: this.state.district.value,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      classifier: this.props.classifier,\n      exitName: value,\n      exitEdited: true\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleRemoveClicked(): void {\n    this.props.onRemove(this.props.kase.uuid);\n  }\n\n  private getCaseProps(): CaseProps {\n    const props = {\n      uuid: this.props.kase.uuid,\n      categoryName: this.state.categoryName.value,\n      kase: {\n        arguments: this.getArgumentArray(),\n        type: this.state.operatorConfig.type,\n        uuid: this.props.kase.uuid,\n\n        // if the exit name changed, we'll need to recompute our exit\n        category_uuid: this.state.categoryNameEdited ? null : this.props.kase.category_uuid\n      },\n      valid: this.state.valid\n    };\n\n    return props;\n  }\n\n  private handleChange(): void {\n    // If the case doesn't have arguments & an exit name, remove it\n    if (!this.state.categoryName.value) {\n      // see if we are clearing out a between\n      if (this.state.operatorConfig.type === Operators.has_number_between) {\n        if (!this.state.min.value && !this.state.max.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n      // see if we are clearing out a single operand\n      else {\n        if (!this.state.argument.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n    }\n\n    this.props.onChange(this.getCaseProps());\n  }\n\n  private handleIntentMenuOpened() {\n    // hiding any errors when the menu opens\n    this.setState({ intent: { value: this.state.intent.value } });\n  }\n\n  private handleIntentMenuClosed() {\n    // we want to revalidate close without selection\n    // wait a cycle for selection event to fire first\n    window.setTimeout(() => {\n      this.handleIntentChanged(this.state.intent.value);\n    }, 0);\n  }\n\n  private renderArguments(): JSX.Element {\n    if (this.state.operatorConfig.operands > 0) {\n      // First pass at displaying, handling Operators.has_number_between inputs\n      if (this.state.operatorConfig.operands > 1) {\n        if (this.state.operatorConfig.type === Operators.has_number_between) {\n          return (\n            <>\n              <TextInputElement\n                name={i18n.t('forms.arguments', 'arguments')}\n                style={TextInputStyle.small}\n                onChange={this.handleMinChanged}\n                entry={this.state.min}\n                autocomplete={true}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                {i18n.t('forms.and', 'and')}\n              </span>\n              <TextInputElement\n                name={i18n.t('forms.arguments', 'arguments')}\n                style={TextInputStyle.small}\n                onChange={this.handleMaxChanged}\n                entry={this.state.max}\n                autocomplete={true}\n              />\n            </>\n          );\n        } else if (\n          this.state.operatorConfig.type === Operators.has_intent ||\n          this.state.operatorConfig.type === Operators.has_top_intent\n        ) {\n          let intents: SelectOption[] = [];\n\n          if (this.props.classifier && this.props.classifier.intents) {\n            intents = this.props.classifier.intents.map((intent: string) => {\n              const option: SelectOption = {\n                name: intent,\n                value: intent\n              };\n              return option;\n            });\n          }\n\n          return (\n            <>\n              <div style={{ width: '114px' }}>\n                <SelectElement\n                  key=\"intent_select\"\n                  style={TembaSelectStyle.small}\n                  name={i18n.t('forms.intent', 'Intent')}\n                  placeholder={i18n.t('forms.select_intent', 'Select intent')}\n                  entry={this.state.intent}\n                  onChange={this.handleIntentChanged}\n                  options={intents}\n                  onMenuOpen={this.handleIntentMenuOpened}\n                  onMenuClose={this.handleIntentMenuClosed}\n                  hideError={true}\n                ></SelectElement>\n              </div>\n              <div className={styles.divider} data-draggable={true}>\n                above\n              </div>\n              <div style={{ width: '34px' }}>\n                <TextInputElement\n                  name={i18n.t('forms.confidence', 'confidence')}\n                  onChange={this.handleConfidenceChanged}\n                  entry={this.state.confidence}\n                  style={TextInputStyle.small}\n                  placeholder=\".9\"\n                />\n              </div>\n            </>\n          );\n        } else {\n          return (\n            <>\n              <TextInputElement\n                name={i18n.t('forms.state', 'State')}\n                placeholder=\"State\"\n                onChange={this.handleStateChanged}\n                style={TextInputStyle.small}\n                entry={this.state.state}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                and\n              </span>\n              <TextInputElement\n                name={i18n.t('forms.district', 'District')}\n                placeholder={i18n.t('forms.district', 'District')}\n                onChange={this.handleDistrictChanged}\n                style={TextInputStyle.small}\n                entry={this.state.district}\n              />\n            </>\n          );\n        }\n      } else if (isRelativeDate(this.state.operatorConfig.type)) {\n        return (\n          <>\n            <span className={styles.divider} data-draggable={true}>\n              today +{' '}\n            </span>\n            <TextInputElement\n              __className={styles.relative_date}\n              name={i18n.t('forms.arguments', 'arguments')}\n              onChange={this.handleArgumentChanged}\n              entry={this.state.argument}\n              style={TextInputStyle.small}\n              autocomplete={false}\n            />\n            <span className={styles.divider}>days</span>\n          </>\n        );\n      } else {\n        return (\n          <TextInputElement\n            data-test-id=\"case-arguments\"\n            name={i18n.t('forms.arguments', 'arguments')}\n            onChange={this.handleArgumentChanged}\n            entry={this.state.argument}\n            style={TextInputStyle.small}\n            placeholder={this.state.operatorConfig.type === Operators.has_district ? 'State' : ''}\n            autocomplete={true}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FormElement\n        data-spec=\"case-form\"\n        name={this.props.name}\n        __className={styles.group}\n        kaseError={this.state.errors.length > 0}\n      >\n        <div\n          className={`${styles.kase} ${styles[this.state.operatorConfig.type]}`}\n          data-draggable={true}\n        >\n          <span className={`fe-chevrons-expand ${styles.dnd_icon}`} data-draggable={true} />\n          <div className={styles.choice}>\n            <TembaSelect\n              name={i18n.t('forms.operator', 'operator')}\n              style={TembaSelectStyle.small}\n              options={this.getOperators()}\n              nameKey=\"verboseName\"\n              valueKey=\"type\"\n              onChange={this.handleOperatorChanged}\n              value={this.state.operatorConfig}\n            ></TembaSelect>\n          </div>\n          <div\n            className={\n              this.state.operatorConfig.operands > 1 ? styles.multi_operand : styles.single_operand\n            }\n          >\n            {this.renderArguments()}\n          </div>\n          <div className={styles.categorize_as} data-draggable={true}>\n            {i18n.t('forms.categorize_as', 'categorize as')}\n          </div>\n          <div className={styles.category}>\n            <TextInputElement\n              name={i18n.t('forms.exit_name', 'Exit Name')}\n              style={TextInputStyle.small}\n              onChange={this.handleExitChanged}\n              entry={this.state.categoryName}\n              maxLength={36}\n              showInvalid={hasErrorType(this.state.errors, [/category/])}\n            />\n          </div>\n          <span\n            data-testid={'remove-case-' + this.props.kase.uuid}\n            className={`fe-x ${styles.remove_icon}`}\n            onClick={this.handleRemoveClicked}\n          />\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { Operator } from 'config/interfaces';\nimport { createUUID } from 'utils';\n\nexport const createEmptyCase = (operator: Operator): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: operator.type,\n      arguments: [''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import arrayMove from 'array-move';\nimport { react as bindCallbacks } from 'auto-bind';\nimport CaseElement from 'components/flow/routers/case/CaseElement';\nimport { createEmptyCase } from 'components/flow/routers/caselist/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\nimport { SortableElement, SortEnd, SortableContainer } from 'react-sortable-hoc';\n\nimport styles from './CaseList.module.scss';\nimport { Operator } from 'config/interfaces';\nimport { Asset } from 'store/flowContext';\nimport { getOperatorConfig, operatorConfigList } from 'config';\n\nexport enum DragCursor {\n  move = 'move',\n  pointer = 'pointer'\n}\n\nexport interface CaseProps {\n  uuid: string;\n  kase: Case;\n  categoryName: string;\n  valid: boolean;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseListProps {\n  cases: CaseProps[];\n  onCasesUpdated(cases: CaseProps[]): void;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseListState extends FormState {\n  currentCases: CaseProps[];\n}\n\nconst SortableItem = SortableElement(({ value: row }: any) => {\n  const caseProps = row.item;\n  return (\n    <div className={styles.kase + ' case_list_case'}>\n      <CaseElement\n        key={caseProps.uuid}\n        {...caseProps}\n        onRemove={row.list.handleRemoveCase}\n        onChange={row.list.handleUpdateCase}\n        operators={row.list.props.operators}\n        classifier={row.list.props.classifier}\n      />\n    </div>\n  );\n});\n\n/**\n * CaseList is a component made up of case elements that lets\n * the user configure rules and drag and drop to set their order.\n */\nexport default class CaseList extends React.Component<CaseListProps, CaseListState> {\n  private sortableList = SortableContainer(({ items }: any) => {\n    return (\n      <div className={styles.case_list}>\n        {items.map((value: any, index: any) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            value={{ item: value, list: this }}\n            disabled={index === this.state.currentCases.length - 1}\n            shouldCancelStart={(e: any) => {\n              console.log(e);\n              return true;\n            }}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  constructor(props: CaseListProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    const caseProps = this.props.cases;\n\n    if (!this.hasEmptyCase(caseProps)) {\n      caseProps.push(this.createEmptyCase());\n    }\n\n    // initialize our cases\n    this.state = {\n      currentCases: caseProps,\n      valid: true\n    };\n  }\n\n  private createEmptyCase(): CaseProps {\n    const operators = this.props.operators || operatorConfigList;\n\n    let operator = operators[0];\n\n    // if we have cases already, use the last one to determine our default rule\n    if (this.state && this.state.currentCases && this.state.currentCases.length > 0) {\n      const lastOperator = getOperatorConfig(\n        this.state.currentCases[this.state.currentCases.length - 1].kase.type\n      );\n\n      // use the first rule if the last one had no operands\n      if (lastOperator.operands > 0) {\n        operator = lastOperator;\n      }\n    }\n    return createEmptyCase(operator);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { caseProps?: CaseProps; removeCase?: any }) {\n    const updates: Partial<CaseListState> = {};\n\n    let ensureEmptyCase = false;\n\n    if (keys.hasOwnProperty('caseProps')) {\n      updates.currentCases = [keys.caseProps];\n      ensureEmptyCase = true;\n      if (!keys.caseProps.valid) {\n        // TODO: refactor this to be a form entry\n        // mock our case to have validation failures, this is so the case list sees\n        // the existence of errors which mergeForm uses when merging form validity\n        // (keys.caseProps as any).validationFailures = [{ message: 'invalid case' }];\n        updates.valid = false;\n      }\n    }\n\n    let toRemove: any[] = [];\n    if (keys.hasOwnProperty('removeCase')) {\n      toRemove = [{ currentCases: [keys.removeCase] }];\n      ensureEmptyCase = true;\n    }\n\n    // update our form\n    this.setState(\n      (prevState: CaseListState) => {\n        const updated = mergeForm(prevState, updates, toRemove) as CaseListState;\n\n        // notify our listener\n        this.props.onCasesUpdated(updated.currentCases);\n        return updated;\n      },\n      () => {\n        // if we no longer have an empty case, add one\n        if (ensureEmptyCase) {\n          if (!this.hasEmptyCase(this.state.currentCases)) {\n            this.handleUpdate({ caseProps: this.createEmptyCase() });\n          }\n        }\n      }\n    );\n  }\n\n  private hasEmptyCase(cases: CaseProps[]): boolean {\n    return cases.find((caseProps: CaseProps) => caseProps.categoryName.trim().length === 0) != null;\n  }\n\n  private handleRemoveCase(uuid: string) {\n    return this.handleUpdate({\n      removeCase: { uuid }\n    });\n  }\n\n  private handleUpdateCase(caseProps: CaseProps) {\n    this.handleUpdate({ caseProps });\n  }\n\n  private handleSortEnd({ oldIndex, newIndex }: SortEnd): void {\n    this.setState(\n      ({ currentCases }) => ({\n        currentCases: arrayMove(\n          currentCases,\n          oldIndex,\n          newIndex === this.state.currentCases.length - 1 ? newIndex - 1 : newIndex\n        )\n      }),\n      () => {\n        this.props.onCasesUpdated(this.state.currentCases);\n      }\n    );\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.case_list_container +\n          ' ' +\n          (this.state.currentCases.length > 5 ? styles.scrolling : '')\n        }\n        tabIndex={0}\n      >\n        <this.sortableList\n          items={this.state.currentCases}\n          onSortEnd={this.handleSortEnd}\n          shouldCancelStart={(e: React.MouseEvent<HTMLDivElement>) => {\n            if (!(e.target instanceof HTMLElement)) {\n              return true;\n            }\n            return !e.target.dataset.draggable;\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import ConfigProvider from 'config/ConfigProvider';\nimport { getOperatorConfig, operatorConfigList } from 'config/operatorConfigs';\nimport { getTypeConfig, typeConfigList } from 'config/typeConfigs';\n\nexport { typeConfigList, getTypeConfig, operatorConfigList, getOperatorConfig };\n\nexport default ConfigProvider;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/expression/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ExpressionRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  operand: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ExpressionRouterForm extends React.Component<\n  RouterFormProps,\n  ExpressionRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdate(keys: {\n    resultName?: string;\n    operand?: string;\n    cases?: CaseProps[];\n  }): boolean {\n    const updates: Partial<ExpressionRouterFormState> = {};\n\n    if (keys.hasOwnProperty('operand')) {\n      updates.operand = validate(i18n.t('forms.operand', 'Operand'), keys.operand, [Required]);\n    }\n\n    if (keys.hasOwnProperty('cases')) {\n      updates.cases = keys.cases;\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleOperandUpdated(operand: string): void {\n    this.handleUpdate({ operand });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    // if we still have invalid cases, don't move forward\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    if (invalidCase) {\n      return;\n    }\n\n    // validate our result name in case they haven't interacted\n    const valid = this.handleUpdate({\n      resultName: this.state.resultName.value,\n      operand: this.state.operand.value\n    });\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>If the expression...</p>\n        <TextInputElement\n          name={i18n.t('forms.operand', 'Operand')}\n          showLabel={false}\n          autocomplete={true}\n          onChange={this.handleOperandUpdated}\n          entry={this.state.operand}\n        />\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './DigitsRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\nimport { Operator, Operators } from 'config/interfaces';\nimport { operatorConfigList } from 'config/operatorConfigs';\n\nexport interface DigitsRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport default class DigitsRouterForm extends React.Component<\n  RouterFormProps,\n  DigitsRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private getOperators(): Operator[] {\n    return operatorConfigList.filter(\n      operator =>\n        operator.type === Operators.has_beginning || operator.type.indexOf('has_number') === 0\n    );\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const operators = this.getOperators();\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p className={styles.lead_in}>If the keypad entry before the # symbol..</p>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n          operators={operators}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { DigitsRouterFormState } from './DigitsRouterForm';\nimport { DIGITS_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): DigitsRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  if (getType(settings.originalNode) === Types.wait_for_digits) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: DigitsRouterFormState\n): RenderNode => {\n  const { cases, exits, categories, defaultCategory: defaultExit, caseConfig } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: DIGITS_OPERAND,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { renderIssues } from 'components/flow/actions/helpers';\nimport { getName, sortFieldsAndProperties } from 'components/flow/actions/updatecontact/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './FieldRouterForm.module.scss';\nimport { getRoutableFields, nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface FieldRouterFormState extends FormState {\n  field: FormEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class FieldRouterForm extends React.Component<\n  RouterFormProps,\n  FieldRouterFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType,\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdate(keys: {\n    resultName?: string;\n    field?: string;\n    cases?: CaseProps[];\n  }): boolean {\n    const updates: Partial<FieldRouterFormState> = {};\n\n    if (keys.hasOwnProperty('field')) {\n      updates.field = validate(i18n.t('forms.field', 'Field'), keys.field, [Required]);\n    }\n\n    if (keys.hasOwnProperty('cases')) {\n      updates.cases = keys.cases;\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleFieldChanged(selected: any[]): void {\n    this.handleUpdate({ field: selected[0] });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    // if we still have invalid cases, don't move forward\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    if (invalidCase) {\n      return;\n    }\n\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>\n          If the contact's\n          <div className={`${styles.field_select} select-small`}>\n            <AssetSelector\n              name={i18n.t('forms.contact_field', 'Contact Field')}\n              style={TembaSelectStyle.small}\n              assets={this.props.assetStore.fields}\n              additionalOptions={getRoutableFields(this.context.config.flowType)}\n              valueKey=\"id\"\n              getName={getName}\n              entry={this.state.field}\n              searchable={true}\n              sortFunction={sortFieldsAndProperties}\n              onChange={this.handleFieldChanged}\n            />\n          </div>\n        </div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { ExpressionRouterFormState } from 'components/flow/routers/expression/ExpressionRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ExpressionRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let operand = DEFAULT_OPERAND;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_expression) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    operand = router.operand;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    operand: { value: operand },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ExpressionRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: state.operand.value,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_expression,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { NAME_PROPERTY } from 'components/flow/props';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { FieldRouterFormState } from 'components/flow/routers/field/FieldRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { getContactProperties } from 'components/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType, Scheme, SCHEMES } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const getRoutableFields = (flowType: FlowTypes = null): Asset[] => {\n  return [\n    ...getContactProperties(flowType),\n    ...SCHEMES.map((scheme: Scheme) => ({\n      name: scheme.path,\n      id: scheme.scheme,\n      type: AssetType.Scheme\n    }))\n  ];\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): FieldRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let field: any = null;\n\n  const type = getType(settings.originalNode);\n  if (settings.originalNode && type === Types.split_by_contact_field) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const operand = settings.originalNode.ui.config.operand;\n\n    if (assetStore.fields) {\n      if (operand.id in assetStore.fields.items) {\n        const name = assetStore.fields.items[operand.id].name;\n        field = { key: operand.id, label: name, type: operand.type };\n      }\n    }\n\n    // couldn't find the asset, check our routable fields\n    if (!field) {\n      field = getRoutableFields().find((asset: Asset) => asset.id === operand.id);\n    }\n  }\n\n  // our default is name\n  if (!field) {\n    field = NAME_PROPERTY;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    field: { value: field },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: FieldRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n\n  const asset = state.field.value;\n\n  let operandConfig = {\n    id: asset.id,\n    type: asset.type,\n    name: asset.name\n  };\n\n  if (asset.type === AssetType.Scheme) {\n    operand = `@(default(urn_parts(urns.${asset.id}).path, \"\"))`;\n  } else if (asset.type === AssetType.ContactProperty) {\n    operand = `@contact.${asset.id}`;\n  } else if (asset.key) {\n    operand = `@fields.${asset.key}`;\n    operandConfig = {\n      id: asset.key,\n      name: asset.label,\n      type: AssetType.Field\n    };\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_contact_field,\n    [],\n    {\n      operand: operandConfig,\n      cases: caseConfig\n    }\n  );\n\n  return newRenderNode;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { GroupsRouterFormState } from 'components/flow/routers/groups/GroupsRouterForm';\nimport { createRenderNode, getSwitchRouter, resolveRoutes } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, FlowNode, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): GroupsRouterFormState => {\n  const state: GroupsRouterFormState = {\n    groups: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_groups) {\n    state.groups.value = extractGroups(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: GroupsRouterFormState\n): RenderNode => {\n  const currentCases = groupsToCases(state.groups.value);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: GROUPS_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_groups,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractGroups = (node: FlowNode): any[] => {\n  let groups: any[] = [];\n  const router = getSwitchRouter(node);\n  if (router) {\n    groups = (router as SwitchRouter).cases.map(kase => {\n      const category = router.categories.find((cat: Category) => cat.uuid === kase.category_uuid);\n      return {\n        name: category.name,\n        uuid: kase.arguments[0]\n      };\n    });\n  }\n  return groups;\n};\nexport const groupsToCases = (groups: any[] = []): CaseProps[] => {\n  return groups.map(({ name, uuid }: any) => ({\n    uuid,\n    kase: {\n      uuid: createUUID(),\n      type: Operators.has_group,\n      arguments: [uuid, name],\n      category_uuid: ''\n    },\n    categoryName: name,\n    valid: true\n  }));\n};\n","import { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, SwitchRouter } from 'flowTypes';\nimport { LocalizedObject } from 'services/Localization';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport enum LocalizedType {\n  Category,\n  Case\n}\n\nexport const getOriginalCase = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const cases = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n  return cases.find((item: any) => item.uuid === uuid);\n};\n\nexport const getOriginalCategory = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const items = nodeSettings.originalNode.node.router.categories;\n  return items.find((item: any) => item.uuid === uuid);\n};\n\nexport const hasLocalizableCases = (renderNode: RenderNode) => {\n  const type = getType(renderNode);\n  return type === Types.wait_for_response || type === Types.split_by_expression;\n};\n\nexport const getLocalizedObjects = (\n  nodeSettings: NodeEditorSettings,\n  localizedType: LocalizedType\n): Category[] | Case[] => {\n  const filtered: any = [];\n\n  let items: Category[] | Case[] = nodeSettings.originalNode.node.router.categories;\n  if (localizedType === LocalizedType.Case) {\n    if (hasLocalizableCases(nodeSettings.originalNode)) {\n      items = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n    } else {\n      items = [];\n    }\n  }\n\n  for (const original of items) {\n    const [localized] = nodeSettings.localizations.filter(\n      (localizedObject: LocalizedObject) => localizedObject.getObject().uuid === original.uuid\n    );\n\n    if (localized.isLocalized()) {\n      filtered.push(localized.getObject());\n    } else {\n      filtered.push({ uuid: original.uuid });\n    }\n  }\n  return filtered;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { GROUP_LABEL } from 'components/flow/routers/constants';\nimport { nodeToState, stateToNode } from 'components/flow/routers/groups/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface GroupsRouterFormState extends FormState {\n  groups: AssetArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class GroupsRouterForm extends React.Component<\n  RouterFormProps,\n  GroupsRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleGroupsChanged(groups: Asset[]): void {\n    this.handleUpdate({ groups });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { groups?: Asset[]; resultName?: string }): boolean {\n    const updates: Partial<GroupsRouterFormState> = {};\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate(i18n.t('forms.groups', 'Groups'), keys.groups, [Required]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{GROUP_LABEL}</p>\n        <AssetSelector\n          name={i18n.t('forms.groups', 'Groups')}\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          searchable={true}\n          onChange={this.handleGroupsChanged}\n          multi={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { Case, Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\n\nimport {\n  getLocalizedObjects,\n  getOriginalCase,\n  getOriginalCategory,\n  LocalizedType\n} from './helpers';\nimport styles from './RouterLocalizationForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\nexport interface RouterLocalizationFormState extends FormState {\n  categories: Category[];\n  cases: Case[];\n}\n\nexport default class RouterLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  RouterLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n\n    const categories: Category[] = getLocalizedObjects(\n      props.nodeSettings,\n      LocalizedType.Category\n    ) as Category[];\n    const cases: Case[] = getLocalizedObjects(props.nodeSettings, LocalizedType.Case) as Case[];\n\n    this.state = { categories, cases, valid: true };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(keys: { category?: Category; kase?: Case }): boolean {\n    const updates: Partial<RouterLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('category')) {\n      updates.categories = [keys.category];\n    }\n\n    if (keys.hasOwnProperty('kase')) {\n      updates.cases = [keys.kase];\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateCategoryName(category: Category, name: string): boolean {\n    category.name = name;\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdateCaseArgument(kase: Case, arg: string): boolean {\n    kase.arguments = [arg];\n    return this.handleUpdate({ kase });\n  }\n\n  private handleSave(): void {\n    // collect up our category localizations\n    const translations: any[] = this.state.categories.map((cat: Category) => {\n      return cat.name\n        ? {\n            uuid: cat.uuid,\n            translations: {\n              name: cat.name\n            }\n          }\n        : { uuid: cat.uuid };\n    });\n\n    // same thing for any cases\n    translations.push(\n      ...this.state.cases.map((kase: Case) => {\n        return kase.arguments\n          ? {\n              uuid: kase.uuid,\n              translations: {\n                arguments: kase.arguments\n              }\n            }\n          : { uuid: kase.uuid };\n      })\n    );\n\n    this.props.updateLocalizations(this.props.language.id, translations);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderCases(): JSX.Element[] {\n    return this.state.cases.map((kase: Case) => {\n      const originalCase = getOriginalCase(this.props.nodeSettings, kase.uuid) as Case;\n\n      const { verboseName } = getOperatorConfig(originalCase.type);\n\n      if (originalCase.arguments) {\n        const [orginalArgument] = originalCase.arguments;\n\n        let argument = '';\n        if (kase.arguments && kase.arguments.length > 0) {\n          argument = kase.arguments[0];\n        }\n        const translation = i18n.t('forms.translation', 'Translation');\n\n        return (\n          <div\n            key={`translate_${kase.uuid}`}\n            data-spec=\"operator-field\"\n            className={styles.translating_operator_container}\n          >\n            <div data-spec=\"verbose-name\" className={styles.translating_operator}>\n              {verboseName}\n            </div>\n            <div data-spec=\"argument-to-translate\" className={styles.translating_from}>\n              {orginalArgument}\n            </div>\n            <div className={styles.translating_to}>\n              <TextInputElement\n                data-spec=\"localize-case\"\n                name={kase.uuid}\n                placeholder={`${this.props.language.name} ${translation}`}\n                showLabel={false}\n                onChange={(arg: string) => this.handleUpdateCaseArgument(kase, arg)}\n                entry={{ value: argument }}\n              />\n            </div>\n          </div>\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n\n  public renderCategories(): JSX.Element[] {\n    return this.state.categories.map((cat: Category) => {\n      const originalCategory = getOriginalCategory(this.props.nodeSettings, cat.uuid);\n\n      const placeholder = `${this.props.language.name} Translation`;\n\n      if (!cat.name) {\n        cat.name = '';\n      }\n\n      return (\n        <div key={cat.uuid} className={styles.translating_category}>\n          <div data-spec=\"category-name\" className={styles.translating_from}>\n            {originalCategory.name}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-category\"\n              name={cat.name}\n              placeholder={placeholder}\n              showLabel={false}\n              entry={{ value: cat.name }}\n              onChange={(name: string) => this.handleUpdateCategoryName(cat, name)}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n\n    const tabs: Tab[] = [];\n\n    const hasCasesWithArguments = !!this.state.cases.find((kase: Case) => {\n      const orginalCase = getOriginalCase(this.props.nodeSettings, kase.uuid) as Case;\n      return orginalCase.arguments && orginalCase.arguments.length > 0;\n    });\n\n    if (hasCasesWithArguments) {\n      tabs.push({\n        name: 'Rule Translations',\n        body: (\n          <>\n            <p data-spec=\"instructions\">\n              Sometimes languages need special rules to route things properly. If a translation is\n              not provided, the original rule will be used.\n            </p>\n            <div\n              className={\n                styles.translating_list_container +\n                ' ' +\n                (this.state.cases.length > 5 ? styles.scrolling : '')\n              }\n              tabIndex={0}\n            >\n              <div className={styles.translating_item_list}>{this.renderCases()}</div>\n            </div>\n          </>\n        )\n      });\n    }\n\n    const categories = (\n      <Dialog\n        title={`${this.props.language.name} Category Names`}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <p data-spec=\"instructions\">\n          When category names are referenced later in the flow, the appropriate language for the\n          category will be used. If no translation is provided, the original text will be used.\n        </p>\n        <div\n          className={\n            styles.translating_list_container +\n            ' ' +\n            (this.state.categories.length > 5 ? styles.scrolling : '')\n          }\n          tabIndex={0}\n        >\n          <div className={styles.translating_item_list}>{this.renderCategories()}</div>\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n\n    // if we have cases, use a flipper\n    return categories;\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { MenuRouterFormState } from './MenuRouterForm';\nimport { MENU_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): MenuRouterFormState => {\n  let resultName: StringEntry = { value: '' };\n\n  const menu: string[] = [];\n  for (let i = 0; i < 10; i++) {\n    menu.push('');\n  }\n\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    for (const kase of router.cases) {\n      let idx = parseInt(kase.arguments[0], 10) - 1;\n      if (idx === -1) {\n        idx = menu.length - 1;\n      }\n\n      menu[idx] = settings.originalNode.node.router.categories.find(\n        (category: Category) => category.uuid === kase.category_uuid\n      ).name;\n    }\n    resultName = { value: router.result_name || '' };\n  }\n\n  return {\n    resultName,\n    menu,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: MenuRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let originalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    originalCases = (settings.originalNode.node.router as SwitchRouter).cases;\n  }\n\n  const caseProps = menuToCases(state.menu, originalCases);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    caseProps,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: MENU_OPERAND,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits, count: 1 } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n\nexport const menuToCases = (menu: string[] = [], previousCases: Case[]): CaseProps[] =>\n  menu\n    .map((categoryName: string, index: number) => {\n      const idx = index === 9 ? 0 : index + 1;\n\n      const kase =\n        previousCases.find((c: Case) => c.arguments[0] === '' + idx) ||\n        ({\n          uuid: createUUID(),\n          arguments: ['' + idx],\n          type: Operators.has_number_eq,\n          category_uuid: ''\n        } as Case);\n\n      return {\n        uuid: kase.uuid,\n        kase,\n        categoryName,\n        valid: true\n      };\n    })\n    .filter((caseProps: CaseProps) => caseProps.categoryName.trim().length > 0);\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './MenuRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nconst mutate = require('immutability-helper');\n\nexport interface MenuRouterFormState extends FormState {\n  resultName: StringEntry;\n  menu: string[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class MenuRouterForm extends React.Component<RouterFormProps, MenuRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleMenuChanged(index: number, value: string): void {\n    const menu = mutate(this.state.menu, { [index]: { $set: value } });\n    this.setState({ menu });\n  }\n\n  private renderOption(index: number): JSX.Element {\n    return (\n      <div key={'menuoption-' + index} className={styles.menu_option}>\n        <div className={styles.digit}>{index === 9 ? 0 : index + 1}</div>\n        <div className={styles.category}>\n          <TextInputElement\n            name={'Menu ' + index}\n            entry={{ value: this.state.menu[index] }}\n            onChange={(value: string) => {\n              this.handleMenuChanged(index, value);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderMenu(): any {\n    const options: JSX.Element[] = [];\n    for (let i = 0; i < 10; i++) {\n      options.push(this.renderOption(i));\n    }\n\n    return options;\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.menu}>{this.renderMenu()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { RandomRouterFormState } from 'components/flow/routers/random/RandomRouterForm';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, Exit, Router, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID, range } from 'utils';\n\nexport const BUCKET_OPTIONS: SelectOption[] = range(2, 11).map((count: number) => {\n  return { value: count + '', name: count + ' buckets' };\n});\n\nexport const getOption = (value: number): SelectOption => {\n  let option = BUCKET_OPTIONS.find(\n    (bucketOption: SelectOption) => bucketOption.value === value + ''\n  );\n  if (!option) {\n    option = { name: `${value} Buckets`, value: value + '' };\n  }\n  return option;\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): RandomRouterFormState => {\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n  let buckets = 2;\n\n  let categories: Category[] = [];\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_random) {\n    const router = settings.originalNode.node.router as Router;\n    resultName = { value: router.result_name || '' };\n    buckets = settings.originalNode.node.exits.length;\n\n    // use any existing random buckets if we have any\n    categories = settings.originalNode.node.router.categories;\n  }\n\n  categories = fillOutCategories(categories, buckets);\n\n  return {\n    categories,\n    resultName,\n    bucketChoice: { value: getOption(buckets) },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: RandomRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const exits =\n    getType(settings.originalNode) === Types.split_by_random\n      ? settings.originalNode.node.exits\n      : [];\n\n  const count = parseInt(state.bucketChoice.value.value, 10);\n  exits.splice(count, exits.length - count);\n\n  state.categories.forEach((category: Category, idx: number) => {\n    if (idx < exits.length) {\n      category.exit_uuid = exits[idx].uuid;\n    } else {\n      const newExit: Exit = {\n        uuid: createUUID(),\n        destination_uuid: null\n      };\n      category.exit_uuid = newExit.uuid;\n      exits.push(newExit);\n    }\n  });\n\n  const router: Router = {\n    type: RouterTypes.random,\n    categories: state.categories,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_random,\n    [],\n    null\n  );\n\n  return newRenderNode;\n};\n\nexport const fillOutCategories = (categories: Category[], buckets: number): Category[] => {\n  // add any that we still need\n  return categories.concat(\n    range(categories.length, buckets).map((idx: number) => {\n      return { uuid: createUUID(), name: `Bucket ${idx + 1}`, exit_uuid: null };\n    })\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { BUCKET_OPTIONS, fillOutCategories, nodeToState, stateToNode } from './helpers';\nimport styles from './RandomRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface RandomRouterFormState extends FormState {\n  bucketChoice: SelectOptionEntry;\n  resultName: StringEntry;\n  categories: Category[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class RandomRouterForm extends React.Component<\n  RouterFormProps,\n  RandomRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleBucketsChanged(selected: SelectOption): boolean {\n    // create new exits if needed\n\n    const count = parseInt(selected.value, 10);\n\n    let categories = this.state.categories.concat([]);\n\n    // prune off if we have too many\n    categories = categories.slice(0, count);\n\n    // add any that we still need\n    categories = fillOutCategories(categories, count);\n\n    const updates: Partial<RandomRouterFormState> = {\n      bucketChoice: { value: selected }\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState({ ...updated, categories });\n\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    // don't proceed without our categories filled\n    if (this.state.categories.find(cat => cat.name.trim().length === 0)) {\n      return;\n    }\n\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleBucketNameChanged(category: Category, value: string): void {\n    const categories = this.state.categories;\n    categories.find((cat: Category) => cat.uuid === category.uuid).name = value;\n    this.setState({ categories });\n  }\n\n  private renderBucketNames(): any {\n    return this.state.categories.map((cat: Category) => (\n      <TextInputElement\n        key={cat.uuid}\n        __className={styles.bucket_name}\n        name={cat.uuid}\n        entry={{\n          value: cat.name,\n          validationFailures:\n            cat.name.trim().length === 0 ? [{ message: 'Bucket name is required' }] : []\n        }}\n        onChange={(value: string) => {\n          this.handleBucketNameChanged(cat, value);\n        }}\n      />\n    ));\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const OPTIONS = BUCKET_OPTIONS.concat([]);\n    if (BUCKET_OPTIONS.indexOf(this.state.bucketChoice.value) === -1) {\n      OPTIONS.push(this.state.bucketChoice.value);\n    }\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.options}>\n          <div className={styles.lead_in}>Split them randomly into one of</div>\n          <div className={styles.bucket_select}>\n            <SelectElement\n              key=\"buckets_select\"\n              style={TembaSelectStyle.small}\n              name={i18n.t('forms.buckets', 'Buckets')}\n              entry={this.state.bucketChoice}\n              onChange={this.handleBucketsChanged}\n              options={OPTIONS}\n            />\n          </div>\n        </div>\n        <div className={styles.bucket_list}>{this.renderBucketNames()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { ResponseRouterFormState } from 'components/flow/routers/response/ResponseRouterForm';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResponseRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: 'Result' };\n  let timeout = 0;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    if (settings.originalNode.node.router.wait && settings.originalNode.node.router.wait.timeout) {\n      timeout = settings.originalNode.node.router.wait.timeout.seconds || 0;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    timeout,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResponseRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory, timeoutCategory, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    state.timeout > 0,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const wait = { type: WaitTypes.msg } as Wait;\n  if (state.timeout > 0) {\n    wait.timeout = {\n      seconds: state.timeout,\n      category_uuid: timeoutCategory\n    };\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultCategory,\n    cases,\n    categories,\n    operand: DEFAULT_OPERAND,\n    wait,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/response/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TimeoutControl from 'components/form/timeout/TimeoutControl';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { WAIT_LABEL } from 'components/flow/routers/constants';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ResponseRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  timeout: number;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResponseRouterForm extends React.Component<\n  RouterFormProps,\n  ResponseRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n\n    const invalidCase = !!this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({\n      resultName,\n      valid: !invalidCase && !hasErrors(resultName)\n    });\n  }\n\n  private handleUpdateTimeout(timeout: number): void {\n    this.setState({ timeout });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    const nameErrors = hasErrors(this.state.resultName);\n    this.setState({ cases, valid: !invalidCase && !nameErrors });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        gutter={\n          <TimeoutControl timeout={this.state.timeout} onChanged={this.handleUpdateTimeout} />\n        }\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>{WAIT_LABEL}</div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './TimeoutControl.module.scss';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\nimport { SelectOption } from '../select/SelectElement';\n\nexport const TIMEOUT_OPTIONS: SelectOption[] = [\n  { value: '60', name: i18n.t('forms.timeout_1 minute', '1 minute') },\n  { value: '120', name: i18n.t('forms.timeout_2 minutes', '2 minutes') },\n  { value: '180', name: i18n.t('forms.timeout_3 minutes', '3 minutes') },\n  { value: '240', name: i18n.t('forms.timeout_4 minutes', '4 minutes') },\n  { value: '300', name: i18n.t('forms.timeout_5 minutes', '5 minutes') },\n  { value: '600', name: i18n.t('forms.timeout_10 minutes', '10 minutes') },\n  { value: '900', name: i18n.t('forms.timeout_15 minutes', '15 minutes') },\n  { value: '3600', name: i18n.t('forms.timeout_1 hour', '1 hour') },\n  { value: '7200', name: i18n.t('forms.timeout_2 hours', '2 hours') },\n  { value: '10800', name: i18n.t('forms.timeout_3 hours', '3 hours') },\n  { value: '21600', name: i18n.t('forms.timeout_6 hours', '6 hours') },\n  { value: '43200', name: i18n.t('forms.timeout_12 hours', '12 hours') },\n  { value: '64800', name: i18n.t('forms.timeout_18 hours', '18 hours') },\n  { value: '86400', name: i18n.t('forms.timeout_1 day', '1 day') },\n  { value: '172800', name: i18n.t('forms.timeout_2 days', '2 days') },\n  { value: '259200', name: i18n.t('forms.timeout_3 days', '3 days') },\n  { value: '604800', name: i18n.t('forms.timeout_1 week', '1 week') }\n];\n\nexport const DEFAULT_TIMEOUT = TIMEOUT_OPTIONS[4];\n\nexport const ellipsize = (str: string) => `${str}...`;\n\nexport interface TimeoutControlProps {\n  timeout: number;\n  onChanged(timeout: number): void;\n}\n\nexport default class TimeoutControl extends React.Component<TimeoutControlProps> {\n  constructor(props: TimeoutControlProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private getSelected(timeout: number): any {\n    for (const [idx, { value }] of TIMEOUT_OPTIONS.entries()) {\n      if (value === '' + timeout) {\n        return TIMEOUT_OPTIONS[idx];\n      }\n    }\n    return null;\n  }\n\n  private isChecked(): boolean {\n    return this.props.timeout > 0;\n  }\n\n  private getInstructions(): string {\n    const base = i18n.t('forms.continue_when_no_response', 'Continue when there is no response');\n    return this.isChecked() ? `${base} for` : ellipsize(base);\n  }\n\n  private handleChecked(): void {\n    if (this.props.timeout > 0) {\n      this.props.onChanged(0);\n    } else {\n      this.props.onChanged(parseInt(DEFAULT_TIMEOUT.value));\n    }\n  }\n\n  private handleTimeoutChanged(selected: any): void {\n    this.props.onChanged(parseInt(selected.value));\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.timeout_control_container}>\n        <div className={styles.left_section}>\n          <CheckboxElement\n            name={i18n.t('forms.timeout', 'Timeout')}\n            checked={this.isChecked()}\n            description={this.getInstructions()}\n            checkboxClassName={styles.checkbox}\n            onChange={this.handleChecked}\n          />\n        </div>\n        {renderIf(this.isChecked())(\n          <div className={styles.drop_down}>\n            <TembaSelect\n              name={i18n.t('forms.timeout', 'Timeout')}\n              style={TembaSelectStyle.small}\n              value={this.getSelected(this.props.timeout)}\n              options={TIMEOUT_OPTIONS}\n              onChange={this.handleTimeoutChanged}\n            ></TembaSelect>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { CallResthook } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { ResthookRouterFormState } from './ResthookRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResthookRouterFormState => {\n  let resthookAsset: FormEntry = { value: null };\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const originalAction = getOriginalAction(settings) as CallResthook;\n  if (originalAction && originalAction.type === Types.call_resthook) {\n    const resthook = originalAction.resthook;\n    resthookAsset = {\n      value: { resthook }\n    };\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    resthook: resthookAsset,\n    resultName,\n    valid\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResthookRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallResthook = {\n    uuid,\n    resthook: state.resthook.value.resthook,\n    type: Types.call_resthook,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallResthook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_resthook) {\n    return action as CallResthook;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './ResthookRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { SelectOption } from 'components/form/select/SelectElement';\n\n// TODO: Remove use of Function\nexport interface ResthookRouterFormState extends FormState {\n  resthook: FormEntry;\n  resultName: StringEntry;\n}\n\nexport default class ResthookRouterForm extends React.PureComponent<\n  RouterFormProps,\n  ResthookRouterFormState\n> {\n  options: SelectOption[] = [];\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const items = this.props.assetStore.resthooks ? this.props.assetStore.resthooks.items : {};\n    this.options = Object.keys(items).map((key: string) => {\n      return { name: items[key].name, value: key };\n    });\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public handleResthookChanged(selected: any[], submitting = false): boolean {\n    const updates: Partial<ResthookRouterFormState> = {\n      resthook: validate(i18n.t('forms.resthook', 'Resthook'), selected[0], [\n        shouldRequireIf(submitting)\n      ])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our resthook in case they haven't interacted\n    const valid = this.handleResthookChanged([this.state.resthook.value], true);\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.resthook', 'Resthook')}\n          placeholder={i18n.t('forms.resthook_to_call', 'Select the resthook to call')}\n          assets={this.props.assetStore.resthooks}\n          entry={this.state.resthook}\n          searchable={true}\n          onChange={this.handleResthookChanged}\n          nameKey=\"resthook\"\n          valueKey=\"resthook\"\n        />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { ResultRouterFormState } from './ResultRouterForm';\n\nexport const FIELD_NUMBER_OPTIONS: SelectOption[] = [\n  { value: '0', name: 'first' },\n  { value: '1', name: 'second' },\n  { value: '2', name: 'third' },\n  { value: '3', name: 'fourth' },\n  { value: '4', name: 'fifth' },\n  { value: '5', name: 'sixth' },\n  { value: '6', name: 'seventh' },\n  { value: '7', name: 'eighth' },\n  { value: '8', name: 'ninth' },\n  { value: '9', name: 'tenth' },\n  { value: '10', name: '11th' },\n  { value: '11', name: '12th' },\n  { value: '12', name: '13th' },\n  { value: '13', name: '14th' },\n  { value: '14', name: '15th' },\n  { value: '15', name: '16th' },\n  { value: '16', name: '17th' },\n  { value: '17', name: '18th' },\n  { value: '18', name: '19th' },\n  { value: '19', name: '20th' }\n];\n\nexport const getFieldOption = (value: number): SelectOption => {\n  return FIELD_NUMBER_OPTIONS.find((option: SelectOption) => option.value === '' + value);\n};\n\nexport const DELIMITER_OPTIONS: SelectOption[] = [\n  { value: ' ', name: 'spaces' },\n  { value: '.', name: 'periods' },\n  { value: '+', name: 'plusses' }\n];\n\nexport const getDelimiterOption = (value: string): SelectOption => {\n  return DELIMITER_OPTIONS.find((option: SelectOption) => option.value === value);\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): ResultRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let result: any = null;\n  let fieldNumber = 1;\n  let delimiter = ' ';\n  let shouldDelimit = false;\n\n  const type = getType(settings.originalNode);\n\n  if (\n    (settings.originalNode && type === Types.split_by_run_result) ||\n    type === Types.split_by_run_result_delimited\n  ) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const config = settings.originalNode.ui.config;\n    if (config && config.operand) {\n      if (config.operand.id in assetStore.results.items) {\n        result = assetStore.results.items[config.operand.id];\n      } else {\n        result = null;\n      }\n    }\n\n    if (type === Types.split_by_run_result_delimited) {\n      fieldNumber = config.index;\n      delimiter = config.delimiter;\n      shouldDelimit = true;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    result: { value: result },\n    shouldDelimit,\n    fieldNumber,\n    delimiter,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResultRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let nodeType = Types.split_by_run_result;\n\n  const result = state.result.value;\n  let operand = `@results.${result.id}`;\n\n  const config: any = {\n    operand: {\n      name: result.name,\n      id: result.id,\n      type: AssetType.Result\n    },\n    cases: caseConfig\n  };\n\n  if (state.shouldDelimit) {\n    config.index = state.fieldNumber;\n    config.delimiter = state.delimiter;\n    operand = `@(field(results.${result.id}, ${state.fieldNumber}, \"${state.delimiter}\"))`;\n    nodeType = Types.split_by_run_result_delimited;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    nodeType,\n    [],\n    config\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\n\nimport {\n  DELIMITER_OPTIONS,\n  FIELD_NUMBER_OPTIONS,\n  getDelimiterOption,\n  getFieldOption,\n  nodeToState,\n  stateToNode\n} from './helpers';\nimport styles from './ResultRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface ResultRouterFormState extends FormState {\n  result: FormEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n  shouldDelimit: boolean;\n\n  fieldNumber: number;\n  delimiter: string;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResultRouterForm extends React.Component<\n  RouterFormProps,\n  ResultRouterFormState\n> {\n  options: SelectOption[] = [];\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const items = this.props.assetStore.results.items;\n    this.options = Object.keys(items).map((key: string) => {\n      return { name: items[key].name, value: key };\n    });\n  }\n\n  private handleUpdate(keys: { resultName?: string; cases?: CaseProps[] }): boolean {\n    const updates: Partial<ResultRouterFormState> = {};\n\n    if (keys.hasOwnProperty('cases')) {\n      updates.cases = keys.cases;\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.handleUpdate({ cases });\n  }\n\n  private handleResultChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResultRouterFormState> = {\n      result: validate(i18n.t('forms.result_to_split_on', 'Result to split on'), selected[0], [\n        shouldRequireIf(submitting)\n      ])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // if we still have invalid cases, don't move forward\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    if (invalidCase) {\n      return;\n    }\n\n    const valid = this.handleResultChanged([this.state.result.value], true);\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleShouldDelimitChanged(checked: boolean): void {\n    this.setState({ shouldDelimit: checked });\n  }\n\n  private handleFieldNumberChanged(selected: SelectOption): void {\n    this.setState({ fieldNumber: parseInt(selected.value, 10) });\n  }\n\n  private handleDelimiterChanged(selected: SelectOption): void {\n    this.setState({ delimiter: selected.value });\n  }\n\n  private renderField(): JSX.Element {\n    return (\n      <div className={styles.non_delimited}>\n        <div className={styles.lead_in}>If the flow result</div>\n        <div className={styles.result_select}>\n          <AssetSelector\n            entry={this.state.result}\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.flow_result', 'Flow Result')}\n            placeholder=\"Select Result\"\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n            additionalOptions={this.options}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderFieldDelimited(): JSX.Element {\n    return (\n      <div className={styles.delimited}>\n        <div className={styles.lead_in}>If the</div>\n        <div className={styles.field_number}>\n          <SelectElement\n            key=\"field_number_select\"\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.field_number', 'Field Number')}\n            entry={{ value: getFieldOption(this.state.fieldNumber) }}\n            onChange={this.handleFieldNumberChanged}\n            options={FIELD_NUMBER_OPTIONS}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>field of</div>\n        <div className={styles.result_select_delimited}>\n          <AssetSelector\n            entry={this.state.result}\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.flow_result', 'Flow Result')}\n            placeholder={i18n.t('forms.select_result', 'Select Result')}\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n            additionalOptions={this.options}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>delimited by</div>\n        <div className={styles.delimiter}>\n          <SelectElement\n            key=\"delimiter_select\"\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.delimiter', 'Delimiter')}\n            entry={{ value: getDelimiterOption(this.state.delimiter) }}\n            onChange={this.handleDelimiterChanged}\n            options={DELIMITER_OPTIONS}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <div className={styles.should_delimit}>\n          <CheckboxElement\n            name={i18n.t('forms.delimit', 'Delimit')}\n            title={i18n.t('forms.delimit_result', 'Delimit Result')}\n            checked={this.state.shouldDelimit}\n            description={i18n.t(\n              'forms.delimit_result_description',\n              'Evaluate your rules against a delimited part of your result'\n            )}\n            onChange={this.handleShouldDelimitChanged}\n          />\n        </div>\n      ),\n      checked: this.state.shouldDelimit\n    };\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={[advanced]}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {this.state.shouldDelimit ? this.renderFieldDelimited() : this.renderField()}\n\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from 'components/flow/routers/subflow/helpers';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { fetchAsset, getFlowType } from 'external';\nimport styles from './SubflowRouterForm.module.scss';\nimport { Trans } from 'react-i18next';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\n\n// TODO: Remove use of Function\nexport interface SubflowRouterFormState extends FormState {\n  flow: FormEntry;\n  params: { [name: string]: StringEntry };\n}\n\nexport default class SubflowRouterForm extends React.PureComponent<\n  RouterFormProps,\n  SubflowRouterFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount() {\n    // we need to resolve our flow for it's parent refs\n    // todo: just fetch this is a plan flow result without the asset translation\n    if (this.state.flow.value) {\n      fetchAsset(this.props.assetStore.flows, this.state.flow.value.uuid).then((flow: Asset) => {\n        if (flow) {\n          this.handleFlowChanged([\n            { name: flow.name, uuid: flow.id, parent_refs: flow.content.parent_refs }\n          ]);\n        }\n      });\n    }\n  }\n\n  public handleFlowChanged(flows: any[], submitting = false): boolean {\n    const flow = flows[0];\n\n    const updates: Partial<SubflowRouterFormState> = {\n      flow: validate(i18n.t('forms.flow', 'Flow'), flow, [shouldRequireIf(submitting)])\n    };\n\n    const params: { [key: string]: StringEntry } = {};\n    // ensure our parameters are initialized\n    if (flow && flow.parent_refs) {\n      for (const key of flow.parent_refs) {\n        if (this.state.params[key]) {\n          params[key] = { ...this.state.params[key] };\n        } else {\n          params[key] = { value: '' };\n        }\n      }\n      updates.params = params;\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our flow in case they haven't interacted\n    this.handleFlowChanged([this.state.flow.value], true);\n\n    const hasFieldErrors = Object.keys(this.state.params).find((key: string) =>\n      hasErrors(this.state.params[key])\n    );\n\n    if (this.state.valid && !hasFieldErrors) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleShouldExclude(flow: any): boolean {\n    // only show flows that match our flow type\n    return getFlowType(flow) !== this.context.config.flowType;\n  }\n\n  private handleParamChanged(text: string, name: string) {\n    const params = { ...this.state.params };\n    params[name] = { value: text };\n    this.setState({ params });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const tabs: Tab[] = [];\n    const flow = this.state.flow.value;\n\n    const hasFieldErrors = !!Object.keys(this.state.params).find((key: string) =>\n      hasErrors(this.state.params[key])\n    );\n\n    if (flow && flow.parent_refs && flow.parent_refs.length > 0) {\n      tabs.push({\n        name: i18n.t('forms.enter_flow_parameters_tab', 'Parameters'),\n        body: (\n          <div>\n            <p className={styles.info}>\n              <Trans\n                i18nKey=\"forms.enter_flow_parameters_summary\"\n                values={{\n                  flow: this.state.flow.value.name,\n                  url: this.context.config.endpoints.editor + '/' + this.state.flow.value.id\n                }}\n              >\n                <a\n                  target=\"_\"\n                  href={this.context.config.endpoints.editor + '/' + this.state.flow.value.id}\n                >\n                  [[flow]]\n                </a>{' '}\n                expects the following parameters to be set by this flow. These can be set using a{' '}\n                <span>Save Flow Result</span> action or directly below.\n              </Trans>\n            </p>\n            <table className={styles.params}>\n              <tbody>\n                {flow.parent_refs.map((name: string) => {\n                  return (\n                    <tr key={'param_' + name} className={styles.param}>\n                      <td className={styles.param_name}>{name}</td>\n                      <td className={styles.param_input}>\n                        <TextInputElement\n                          name={name}\n                          showLabel={false}\n                          placeholder={name}\n                          onChange={(updatedText: string) => {\n                            this.handleParamChanged(updatedText, name);\n                          }}\n                          entry={this.state.params[name]}\n                          autocomplete={true}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        ),\n        hasErrors: hasFieldErrors,\n        checked: !!Object.keys(this.state.params).find(\n          (key: string) => this.state.params[key] && this.state.params[key].value.trim().length > 0\n        )\n      });\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.flow', 'Flow')}\n          placeholder={i18n.t('forms.select_flow', 'Select the flow to start')}\n          assets={this.props.assetStore.flows}\n          entry={this.state.flow}\n          searchable={true}\n          shouldExclude={this.handleShouldExclude}\n          onChange={this.handleFlowChanged}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { SubflowRouterFormState } from 'components/flow/routers/subflow/SubflowRouterForm';\nimport { SUBFLOW_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport {\n  Case,\n  Category,\n  Exit,\n  RouterTypes,\n  StartFlow,\n  StartFlowExitNames,\n  SwitchRouter,\n  SetRunResult,\n  AnyAction,\n  Action\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): SubflowRouterFormState => {\n  const params: { [key: string]: StringEntry } = {};\n  if (\n    getType(settings.originalNode) === Types.split_by_subflow ||\n    (settings.originalAction && settings.originalAction.type === Types.enter_flow)\n  ) {\n    let action = settings.originalAction as StartFlow;\n    if (!action || action.type !== Types.enter_flow) {\n      action = settings.originalNode.node.actions.find(\n        (action: Action) => action.type === Types.enter_flow\n      ) as StartFlow;\n    }\n\n    // look for any run result actions\n    settings.originalNode.node.actions.forEach((action: AnyAction) => {\n      if (action.type === Types.set_run_result) {\n        const setRunResult = action as SetRunResult;\n        params[setRunResult.name] = { value: setRunResult.value };\n      }\n    });\n\n    return { flow: { value: action.flow }, params, valid: true };\n  }\n\n  return {\n    flow: { value: null },\n    params: {},\n    valid: false\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SubflowRouterFormState\n): RenderNode => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  const startFlowAction: StartFlow = {\n    uuid: action.uuid || createUUID(),\n    type: Types.enter_flow,\n    flow: { uuid: state.flow.value.uuid, name: state.flow.value.name }\n  };\n\n  // If we're already a subflow, lean on those exits and cases\n  let exits: Exit[];\n  let cases: Case[];\n  let categories: Category[];\n\n  if (getType(settings.originalNode) === Types.split_by_subflow) {\n    ({ exits } = settings.originalNode.node);\n    ({ cases, categories } = settings.originalNode.node.router as SwitchRouter);\n  } else {\n    // Otherwise, let's create some new ones\n    exits = [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ];\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Complete,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Expired,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: ['completed'],\n        category_uuid: categories[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        arguments: ['expired'],\n        type: Operators.has_only_text,\n        category_uuid: categories[1].uuid\n      }\n    ];\n  }\n\n  const actions = [];\n\n  // add some set result actions if needed\n  Object.keys(state.params).forEach((key: string) => {\n    const value = state.params[key] ? state.params[key].value || '' : '';\n    if (value.trim().length > 0) {\n      const setResultAction: SetRunResult = {\n        uuid: createUUID(),\n        name: key,\n        value,\n        type: Types.set_run_result\n      };\n      actions.push(setResultAction);\n    }\n  });\n\n  actions.push(startFlowAction);\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: SUBFLOW_OPERAND,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_subflow,\n    actions\n  );\n\n  return newRenderNode;\n};\n","import { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { WaitRouterFormState } from 'components/flow/routers/wait/WaitRouterForm';\nimport { DEFAULT_OPERAND, MEDIA_OPERAND } from 'components/nodeeditor/constants';\nimport { Type, Types } from 'config/interfaces';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): WaitRouterFormState => {\n  let resultName: StringEntry = { value: 'Result' };\n\n  // look at the actual ui type instead of the hint here, we want results for any kind of wait\n  if (settings.originalNode && settings.originalNode.ui.type === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WaitRouterFormState,\n  typeConfig: Type\n): RenderNode => {\n  const { exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    [],\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n  const wait = { type: WaitTypes.msg } as Wait;\n  switch (typeConfig.type) {\n    case Types.wait_for_audio:\n      wait.hint = { type: HintTypes.audio };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_image:\n      wait.hint = { type: HintTypes.image };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_location:\n      wait.hint = { type: HintTypes.location };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_video:\n      wait.hint = { type: HintTypes.video };\n      operand = MEDIA_OPERAND;\n      break;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases: [],\n    categories,\n    wait,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { WebhookRouterFormState } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallWebhook } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport enum Methods {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  PATCH = 'PATCH'\n}\n\nexport interface MethodOption {\n  value: string;\n  name: string;\n}\n\ninterface HeaderMap {\n  [name: string]: string;\n}\n\nexport const GET_METHOD: MethodOption = {\n  value: Methods.GET,\n  name: Methods.GET\n};\n\nexport const METHOD_OPTIONS: MethodOption[] = [\n  GET_METHOD,\n  { value: Methods.POST, name: Methods.POST },\n  { value: Methods.PUT, name: Methods.PUT },\n  { value: Methods.DELETE, name: Methods.DELETE },\n  { value: Methods.HEAD, name: Methods.HEAD },\n  { value: Methods.PATCH, name: Methods.PATCH }\n];\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallWebhook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_webhook) {\n    return action as CallWebhook;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): WebhookRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n\n  const state: WebhookRouterFormState = {\n    headers: [],\n    resultName,\n    method: { value: GET_METHOD },\n    url: { value: '' },\n    body: { value: getDefaultBody(Methods.GET) },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_webhook) {\n    const action = getOriginalAction(settings) as CallWebhook;\n\n    // add in our headers\n    for (const name of Object.keys(action.headers || []).sort()) {\n      state.headers.push({\n        value: {\n          uuid: createUUID(),\n          value: action.headers[name],\n          name\n        }\n      });\n    }\n\n    state.resultName = { value: action.result_name };\n    state.url = { value: action.url };\n    state.method = { value: { name: action.method, value: action.method } };\n    state.body = { value: action.body };\n    state.valid = true;\n  } else {\n    state.headers.push({\n      value: {\n        uuid: createUUID(),\n        name: 'Accept',\n        value: 'application/json'\n      }\n    });\n  }\n\n  // one empty header\n  state.headers.push({\n    value: {\n      uuid: createUUID(),\n      name: '',\n      value: ''\n    }\n  });\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WebhookRouterFormState\n): RenderNode => {\n  const headers: HeaderMap = {};\n\n  for (const entry of state.headers) {\n    if (entry.value.name.trim().length !== 0) {\n      headers[entry.value.name] = entry.value.value;\n    }\n  }\n\n  let uuid = createUUID();\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallWebhook = {\n    uuid,\n    headers,\n    type: Types.call_webhook,\n    url: state.url.value,\n    body: state.body.value,\n    method: state.method.value.value as Methods,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n\nexport const getDefaultBody = (method: string): string => {\n  return method === Methods.GET ? '' : DEFAULT_BODY;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './WaitRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface WaitRouterFormState extends FormState {\n  resultName: StringEntry;\n}\n\nexport default class WaitRouterForm extends React.Component<RouterFormProps, WaitRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(\n        stateToNode(this.props.nodeSettings, this.state, this.props.typeConfig)\n      );\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getAllErrors } from 'components/flow/actions/helpers';\nimport { HeaderEntry } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport styles from 'components/flow/routers/webhook/WebhookRouterForm.module.scss';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { HeaderName, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: move this into webhook router component\nexport interface Header {\n  uuid: string;\n  name: string;\n  value: string;\n}\n\nexport interface HeaderElementProps {\n  entry: HeaderEntry;\n  index: number;\n  onRemove: (header: Header) => void;\n  onChange: (header: Header, validationFailures: ValidationFailure[]) => void;\n  empty?: boolean;\n}\n\ninterface HeaderElementState {\n  name: StringEntry;\n  value: StringEntry;\n}\n\nexport const headerContainerSpecId = 'header-container';\nexport const nameContainerSpecId = 'name-container';\nexport const valueConatainerSpecId = 'value-container';\nexport const removeIcoSpecId = 'remove-icon';\n\nexport const HEADER_NAME_ERROR = i18n.t(\n  'errors.http_header_missing_name',\n  'HTTP headers must have a name'\n);\nexport const NAME_PLACEHOLDER = i18n.t('forms.webhook_header_name', 'Header Name');\nexport const VALUE_PLACEHOLDER = i18n.t('forms.value', 'Value');\n\nexport default class HeaderElement extends React.Component<HeaderElementProps, HeaderElementState> {\n  constructor(props: HeaderElementProps) {\n    super(props);\n\n    const header = this.props.entry.value;\n    const name = header.name || '';\n    const value = header.value || '';\n\n    this.state = {\n      name: { value: name },\n      value: { value }\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private getHeader(): Header {\n    return {\n      name: this.state.name.value,\n      value: this.state.value.value,\n      uuid: this.props.entry.value.uuid\n    };\n  }\n\n  private handleChangeName(value: string): void {\n    const name = validate(i18n.t('forms.header_name', 'Header name'), value, [HeaderName]);\n    this.setState({ name: { value: name.value } }, () =>\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      )\n    );\n  }\n\n  private handleChangeValue(value: string): void {\n    this.setState({ value: { value } }, () => {\n      const name = validate(i18n.t('forms.header_name', 'Header name'), this.state.name.value, [\n        HeaderName\n      ]);\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      );\n    });\n  }\n\n  private handleRemove(): void {\n    this.props.onRemove(this.getHeader());\n  }\n\n  private getRemoveIco(): JSX.Element {\n    return (\n      <div className={styles.remove_ico} onClick={this.handleRemove} data-spec={removeIcoSpecId}>\n        <span className=\"fe-x\" />\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const removeIco: JSX.Element = this.getRemoveIco();\n    return (\n      <FormElement name={i18n.t('forms.webhook_header', 'Header')} entry={this.props.entry}>\n        <div className={styles.header} data-spec={headerContainerSpecId}>\n          <div className={styles.header_name} data-spec={nameContainerSpecId}>\n            <TextInputElement\n              placeholder={NAME_PLACEHOLDER}\n              name={NAME_PLACEHOLDER}\n              onChange={this.handleChangeName}\n              entry={this.state.name}\n            />\n          </div>\n          <div className={styles.header_value} data-spec={valueConatainerSpecId}>\n            <TextInputElement\n              placeholder={VALUE_PLACEHOLDER}\n              name={VALUE_PLACEHOLDER}\n              onChange={this.handleChangeValue}\n              entry={this.state.value}\n              autocomplete={true}\n            />\n          </div>\n          {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport HeaderElement, { Header } from 'components/flow/routers/webhook/header/HeaderElement';\nimport {\n  METHOD_OPTIONS,\n  MethodOption,\n  Methods,\n  nodeToState,\n  stateToNode,\n  getDefaultBody\n} from 'components/flow/routers/webhook/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate,\n  ValidURL,\n  validateIf\n} from 'store/validators';\nimport { createUUID } from 'utils';\n\nimport styles from './WebhookRouterForm.module.scss';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport interface HeaderEntry extends FormEntry {\n  value: Header;\n}\n\nexport interface MethodEntry extends FormEntry {\n  value: MethodOption;\n}\n\nexport interface WebhookRouterFormState extends FormState {\n  headers: HeaderEntry[];\n  method: MethodEntry;\n  url: StringEntry;\n  body: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class WebhookRouterForm extends React.Component<\n  RouterFormProps,\n  WebhookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      method?: MethodOption;\n      url?: string;\n      body?: string;\n      header?: Header;\n      removeHeader?: Header;\n      validationFailures?: ValidationFailure[];\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<WebhookRouterFormState> = {};\n\n    let ensureEmptyHeader = false;\n    let toRemove: any[] = [];\n\n    if (keys.hasOwnProperty('method')) {\n      updates.method = { value: keys.method };\n\n      const oldMethod = this.state.method.value.value;\n      const newMethod = keys.method.value;\n\n      if (oldMethod !== newMethod) {\n        const existingContentTypeHeader = this.state.headers.find(\n          (header: HeaderEntry) => header.value.name.toLowerCase() === 'content-type'\n        );\n\n        // whenever our method changes, update the default body\n        updates.body = { value: getDefaultBody(newMethod) };\n\n        // switching from a GET, add a content-type\n        if (oldMethod === Methods.GET && newMethod !== Methods.GET) {\n          if (!existingContentTypeHeader) {\n            let uuid = createUUID();\n            // if we have an empty header, use that one\n            const lastHeader =\n              this.state.headers.length > 0\n                ? this.state.headers[this.state.headers.length - 1]\n                : null;\n            if (lastHeader && !lastHeader.value.name) {\n              uuid = lastHeader.value.uuid;\n            }\n            keys.header = { uuid, name: 'Content-Type', value: 'application/json' };\n          }\n        } else if (oldMethod !== Methods.GET && newMethod === Methods.GET) {\n          // remove content type if switching to a GET\n          if (existingContentTypeHeader) {\n            toRemove = [{ headers: [{ value: existingContentTypeHeader.value }] }];\n          }\n        }\n      }\n    }\n\n    if (keys.hasOwnProperty('url')) {\n      updates.url = validate(i18n.t('forms.url', 'URL'), keys.url, [\n        shouldRequireIf(submitting),\n        validateIf(ValidURL, keys.url.indexOf('@') === -1)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting),\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = { value: keys.body };\n    }\n\n    if (keys.hasOwnProperty('header')) {\n      updates.headers = [{ value: keys.header, validationFailures: keys.validationFailures }];\n      ensureEmptyHeader = true;\n    }\n\n    if (keys.hasOwnProperty('removeHeader')) {\n      toRemove = [{ headers: [{ value: keys.removeHeader }] }];\n      ensureEmptyHeader = true;\n    }\n\n    const updated = mergeForm(this.state, updates, toRemove);\n\n    // update our form\n    this.setState(updated, () => {\n      // if we updated headers, check if we need a new one\n      if (ensureEmptyHeader) {\n        let needsHeader = true;\n        for (const header of this.state.headers) {\n          if (header.value.name.trim() === '') {\n            needsHeader = false;\n            break;\n          }\n        }\n\n        if (needsHeader) {\n          this.handleCreateHeader();\n        }\n      }\n    });\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(value: string): boolean {\n    return this.handleUpdate({ resultName: value });\n  }\n\n  private handleMethodUpdate(method: MethodOption): boolean {\n    return this.handleUpdate({ method });\n  }\n\n  private handleUrlUpdate(url: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ url }, submitting);\n  }\n\n  private handleHeaderRemoved(removeHeader: Header): boolean {\n    return this.handleUpdate({ removeHeader });\n  }\n\n  private handleHeaderUpdated(header: Header, validationFailures: ValidationFailure[]): boolean {\n    return this.handleUpdate({ header, validationFailures });\n  }\n\n  private handleCreateHeader(): boolean {\n    return this.handleUpdate({\n      header: {\n        uuid: createUUID(),\n        name: '',\n        value: ''\n      }\n    });\n  }\n\n  private handleBodyUpdate(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleSave(): void {\n    // validate our url in case they haven't interacted\n    const valid = this.handleUpdate(\n      { url: this.state.url.value, resultName: this.state.resultName.value },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const headerElements: JSX.Element[] = this.state.headers.map(\n      (header: HeaderEntry, index: number, arr: HeaderEntry[]) => {\n        return (\n          <div key={`header_${header.value.uuid}`}>\n            <HeaderElement\n              entry={header}\n              onRemove={this.handleHeaderRemoved}\n              onChange={this.handleHeaderUpdated}\n              index={index}\n            />\n          </div>\n        );\n      }\n    );\n\n    const tabs: Tab[] = [];\n    tabs.push({\n      name: i18n.t('forms.http_headers', 'HTTP Headers'),\n      hasErrors: !!this.state.headers.find((header: HeaderEntry) => hasErrors(header)),\n      body: (\n        <>\n          <p className={styles.info}>\n            <Trans i18nKey=\"forms.webhook_header_summary\">\n              Add any additional headers below that you would like to send along with your request.\n            </Trans>\n          </p>\n          {headerElements}\n        </>\n      ),\n      checked: this.state.headers.length > 1\n    });\n\n    const method = this.state.method.value.value;\n    const name = this.state.method.value.name + ' ' + i18n.t('body', 'Body');\n    tabs.push({\n      name,\n      body: (\n        <div key=\"post_body\" className={styles.body_form}>\n          <h4>{name}</h4>\n          <p>\n            <Trans\n              i18nKey=\"forms.webhook_body_summary\"\n              values={{ method: this.state.method.value.name }}\n            >\n              Modify the body of the [[method]] request that will be sent to your webhook.\n            </Trans>\n          </p>\n          <TextInputElement\n            __className={styles.req_body}\n            name={name}\n            showLabel={false}\n            entry={this.state.body}\n            onChange={this.handleBodyUpdate}\n            helpText={\n              <Trans\n                i18nKey=\"forms.webhook_body_summary\"\n                values={{ method: this.state.method.value.name }}\n              >\n                Modify the body of the [[method]] request that will be sent to your webhook.\n              </Trans>\n            }\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n      ),\n      checked: this.state.body.value !== getDefaultBody(method)\n    });\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n          <div className={styles.method}>\n            <SelectElement\n              key=\"method_select\"\n              name={i18n.t('forms.method', 'Method')}\n              entry={this.state.method}\n              onChange={this.handleMethodUpdate}\n              options={METHOD_OPTIONS}\n            />\n          </div>\n          <div className={styles.url}>\n            <TextInputElement\n              name={i18n.t('forms.url', 'URL')}\n              placeholder={i18n.t('forms.enter_a_url', 'Enter a URL')}\n              entry={this.state.url}\n              onChange={this.handleUrlUpdate}\n              autocomplete={true}\n            />\n          </div>\n        </div>\n        <div className={styles.instructions}>\n          <p>\n            <Trans i18nKey=\"forms.webhook_help\">\n              If your server responds with JSON, each property will be added to the Flow.\n            </Trans>\n          </p>\n          <pre className={styles.code}>\n            {'{ \"product\": \"Solar Charging Kit\", \"stock level\": 32 }'}\n          </pre>\n          <p>\n            <Trans i18nKey=\"forms.webhook_example\">\n              This response would add <span className={styles.example}>@webhook.product</span> and{' '}\n              <span className={styles.example}>@webhook[\"stock level\"]</span> for use in the flow.\n            </Trans>\n          </p>\n        </div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import * as React from 'react';\nimport { CallClassifier } from 'flowTypes';\nimport { renderAsset } from '../helpers';\nimport { AssetType } from 'store/flowContext';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst CallClassifierComp: React.SFC<CallClassifier> = (\n  { classifier },\n  context: any\n): JSX.Element => {\n  return renderAsset(\n    {\n      id: classifier.uuid,\n      name: classifier.name,\n      type: AssetType.Classifier\n    },\n    context.config.endpoints\n  );\n};\n\nCallClassifierComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default CallClassifierComp;\n","import {\n  hasCases,\n  createCaseProps,\n  resolveRoutes,\n  ResolvedRoutes,\n  createRenderNode\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types, Operators, VISIBILITY_HIDDEN } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallClassifier, SwitchRouter, Case, Exit, Category, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry, FormEntry } from 'store/nodeEditor';\nimport { createUUID, scalarArrayEquals, snakify } from 'utils';\nimport { ClassifyRouterFormState } from 'components/flow/routers/classify/ClassifyRouterForm';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { getOperatorConfig } from 'config';\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallClassifier => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_classifier) {\n    return action as CallClassifier;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): ClassifyRouterFormState => {\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: 'Result' };\n  let initialCases: CaseProps[] = [];\n\n  let operand = DEFAULT_OPERAND;\n  let classifier: FormEntry = { value: null };\n\n  let hiddenCases: CaseProps[] = [];\n\n  if (getType(settings.originalNode) === Types.split_by_intent) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (hasCases(settings.originalNode.node)) {\n      initialCases = createCaseProps(router.cases, settings.originalNode);\n\n      hiddenCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility === VISIBILITY_HIDDEN\n      );\n\n      initialCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility !== VISIBILITY_HIDDEN\n      );\n    }\n\n    resultName = { value: router.result_name || 'Result' };\n    const action = getOriginalAction(settings) as CallClassifier;\n    classifier = { value: action.classifier };\n    operand = action.input;\n  }\n\n  const state: ClassifyRouterFormState = {\n    hiddenCases,\n    resultName,\n    classifier,\n    operand: { value: operand },\n    cases: initialCases,\n    valid: true\n  };\n\n  return state;\n};\n\nexport interface Route {\n  type: Operators;\n  arguments: string[];\n  name: 'Other';\n}\n\nexport const ensureRoute = (routes: ResolvedRoutes, route: Route) => {\n  const existingCasePosition = routes.cases.findIndex(\n    kase => kase.type === route.type && scalarArrayEquals(kase.arguments, route.arguments)\n  );\n\n  // if it already exists, make sure it's at the end\n  if (existingCasePosition >= 0) {\n    // already in the right place we are done\n    if (existingCasePosition === routes.cases.length - 1) {\n      return;\n    }\n\n    const [existingCase] = routes.cases.splice(existingCasePosition, 1);\n    routes.cases.push(existingCase);\n\n    return;\n  }\n\n  const exit: Exit = {\n    uuid: createUUID()\n  };\n\n  const category: Category = {\n    uuid: createUUID(),\n    name: route.name,\n    exit_uuid: exit.uuid\n  };\n\n  // otherwise let's add it\n  const kase: Case = {\n    uuid: createUUID(),\n    type: route.type,\n    arguments: route.arguments,\n    category_uuid: category.uuid\n  };\n\n  routes.categories.push(category);\n  routes.cases.push(kase);\n\n  // our new exit should go right in front of the default exit\n  routes.exits.splice(routes.exits.length - 1, 0, exit);\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ClassifyRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n\n  const routes = resolveRoutes(\n    [...state.cases, ...state.hiddenCases],\n    false,\n    settings.originalNode.node,\n    'Failure'\n  );\n\n  // make sure we have an other route since failure is our default\n  ensureRoute(routes, {\n    type: Operators.has_category,\n    arguments: ['Success', 'Skipped'],\n    name: 'Other'\n  });\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const routerResultName = state.resultName.value;\n  const actionResultName = '_' + routerResultName + ' Classification';\n\n  const newAction: CallClassifier = {\n    uuid,\n    type: Types.call_classifier,\n    result_name: actionResultName,\n    input: state.operand.value,\n    classifier: {\n      uuid: state.classifier.value.uuid,\n      name: state.classifier.value.name\n    }\n  };\n\n  const router: SwitchRouter = {\n    cases: routes.cases,\n    operand: `@results.${snakify(actionResultName)}`,\n    categories: routes.categories,\n    type: RouterTypes.switch,\n    default_category_uuid: routes.defaultCategory,\n    result_name: routerResultName\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    routes.exits,\n    Types.split_by_intent,\n    [newAction]\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from './helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, FormEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { Asset } from 'store/flowContext';\nimport { renderIf } from 'utils';\nimport { intentOperatorList } from 'config/operatorConfigs';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { fetchAsset } from 'external';\nimport styles from './ClassifyRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface ClassifyRouterFormState extends FormState {\n  hiddenCases: CaseProps[];\n  resultName: StringEntry;\n  classifier: FormEntry;\n  cases: CaseProps[];\n  operand: StringEntry;\n}\n\nexport default class ClassifyRouterForm extends React.Component<\n  RouterFormProps,\n  ClassifyRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    // we need to resolve our classifier for intent selection\n    if (this.state.classifier.value) {\n      // TODO: don't use asset as intermediary now that AssetSelector deals in native options\n      fetchAsset(this.props.assetStore.classifiers, this.state.classifier.value.uuid).then(\n        (classifier: Asset) => {\n          if (classifier) {\n            this.handleUpdate({\n              classifier: { ...this.state.classifier.value, ...classifier.content }\n            });\n          }\n        }\n      );\n    }\n  }\n\n  private handleUpdate(\n    keys: {\n      resultName?: string;\n      classifier?: any;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<ClassifyRouterFormState> = {};\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting),\n        Required,\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    if (keys.hasOwnProperty('classifier')) {\n      updates.classifier = validate(i18n.t('forms.classifier', 'Classifier'), keys.classifier, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleUpdateResultName(value: string): boolean {\n    return this.handleUpdate({ resultName: value });\n  }\n\n  private handleSave(): void {\n    // if we still have invalid cases, don't move forward\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    if (invalidCase) {\n      return;\n    }\n\n    // validate our result name in case they haven't interacted\n    const valid = this.handleUpdate(\n      {\n        resultName: this.state.resultName.value,\n        classifier: this.state.classifier.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleClassifierUpdated(selected: Asset[]): void {\n    this.handleUpdate({ classifier: selected[0] });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({\n      operand: validate(i18n.t('forms.operand', 'Operand'), value, [Required])\n    });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private dialog: Dialog;\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const tabs: Tab[] = [\n      {\n        name: 'Classifier Input',\n        checked: this.state.operand.value !== DEFAULT_OPERAND,\n        body: (\n          <>\n            <p>\n              Enter an expression to use as the input to your classifier. To classify the last\n              response from the contact use <code>{DEFAULT_OPERAND}</code>.\n            </p>\n            <TextInputElement\n              name={i18n.t('forms.operand', 'Operand')}\n              showLabel={false}\n              autocomplete={true}\n              onChange={this.handleOperandUpdated}\n              entry={this.state.operand}\n            />\n          </>\n        )\n      }\n    ];\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n        ref={ele => {\n          this.dialog = ele;\n        }}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          <span>Run </span>\n          <span\n            className={styles.link}\n            onClick={() => {\n              this.dialog.showTab(0);\n            }}\n          >\n            {this.state.operand.value === DEFAULT_OPERAND\n              ? 'the last response'\n              : this.state.operand.value}\n          </span>\n          <span> through the classifier...</span>\n        </p>\n        <AssetSelector\n          key=\"select_classifier\"\n          name={i18n.t('forms.classifier', 'Classifier')}\n          placeholder=\"Select the classifier to use\"\n          assets={this.props.assetStore.classifiers}\n          onChange={this.handleClassifierUpdated}\n          entry={this.state.classifier}\n        />\n\n        {renderIf(!!this.state.classifier.value)(\n          <CaseList\n            data-spec=\"cases\"\n            cases={this.state.cases}\n            onCasesUpdated={this.handleCasesUpdated}\n            operators={intentOperatorList}\n            classifier={this.state.classifier.value}\n          />\n        )}\n\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { SCHEMES, Scheme, getType } from 'config/typeConfigs';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { SchemeRouterFormState } from './SchemeRouterForm';\nimport { getSwitchRouter, resolveRoutes, createRenderNode } from '../helpers';\nimport { RenderNode } from 'store/flowContext';\nimport { SwitchRouter, FlowNode, RouterTypes, Case } from 'flowTypes';\nimport { CaseProps } from '../caselist/CaseList';\nimport { createUUID } from 'utils';\nimport { Operators, Types } from 'config/interfaces';\nimport { SCHEMES_OPERAND } from 'components/nodeeditor/constants';\n\nexport const getChannelTypeOptions = (): SelectOption[] => {\n  // get our scheme list as select options, ignore hidden schemes\n  return SCHEMES.filter((scheme: Scheme) => !scheme.excludeFromSplit).map((scheme: Scheme) => {\n    return { value: scheme.scheme, name: scheme.name };\n  });\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): SchemeRouterFormState => {\n  const state: SchemeRouterFormState = {\n    schemes: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\n    state.schemes.value = extractSchemes(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SchemeRouterFormState\n): RenderNode => {\n  let orginalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\n    orginalCases = getSwitchRouter(settings.originalNode.node).cases;\n  }\n\n  const currentCases = schemesToCases(state.schemes.value, orginalCases);\n\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: SCHEMES_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_scheme,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractSchemes = (node: FlowNode): SelectOption[] => {\n  let schemes: SelectOption[] = [];\n  const router = getSwitchRouter(node);\n  const selectOptions = getChannelTypeOptions();\n\n  if (router) {\n    schemes = (router as SwitchRouter).cases\n      .map(kase => {\n        if (kase.arguments) {\n          const [scheme] = kase.arguments;\n          return selectOptions.find((option: SelectOption) => option.value === scheme);\n        }\n        return null;\n      })\n      .filter((option: SelectOption) => option !== null);\n  }\n  return schemes;\n};\n\nexport const schemesToCases = (\n  schemes: SelectOption[] = [],\n  originalCases: Case[]\n): CaseProps[] => {\n  return schemes.map(({ value, name }: SelectOption) => {\n    // try to use the same case uuids for consistency\n    const originalCase = originalCases.find((kase: Case) => kase.arguments[0] === value);\n    const uuid = originalCase ? originalCase.uuid : createUUID();\n    return {\n      uuid: createUUID(),\n      kase: {\n        uuid,\n        type: Operators.has_only_phrase,\n        arguments: [value],\n        category_uuid: ''\n      },\n      categoryName: name,\n      valid: true\n    };\n  });\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FormState, mergeForm, StringEntry, SelectOptionArrayEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { getChannelTypeOptions, nodeToState, stateToNode } from './helpers';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\nexport interface SchemeRouterFormState extends FormState {\n  schemes: SelectOptionArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class SchemeRouterForm extends React.Component<\n  RouterFormProps,\n  SchemeRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleSchemesChanged(schemes: SelectOption[]): void {\n    this.handleUpdate({ schemes });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { schemes?: SelectOption[]; resultName?: string }): boolean {\n    const updates: Partial<SchemeRouterFormState> = {};\n\n    if (keys.hasOwnProperty('schemes')) {\n      updates.schemes = validate(i18n.t('forms.split_by_scheme', 'Channel types'), keys.schemes, [\n        Required\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    this.handleSchemesChanged(this.state.schemes.value);\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          {i18n.t(\n            'forms.split_by_scheme_summary',\n            \"The contact's URN is the address they used to reach you such as their phone number or a Facebook ID. Select which URN types to split by below.\"\n          )}\n        </p>\n        <SelectElement\n          key=\"channel_type_select\"\n          name={i18n.t('forms.channel_type', 'Channel Type')}\n          placeholder={i18n.t(\n            'forms.split_by_channel_placeholder',\n            'Select the channels to split by'\n          )}\n          entry={this.state.schemes}\n          onChange={this.handleSchemesChanged}\n          options={getChannelTypeOptions()}\n          multi={true}\n          hideError={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { OpenTicket } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, FormEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\nimport { TicketRouterFormState } from 'components/flow/routers/ticket/TicketRouterForm';\n\nexport const getOriginalAction = (settings: NodeEditorSettings): OpenTicket => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.open_ticket) {\n    return action as OpenTicket;\n  }\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  initialTicketer: any\n): TicketRouterFormState => {\n  let ticketer: FormEntry = initialTicketer\n    ? { value: { uuid: initialTicketer.id, name: initialTicketer.name } }\n    : { value: null };\n  let subject = { value: '@run.flow.name' };\n  let body = { value: '@results' };\n  let resultName = { value: 'Result' };\n  let assignee: FormEntry = { value: null };\n  let topic: FormEntry = { value: null };\n\n  if (getType(settings.originalNode) === Types.split_by_ticket) {\n    const action = getOriginalAction(settings) as OpenTicket;\n    ticketer = { value: action.ticketer };\n    subject = { value: action.subject };\n    body = { value: action.body };\n    topic = { value: action.topic };\n    assignee = { value: action.assignee };\n    resultName = { value: action.result_name };\n  }\n\n  const state: TicketRouterFormState = {\n    assignee,\n    topic,\n    ticketer,\n    subject,\n    body,\n    resultName,\n    valid: true\n  };\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: TicketRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: OpenTicket = {\n    uuid,\n    type: Types.open_ticket,\n    ticketer: {\n      uuid: state.ticketer.value.uuid,\n      name: state.ticketer.value.name\n    },\n    body: state.body.value,\n    topic: state.topic.value,\n    assignee: state.assignee.value,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from './helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, FormEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { Asset } from 'store/flowContext';\nimport styles from './TicketRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TembaSelect from 'temba/TembaSelect';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Topic, User } from 'flowTypes';\n\nexport interface TicketRouterFormState extends FormState {\n  assignee: FormEntry;\n  topic: FormEntry;\n  ticketer: FormEntry;\n  subject: StringEntry;\n  body: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class TicketRouterForm extends React.Component<\n  RouterFormProps,\n  TicketRouterFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    // if we only have one ticketer, initialize our form with it\n    const ticketers = Object.values(this.props.assetStore.ticketers.items);\n    const ticketer = ticketers.length === 1 ? ticketers[0] : null;\n    this.state = nodeToState(this.props.nodeSettings, ticketer);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n  private handleUpdate(\n    keys: {\n      assignee?: User;\n      topic?: Topic;\n      ticketer?: Asset;\n      subject?: string;\n      body?: string;\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<TicketRouterFormState> = {};\n\n    if (keys.hasOwnProperty('assignee')) {\n      updates.assignee = validate(i18n.t('forms.assignee', 'Assignee'), keys.assignee, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('topic')) {\n      updates.topic = validate(i18n.t('forms.topic', 'Topic'), keys.topic, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('ticketer')) {\n      updates.ticketer = validate(i18n.t('forms.ticketer', 'Ticketer'), keys.ticketer, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject, []);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleTicketerUpdate(selected: Asset[]): void {\n    this.handleUpdate({ ticketer: selected[0] });\n  }\n\n  private handleAssigneeUpdate(assignee: User): void {\n    this.handleUpdate({ assignee });\n  }\n\n  private handleTopicUpdate(topic: Topic): void {\n    this.handleUpdate({ topic });\n  }\n\n  private handleSubjectUpdate(subject: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ subject }, submitting);\n  }\n\n  private handleBodyUpdate(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleResultNameUpdate(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    // validate all fields in case they haven't interacted\n    const valid = this.handleUpdate(\n      {\n        ticketer: this.state.ticketer.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value,\n        resultName: this.state.resultName.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    // if we only have one ticketer or we have issues, show the ticket chooser\n    const showTicketers =\n      Object.keys(this.props.assetStore.ticketers.items).length > 1 || this.props.issues.length > 0;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        {showTicketers ? (\n          <div>\n            <p>\n              <span>Open ticket via... </span>\n            </p>\n            <AssetSelector\n              key=\"select_ticketer\"\n              name={i18n.t('forms.ticketer', 'Ticketer')}\n              placeholder=\"Select the ticketing service to use\"\n              assets={this.props.assetStore.ticketers}\n              onChange={this.handleTicketerUpdate}\n              entry={this.state.ticketer}\n            />\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div style={{ display: 'flex', width: '100%', marginTop: '0.5em' }}>\n          <div style={{ flexBasis: 250 }}>\n            <TembaSelect\n              key=\"select_topic\"\n              name={i18n.t('forms.topic', 'Topic')}\n              endpoint={this.context.config.endpoints.topics}\n              onChange={this.handleTopicUpdate}\n              value={this.state.topic.value}\n              createPrefix={i18n.t('forms.topic_prefix', 'Create Topic: ')}\n              searchable={true}\n            />\n          </div>\n\n          <div style={{ flexGrow: 1, marginLeft: '0.5em' }}>\n            <TembaSelect\n              key=\"select_assignee\"\n              name={i18n.t('forms.assignee', 'Assignee')}\n              placeholder=\"Assign to (Optional)\"\n              valueKey=\"email\"\n              endpoint={this.context.config.endpoints.users}\n              onChange={this.handleAssigneeUpdate}\n              clearable={true}\n              value={this.state.assignee.value}\n              getName={(user: User) => {\n                if (!user.first_name && !user.last_name) {\n                  return user.email || '';\n                }\n                return `${user.first_name} ${user.last_name}`;\n              }}\n            />\n          </div>\n        </div>\n        <div className={styles.body}>\n          <TextInputElement\n            name={i18n.t('forms.body', 'Body')}\n            placeholder={i18n.t('forms.enter_a_body', 'Enter a body')}\n            entry={this.state.body}\n            onChange={this.handleBodyUpdate}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n\n        {createResultNameInput(this.state.resultName, this.handleResultNameUpdate)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import * as React from 'react';\nimport { OpenTicket } from 'flowTypes';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst OpenTicketComp: React.SFC<OpenTicket> = (\n  { ticketer, subject, topic },\n  context: any\n): JSX.Element => {\n  const showTicketer = ticketer.name.indexOf(context.config.brand) === -1;\n  return (\n    <div>\n      <div>{subject ? subject : topic ? topic.name : null}</div>\n      {showTicketer ? (\n        <div style={{ fontSize: '80%' }}>\n          Using <span style={{ fontWeight: 400 }}>{ticketer.name}</span>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nOpenTicketComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default OpenTicketComp;\n","import AddLabelsComp from 'components/flow/actions/addlabels/AddLabels';\nimport AddLabelsForm from 'components/flow/actions/addlabels/AddLabelsForm';\nimport AddURNComp from 'components/flow/actions/addurn/AddURN';\nimport AddURNForm from 'components/flow/actions/addurn/AddURNForm';\nimport CallResthookComp from 'components/flow/actions/callresthook/CallResthook';\nimport CallWebhookComp from 'components/flow/actions/callwebhook/CallWebhook';\nimport AddGroupsForm from 'components/flow/actions/changegroups/addgroups/AddGroupsForm';\nimport ChangeGroupsComp from 'components/flow/actions/changegroups/ChangeGroups';\nimport RemoveGroupsForm from 'components/flow/actions/changegroups/removegroups/RemoveGroupsForm';\nimport KeyLocalizationForm from 'components/flow/actions/localization/KeyLocalizationForm';\nimport MsgLocalizationForm from 'components/flow/actions/localization/MsgLocalizationForm';\nimport MissingComp from 'components/flow/actions/missing/Missing';\nimport PlayAudioComp from 'components/flow/actions/playaudio/PlayAudio';\nimport PlayAudioForm from 'components/flow/actions/playaudio/PlayAudioForm';\nimport SayMsgComp from 'components/flow/actions/saymsg/SayMsg';\nimport SayMsgForm from 'components/flow/actions/saymsg/SayMsgForm';\nimport SendBroadcastComp from 'components/flow/actions/sendbroadcast/SendBroadcast';\nimport SendBroadcastForm from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport SendEmailComp from 'components/flow/actions/sendemail/SendEmail';\nimport SendEmailForm from 'components/flow/actions/sendemail/SendEmailForm';\nimport SendMsgComp from 'components/flow/actions/sendmsg/SendMsg';\nimport SendMsgForm from 'components/flow/actions/sendmsg/SendMsgForm';\nimport SetRunResultComp from 'components/flow/actions/setrunresult/SetRunResult';\nimport SetRunResultForm from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport StartFlowComp from 'components/flow/actions/startflow/StartFlow';\nimport StartSessionComp from 'components/flow/actions/startsession/StartSession';\nimport StartSessionForm from 'components/flow/actions/startsession/StartSessionForm';\nimport TransferAirtimeComp from 'components/flow/actions/transferairtime/TransferAirtime';\nimport UpdateContactComp from 'components/flow/actions/updatecontact/UpdateContact';\nimport UpdateContactForm from 'components/flow/actions/updatecontact/UpdateContactForm';\nimport AirtimeRouterForm from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport DialRouterForm from 'components/flow/routers/dial/DialRouterForm';\nimport DigitsRouterForm from 'components/flow/routers/digits/DigitsRouterForm';\nimport ExpressionRouterForm from 'components/flow/routers/expression/ExpressionRouterForm';\nimport FieldRouterForm from 'components/flow/routers/field/FieldRouterForm';\nimport GroupsRouterForm from 'components/flow/routers/groups/GroupsRouterForm';\nimport RouterLocalizationForm from 'components/flow/routers/localization/RouterLocalizationForm';\nimport MenuRouterForm from 'components/flow/routers/menu/MenuRouterForm';\nimport RandomRouterForm from 'components/flow/routers/random/RandomRouterForm';\nimport ResponseRouterForm from 'components/flow/routers/response/ResponseRouterForm';\nimport ResthookRouterForm from 'components/flow/routers/resthook/ResthookRouterForm';\nimport ResultRouterForm from 'components/flow/routers/result/ResultRouterForm';\nimport SubflowRouterForm from 'components/flow/routers/subflow/SubflowRouterForm';\nimport WaitRouterForm from 'components/flow/routers/wait/WaitRouterForm';\nimport WebhookRouterForm from 'components/flow/routers/webhook/WebhookRouterForm';\nimport {\n  FeatureFilter,\n  FlowTypes,\n  Type,\n  Types,\n  VISIBILITY_HIDDEN,\n  VISIBILITY_ONLINE,\n  VISIBILITY_SURVEYOR,\n  VISIBILITY_VOICE,\n  VISIBILITY_INTERACTIVE,\n  VISIBILITY_MESSAGING_INTERACTIVE\n} from 'config/interfaces';\nimport { HintTypes, RouterTypes, FlowEditorConfig, SendMsg } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport CallClassifierComp from 'components/flow/actions/callclassifier/CallClassifier';\nimport ClassifyRouterForm from 'components/flow/routers/classify/ClassifyRouterForm';\nimport i18n from 'config/i18n';\nimport SchemeRouterForm from 'components/flow/routers/scheme/SchemeRouterForm';\nimport TicketRouterForm from 'components/flow/routers/ticket/TicketRouterForm';\nimport OpenTicketComp from 'components/flow/actions/openticket/OpenTicket';\n\nconst dedupeTypeConfigs = (typeConfigs: Type[]) => {\n  const map: any = {};\n  return typeConfigs.filter(config => {\n    if (config.type === 'missing') {\n      return false;\n    }\n    const { name: key } = config;\n    return map[key] ? false : (map[key] = true);\n  });\n};\n\nexport interface TypeMap {\n  [propName: string]: Type;\n}\n\nexport type GetTypeConfig = (type: string) => Type;\n\nexport interface Scheme {\n  scheme: string;\n  name: string;\n  path: string;\n  excludeFromSplit?: boolean;\n}\n\nexport const SCHEMES: Scheme[] = [\n  {\n    scheme: 'tel',\n    name: i18n.t('schemes.phone.name', 'SMS'),\n    path: i18n.t('schemes.phone.path', 'Phone Number')\n  },\n  {\n    scheme: 'whatsapp',\n    name: i18n.t('schemes.whatsapp.name', 'WhatsApp'),\n    path: i18n.t('schemes.whatsapp.path', 'WhatsApp Number')\n  },\n  {\n    scheme: 'facebook',\n    name: i18n.t('schemes.facebook.path', 'Facebook'),\n    path: i18n.t('schemes.facebook.path', 'Facebook ID')\n  },\n  {\n    scheme: 'twitterid',\n    name: i18n.t('schemes.twitterid.name', 'Twitter'),\n    path: i18n.t('schemes.twitterid.path', 'Twitter ID')\n  },\n  {\n    scheme: 'telegram',\n    name: i18n.t('schemes.telegram.name', 'Telegram'),\n    path: i18n.t('schemes.telegram.path', 'Telegram ID')\n  },\n  {\n    scheme: 'viber',\n    name: i18n.t('schemes.viber.name', 'Viber'),\n    path: i18n.t('schemes.viber.path', 'Viber ID')\n  },\n  {\n    scheme: 'line',\n    name: i18n.t('schemes.line.name', 'Line'),\n    path: i18n.t('schemes.line.path', 'Line ID')\n  },\n  {\n    scheme: 'wechat',\n    name: i18n.t('schemes.wechat.name', 'Wechat'),\n    path: i18n.t('schemes.wechat.path', 'Wechat ID')\n  },\n  {\n    scheme: 'fcm',\n    name: i18n.t('schemes.firebase.name', 'Firebase'),\n    path: i18n.t('schemes.firebase.path', 'Firebase ID')\n  },\n  {\n    scheme: 'jiochat',\n    name: i18n.t('schemes.jiojach.name', 'Jiochat'),\n    path: i18n.t('schemes.jiochat.path', 'Jiochat ID')\n  },\n  {\n    scheme: 'freshchat',\n    name: i18n.t('schemes.freschat.name', 'Freshchat'),\n    path: i18n.t('schemes.freshchat.path', 'Freshchat ID')\n  },\n  {\n    scheme: 'mailto',\n    name: i18n.t('schemes.email.name', 'Email'),\n    path: i18n.t('schemes.email.path', 'Email Address'),\n    excludeFromSplit: true\n  },\n  {\n    scheme: 'twitter',\n    name: i18n.t('schemes.twitter.name', 'Twitter'),\n    path: i18n.t('schemes.twitter.path', 'Twitter Handle'),\n    excludeFromSplit: true\n  },\n  {\n    scheme: 'ext',\n    name: i18n.t('schemes.external.name', 'External'),\n    path: i18n.t('schemes.external.path', 'External ID')\n  }\n];\n\nexport const typeConfigList: Type[] = [\n  {\n    type: Types.missing,\n    name: 'Missing',\n    description: ' ** Unsupported ** ',\n    component: MissingComp,\n    visibility: VISIBILITY_HIDDEN\n  },\n  {\n    type: Types.say_msg,\n    name: i18n.t('actions.play_message.name', 'Play Message'),\n    description: i18n.t('actions.play_message.description', 'Play a message'),\n    form: SayMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'audio_url'],\n    component: SayMsgComp,\n    visibility: VISIBILITY_VOICE\n  },\n\n  {\n    type: Types.wait_for_menu,\n    name: i18n.t('actions.wait_for_menu.name', 'Wait for Menu Selection'),\n    description: i18n.t('actions.wait_for_menu.description', 'Wait for menu selection'),\n    form: MenuRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VISIBILITY_VOICE\n  },\n  {\n    type: Types.wait_for_digits,\n    name: i18n.t('actions.wait_for_digits.name', 'Wait for Digits'),\n    description: i18n.t('actions.wait_for_digits.description', 'Wait for multiple digits'),\n    form: DigitsRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    visibility: VISIBILITY_VOICE\n  },\n\n  {\n    type: Types.wait_for_audio,\n    name: i18n.t('actions.wait_for_audio.name', 'Wait for Audio'),\n    description: i18n.t('actions.wait_for_audio.description', 'Wait for an audio recording'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: [FlowTypes.MESSAGING_OFFLINE, FlowTypes.VOICE]\n  },\n\n  {\n    type: Types.wait_for_dial,\n    name: i18n.t('actions.wait_for_dial.name', 'Wait for Forwarded Call'),\n    description: i18n.t(\n      'actions.wait_for_dial.description',\n      'Wait for forwarded call to someone else'\n    ),\n    form: DialRouterForm,\n    visibility: VISIBILITY_VOICE\n  },\n\n  {\n    type: Types.send_msg,\n    name: i18n.t('actions.send_msg.name', 'Send Message'),\n    description: i18n.t('actions.send_msg.description', 'Send the contact a message'),\n    form: SendMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'quick_replies', 'templating.variables'],\n    component: SendMsgComp,\n    massageForDisplay: (action: SendMsg) => {\n      // quick replies are optional in the definition, make sure we have\n      // at least an empty array so the localization has a proper cue\n      action.quick_replies = action.quick_replies || [];\n    }\n  },\n  {\n    type: Types.wait_for_response,\n    name: i18n.t('actions.wait_for_response.name', 'Wait for Response'),\n    description: i18n.t('actions.wait_for_response.description', 'Wait for the contact to respond'),\n    form: ResponseRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['categories', 'cases'],\n    aliases: [RouterTypes.switch],\n    visibility: VISIBILITY_MESSAGING_INTERACTIVE\n  },\n\n  {\n    type: Types.send_broadcast,\n    name: i18n.t('actions.send_broadcast.name', 'Send Broadcast'),\n    description: i18n.t('actions.send_broadcast.description', 'Send somebody else a message'),\n    form: SendBroadcastForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['text'],\n    component: SendBroadcastComp\n  },\n  {\n    type: Types.add_input_labels,\n    name: i18n.t('actions.add_input.name', 'Add Labels'),\n    description: i18n.t('actions.add_input.description', 'Label the incoming message'),\n    form: AddLabelsForm,\n    component: AddLabelsComp,\n    visibility: VISIBILITY_INTERACTIVE\n  },\n  {\n    type: Types.add_contact_urn,\n    name: i18n.t('actions.add_contact_urn.name', 'Add URN'),\n    description: i18n.t('actions.add_contact_urn.description', 'Add a URN for the contact'),\n    form: AddURNForm,\n    component: AddURNComp\n  },\n  {\n    type: Types.add_contact_groups,\n    name: i18n.t('actions.add_contact_groups.name', 'Add to Group'),\n    description: i18n.t('actions.add_contact_groups.description', 'Add the contact to a group'),\n    form: AddGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.remove_contact_groups,\n    name: i18n.t('actions.remove_contact_groups.name', 'Remove from Group'),\n    description: i18n.t(\n      'actions.remove_contact_groups.description',\n      'Remove the contact from a group'\n    ),\n    form: RemoveGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.set_contact_field,\n    aliases: [\n      Types.set_contact_name,\n      Types.set_contact_language,\n      Types.set_contact_channel,\n      Types.set_contact_status\n    ],\n    name: i18n.t('actions.set_contact_field.name', 'Update Contact'),\n    description: i18n.t('actions.set_contact_field.description', 'Update the contact'),\n    form: UpdateContactForm,\n    component: UpdateContactComp\n  },\n  {\n    type: Types.send_email,\n    name: i18n.t('actions.send_email.name', 'Send Email'),\n    description: i18n.t('actions.send_email.description', 'Send an email'),\n    form: SendEmailForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['subject', 'body'],\n    component: SendEmailComp,\n    visibility: VISIBILITY_ONLINE\n  },\n  {\n    type: Types.set_run_result,\n    name: i18n.t('actions.set_run_result.name', 'Save Flow Result'),\n    description: i18n.t('actions.set_run_result.description', 'Save a result for this flow'),\n    form: SetRunResultForm,\n    component: SetRunResultComp\n  },\n\n  {\n    type: Types.play_audio,\n    name: i18n.t('actions.play_audio.name', 'Play Recording'),\n    description: i18n.t('actions.play_audio.description', 'Play a contact recording'),\n    form: PlayAudioForm,\n    component: PlayAudioComp,\n    visibility: VISIBILITY_VOICE\n  },\n\n  {\n    type: Types.call_webhook,\n    name: i18n.t('actions.call_webhook.name', 'Call Webhook'),\n    description: i18n.t('actions.call_webhook.description', 'Call a webhook'),\n    form: WebhookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallWebhookComp,\n    aliases: [Types.split_by_webhook],\n    visibility: VISIBILITY_ONLINE\n  },\n  {\n    type: Types.call_resthook,\n    name: i18n.t('actions.call_resthook.name', 'Call Zapier'),\n    description: i18n.t('actions.call_resthook.description', 'Call Zapier'),\n    form: ResthookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallResthookComp,\n    aliases: [Types.split_by_resthook],\n    filter: FeatureFilter.HAS_RESTHOOK,\n    visibility: VISIBILITY_ONLINE\n  },\n  {\n    type: Types.enter_flow,\n    name: i18n.t('actions.enter_flow.name', 'Enter a Flow'),\n    description: i18n.t('actions.enter_flow.description', 'Enter another flow'),\n    form: SubflowRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: StartFlowComp,\n    aliases: [Types.split_by_subflow]\n  },\n  {\n    type: Types.start_session,\n    name: i18n.t('actions.start_session.name', 'Start Somebody Else'),\n    description: i18n.t('actions.start_session.description', 'Start somebody else in a flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: StartSessionForm,\n    component: StartSessionComp,\n    visibility: VISIBILITY_ONLINE\n  },\n  {\n    type: Types.open_ticket,\n    name: i18n.t('actions.open_ticket.name', 'Open Ticket'),\n    description: i18n.t('actions.open_ticket.description', 'Open a ticket with a human agent'),\n    form: TicketRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: OpenTicketComp,\n    aliases: [Types.split_by_ticket],\n    visibility: VISIBILITY_ONLINE,\n    filter: FeatureFilter.HAS_TICKETER\n  },\n  {\n    type: Types.transfer_airtime,\n    name: i18n.t('actions.transfer_airtime.name', 'Send Airtime'),\n    description: i18n.t('actions.transfer_airtime.description', 'Send the contact airtime'),\n    form: AirtimeRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: TransferAirtimeComp,\n    aliases: [Types.split_by_airtime],\n    visibility: VISIBILITY_ONLINE,\n    filter: FeatureFilter.HAS_AIRTIME\n  },\n\n  /** Routers */\n\n  {\n    type: Types.wait_for_image,\n    name: i18n.t('actions.wait_for_image.name', 'Wait for Image'),\n    description: i18n.t('actions.wait_for_image.description', 'Wait for an image'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VISIBILITY_SURVEYOR\n  },\n  {\n    type: Types.wait_for_video,\n    name: i18n.t('actions.wait_for_video.name', 'Wait for Video'),\n    description: i18n.t('actions.wait_for_video.description', 'Wait for a video'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VISIBILITY_SURVEYOR\n  },\n  {\n    type: Types.wait_for_location,\n    name: i18n.t('actions.wait_for_location.name', 'Wait for Location'),\n    description: i18n.t(\n      'actions.wait_for_location.description',\n      'Wait for location GPS coordinates'\n    ),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VISIBILITY_SURVEYOR\n  },\n  {\n    type: Types.split_by_intent,\n    name: i18n.t('actions.split_by_intent.name', 'Split by Intent'),\n    description: i18n.t('actions.split_by_intent.description', 'Split by intent'),\n    form: ClassifyRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallClassifierComp,\n    aliases: [Types.call_classifier],\n    visibility: VISIBILITY_ONLINE,\n    filter: FeatureFilter.HAS_CLASSIFIER\n  },\n  {\n    type: Types.split_by_expression,\n    name: i18n.t('actions.split_by_expression.name', 'Split by Expression'),\n    description: i18n.t('actions.split_by_expression.description', 'Split by a custom expression'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ExpressionRouterForm\n  },\n  {\n    type: Types.split_by_contact_field,\n    name: i18n.t('actions.split_by_contact_field.name', 'Split by Contact Field'),\n    description: i18n.t('actions.split_by_contact_field.description', 'Split by a contact field'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: FieldRouterForm\n  },\n  {\n    type: Types.split_by_run_result,\n    aliases: [Types.split_by_run_result_delimited],\n    name: i18n.t('actions.split_by_run_result.name', 'Split by Flow Result'),\n    description: i18n.t('actions.split_by_run_result.description', 'Split by a result in the flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ResultRouterForm\n  },\n  {\n    type: Types.split_by_random,\n    name: i18n.t('actions.split_by_random.name', 'Split Randomly'),\n    description: i18n.t('actions.split_by_random.description', 'Split by random chance'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: RandomRouterForm\n  },\n  {\n    type: Types.split_by_groups,\n    name: i18n.t('actions.split_by_groups.name', 'Split by Group Membership'),\n    description: i18n.t('actions.split_by_groups.description', 'Split by group membership'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: GroupsRouterForm\n  },\n  {\n    type: Types.split_by_scheme,\n    name: i18n.t('actions.split_by_scheme.name', 'Split by URN Type'),\n    description: i18n.t('actions.split_by_scheme.description', 'Split by URN type'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: SchemeRouterForm\n  }\n  // {type: 'random', name: 'Random Split', description: 'Split them up randomly', form: RandomRouterForm}\n];\n\nexport const configsToDisplay = dedupeTypeConfigs(typeConfigList);\n\nexport const typeConfigMap: TypeMap = typeConfigList.reduce((map: TypeMap, typeConfig: Type) => {\n  map[typeConfig.type] = typeConfig;\n  if (typeConfig.aliases) {\n    typeConfig.aliases.forEach((alias: string) => (map[alias] = typeConfig));\n  }\n  return map;\n}, {});\n\n/**\n * Shortcut for constant lookup of type config in type configs map\n * @param {string} type - The type of the type config to return, e.g. 'send_msg'\n * @returns {Object} - The type config found at typeConfigs[type] or -1\n */\nexport const getTypeConfig = (type: Types | RouterTypes): Type => {\n  let config = typeConfigMap[type];\n\n  if (!config) {\n    config = typeConfigMap.missing;\n  }\n  return config;\n};\n\nexport const getType = (renderNode: RenderNode): any => {\n  const wait = renderNode.node.router && renderNode.node.router.wait;\n  if (wait && wait.hint) {\n    switch (wait.hint.type) {\n      case HintTypes.digits:\n        if (wait.hint.count === 1) {\n          return Types.wait_for_menu;\n        }\n        return Types.wait_for_digits;\n      case HintTypes.audio:\n        return Types.wait_for_audio;\n      case HintTypes.image:\n        return Types.wait_for_image;\n      case HintTypes.location:\n        return Types.wait_for_location;\n      case HintTypes.video:\n        return Types.wait_for_video;\n    }\n  }\n\n  // if we are splitting by field, but don't know the name, force it into split by expression\n  if (renderNode.ui.type === Types.split_by_contact_field && !renderNode.ui.config.operand.name) {\n    return Types.split_by_expression;\n  }\n\n  return renderNode.ui.type;\n};\n\nexport const hasFeature = (config: FlowEditorConfig, filter: FeatureFilter) => {\n  return !!(config.filters || []).find((name: string) => name === filter);\n};\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport {\n  CHANNEL_PROPERTY,\n  LANGUAGE_PROPERTY,\n  NAME_PROPERTY,\n  STATUS_PROPERTY\n} from 'components/flow/props';\nimport { Types, ContactStatus } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  Field,\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactField,\n  SetContactLanguage,\n  SetContactName,\n  SetContactStatus\n} from 'flowTypes';\nimport { Asset, AssetMap, AssetStore, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport {\n  FormState,\n  NodeEditorSettings,\n  StringEntry,\n  SelectOptionEntry,\n  FormEntry\n} from 'store/nodeEditor';\nimport {\n  CONTACT_STATUS_OPTIONS,\n  CONTACT_STATUS_ACTIVE\n} from 'components/flow/actions/updatecontact/UpdateContactForm';\n\nexport interface UpdateContactFormState extends FormState {\n  type: Types;\n  name: StringEntry;\n  channel: FormEntry;\n  language: FormEntry;\n  status: SelectOptionEntry;\n  field: FormEntry;\n  fieldValue: StringEntry;\n}\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): UpdateContactFormState => {\n  const state: UpdateContactFormState = {\n    type: Types.set_contact_name,\n    valid: false,\n    name: { value: '' },\n    channel: { value: null },\n    language: { value: null },\n    status: { value: CONTACT_STATUS_ACTIVE },\n    field: { value: NAME_PROPERTY },\n    fieldValue: { value: '' }\n  };\n\n  if (settings.originalAction) {\n    const originalType = settings.originalAction.type;\n    // these have aliases, so compare the config we resolve to\n    if (getTypeConfig(originalType) === getTypeConfig(Types.set_contact_field)) {\n      state.type = originalType;\n\n      switch (originalType) {\n        case Types.set_contact_field:\n          const fieldAction = settings.originalAction as SetContactField;\n          state.field = { value: { key: fieldAction.field.key, label: fieldAction.field.name } };\n          state.fieldValue = { value: fieldAction.value };\n          state.valid = true;\n          return state;\n        case Types.set_contact_channel:\n          const channelAction = settings.originalAction as SetContactChannel;\n          state.field = { value: CHANNEL_PROPERTY };\n          state.channel = {\n            value: channelAction.channel ? channelAction.channel : REMOVE_VALUE_ASSET\n          };\n          state.valid = true;\n          return state;\n        case Types.set_contact_language:\n          const languageAction = settings.originalAction as SetContactLanguage;\n          state.field = { value: LANGUAGE_PROPERTY };\n          state.valid = true;\n          state.language = {\n            value: languageAction.language\n              ? {\n                  iso: languageAction.language,\n                  name: getLanguageForCode(languageAction.language, assetStore.languages.items)\n                }\n              : REMOVE_VALUE_ASSET\n          };\n          return state;\n        case Types.set_contact_status:\n          const statusAction = settings.originalAction as SetContactStatus;\n          state.field = { value: STATUS_PROPERTY };\n          state.valid = true;\n          state.status = {\n            value: CONTACT_STATUS_OPTIONS.find(o => o.value === statusAction.status)\n          };\n          return state;\n        case Types.set_contact_name:\n          const nameAction = settings.originalAction as SetContactName;\n          state.valid = true;\n          state.name = {\n            value: nameAction.name\n          };\n          return state;\n      }\n    }\n  }\n\n  // default is updating name\n  return state;\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: UpdateContactFormState\n): SetContactAttribute => {\n  /* istanbul ignore else */\n  const field = state.field.value;\n  if (state.type === Types.set_contact_field) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_field),\n      type: state.type,\n      field: { name: field.label, key: field.key },\n      value: state.fieldValue.value\n    };\n  } else if (state.type === Types.set_contact_channel) {\n    if (state.channel.value.type === REMOVE_VALUE_ASSET.type) {\n      return {\n        uuid: getActionUUID(settings, Types.set_contact_channel),\n        type: state.type\n      } as any;\n    }\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_channel),\n      type: state.type,\n      channel: {\n        uuid: state.channel.value.uuid,\n        name: state.channel.value.name\n      }\n    };\n  } else if (state.type === Types.set_contact_language) {\n    if (state.language.value.type === REMOVE_VALUE_ASSET.type) {\n      return {\n        uuid: getActionUUID(settings, Types.set_contact_language),\n        type: state.type\n      } as any;\n    }\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_language),\n      type: state.type,\n      language: state.language.value.iso\n    };\n  } else if (state.type === Types.set_contact_status) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_status),\n      type: state.type,\n      status: state.status.value.value as ContactStatus\n    };\n  } else if (state.type === Types.set_contact_name) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_name),\n      type: state.type,\n      name: state.name.value\n    };\n  }\n};\n\nexport const sortFieldsAndProperties = (a: any, b: any): number => {\n  const aType = a.type || '';\n  const bType = b.type || '';\n\n  const aName = a.name || a.label || '';\n  const bName = b.name || b.label || '';\n\n  // Name always goes first\n  /* istanbul ignore else */\n  if (a.id === NAME_PROPERTY.id && b.id !== NAME_PROPERTY.id) {\n    return -1;\n  } else if (b.id === NAME_PROPERTY.id && a.id !== NAME_PROPERTY.id) {\n    return 1;\n  }\n\n  if (aType === bType) {\n    return aName.localeCompare(bName);\n  }\n\n  if (aType === AssetType.Scheme) {\n    return 1;\n  }\n\n  if (bType === AssetType.Scheme) {\n    return -1;\n  }\n\n  // go with alpha-sort for everthing else\n  else if (aType !== bType) {\n    if (aType === AssetType.ContactProperty) {\n      return -1;\n    }\n\n    if (bType === AssetType.ContactProperty) {\n      return 1;\n    }\n  }\n  // non-name non-fields go last\n  return aName.localeCompare(bName);\n};\n\nexport const fieldToAsset = (field: Field = { key: '', name: '' }): Asset => ({\n  id: field.key,\n  name: field.name,\n  type: AssetType.Field\n});\n\nexport const assetToField = (asset: Asset): Field => ({\n  key: asset.id,\n  name: asset.name\n});\n\nexport const assetToChannel = (asset: Asset): any => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return {};\n  }\n\n  return {\n    uuid: asset.id,\n    name: asset.name\n  };\n};\n\nexport const getLanguageForCode = (code: string, languages: AssetMap) => {\n  let lang = code;\n  if (languages && lang in languages) {\n    lang = languages[lang].name;\n  }\n  return lang;\n};\n\nexport const getName = (asset: any): string => {\n  return asset.label || asset.name;\n};\n","import { FlowPosition, Contact } from 'flowTypes';\nimport ActionTypes, { UpdateEditorState } from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode } from 'store/flowContext';\n\n// tslint:disable:no-shadowed-variable\nexport interface DragSelection {\n  startX?: number;\n  startY?: number;\n  currentX?: number;\n  currentY?: number;\n}\n\nexport interface DebugState {\n  showUUIDs: boolean;\n}\n\nexport interface CanvasPositions {\n  [uuid: string]: FlowPosition;\n}\n\nexport interface Activity {\n  nodes: { [uuid: string]: number };\n  segments: { [exitToNodeKey: string]: number };\n  recentContacts?: { [key: string]: RecentContact[] };\n  is_starting?: boolean;\n}\n\nexport interface RecentContact {\n  contact: Contact;\n  operand: string;\n  time: string;\n}\n\nexport interface Warning {\n  name: string;\n  type: string;\n}\n\nexport type Warnings = { [uuid: string]: Warning };\n\nexport interface EditorState {\n  currentRevision: number | null;\n  simulating: boolean;\n  language: Asset | null;\n  translating: boolean;\n  fetchingFlow: boolean;\n  ghostNode: RenderNode | null;\n  dragActive: boolean;\n  dragStartTime: number;\n  dragDownPosition: FlowPosition | null;\n  dragNodeUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  debug?: DebugState | null;\n\n  // which poptab is popped\n  popped: string;\n\n  warnings: Warnings;\n\n  modalMessage?: ModalMessage;\n  saving?: boolean;\n\n  // the currently shown activity, can be\n  // simulation or live\n  activity: Activity;\n\n  // the current live activity\n  liveActivity: Activity;\n\n  // interval in millis we should refresh activity\n  activityInterval: number;\n\n  // is our page visible or tabbed away\n  visible: boolean;\n\n  scrollToNode: string;\n  scrollToAction: string;\n}\n\nexport interface ModalMessage {\n  title: string;\n  body: string;\n}\n\nexport const EMPTY_DRAG_STATE: any = {\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null\n};\n\n// Initial state\nexport const initialState: EditorState = {\n  currentRevision: null,\n  simulating: false,\n  translating: false,\n  language: null,\n  fetchingFlow: false,\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null,\n  ghostNode: null,\n  debug: null,\n  warnings: {},\n\n  popped: null,\n\n  activity: { segments: {}, nodes: {} },\n  liveActivity: { segments: {}, nodes: {} },\n  activityInterval: 5000,\n  visible: true,\n\n  scrollToNode: null,\n  scrollToAction: null\n};\n\n// Action Creator\nexport const updateEditorState = (editorState: EditorState): UpdateEditorState => ({\n  type: Constants.UPDATE_EDITOR_STATE,\n  payload: {\n    editorState\n  }\n});\n\n/* Reducer */\nexport const editorState = (editorState: EditorState = initialState, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_EDITOR_STATE:\n      return action.payload!.editorState;\n    default:\n      return editorState;\n  }\n};\n\n// export our reducer\nexport default editorState;\n","import { determineTypeConfig } from 'components/flow/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\nimport { FlowTypes, Type, Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { createAssetStore, getFlowDetails, saveRevision } from 'external';\nimport isEqual from 'fast-deep-equal';\nimport {\n  Action,\n  AnyAction,\n  Category,\n  Dimensions,\n  Endpoints,\n  Exit,\n  FlowDefinition,\n  FlowNode,\n  SendMsg,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  FlowDetails\n} from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { Dispatch } from 'redux';\nimport { CanvasPositions, EditorState, EMPTY_DRAG_STATE, updateEditorState } from 'store/editor';\nimport {\n  Asset,\n  AssetStore,\n  DEFAULT_LANGUAGE,\n  RenderNode,\n  RenderNodeMap,\n  updateAssets,\n  updateBaseLanguage,\n  updateContactFields,\n  updateDefinition,\n  updateNodes,\n  updateMetadata,\n  updateIssues\n} from 'store/flowContext';\nimport {\n  createEmptyNode,\n  fetchFlowActivity,\n  getActionIndex,\n  getCurrentDefinition,\n  getFlowComponents,\n  getLocalizations,\n  getNode,\n  guessNodeType,\n  mergeAssetMaps,\n  createFlowIssueMap\n} from 'store/helpers';\nimport * as mutators from 'store/mutators';\nimport {\n  NodeEditorSettings,\n  updateNodeEditorSettings,\n  updateTypeConfig,\n  updateUserAddingAction\n} from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport { createUUID, hasString, NODE_SPACING, timeEnd, timeStart, ACTIVITY_INTERVAL } from 'utils';\nimport { AxiosError } from 'axios';\nimport i18n from 'config/i18n';\nimport { TembaStore } from 'temba-components';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport type DispatchWithState = Dispatch<AppState>;\n\nexport type GetState = () => AppState;\n\nexport type Thunk<T> = (dispatch: Dispatch<AppState>, getState?: GetState) => T;\n\nexport type AsyncThunk = Thunk<Promise<void>>;\n\nexport type OnAddToNode = (node: FlowNode) => Thunk<void>;\n\nexport type HandleTypeConfigChange = (typeConfig: Type) => Thunk<void>;\n\nexport type UpdateTranslationFilters = (translationFilters: {\n  categories: boolean;\n  rules: boolean;\n}) => Thunk<void>;\n\nexport type OnOpenNodeEditor = (settings: NodeEditorSettings) => Thunk<void>;\n\nexport type OnUpdateCanvasPositions = (positions: CanvasPositions) => Thunk<RenderNodeMap>;\n\nexport type OnRemoveNodes = (nodeUUIDs: string[]) => Thunk<RenderNodeMap>;\n\nexport type AddAsset = (assetType: string, asset: Asset) => Thunk<void>;\n\nexport type RemoveNode = (nodeToRemove: FlowNode) => Thunk<RenderNodeMap>;\n\nexport type UpdateDimensions = (uuid: string, dimensions: Dimensions) => Thunk<void>;\n\nexport type FetchFlow = (\n  endpoints: Endpoints,\n  uuid: string,\n  forceSave: boolean\n) => Thunk<Promise<void>>;\n\nexport type LoadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => Thunk<void>;\n\nexport type CreateNewRevision = () => Thunk<void>;\n\nexport type NoParamsAC = () => Thunk<void>;\n\nexport type UpdateConnection = (source: string, target: string) => Thunk<RenderNodeMap>;\n\nexport type OnConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => Thunk<void>;\n\nexport type OnUpdateLocalizations = (\n  language: string,\n  changes: LocalizationUpdates\n) => Thunk<FlowDefinition>;\n\nexport type UpdateSticky = (stickyUUID: string, sticky: StickyNote) => Thunk<void>;\n\nexport type OnUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => Thunk<RenderNodeMap>;\n\nexport type ActionAC = (nodeUUID: string, action: AnyAction) => Thunk<RenderNodeMap>;\n\nexport type DisconnectExit = (nodeUUID: string, exitUUID: string) => Thunk<RenderNodeMap>;\n\nexport type HandleLanguageChange = (language: Asset) => Thunk<void>;\n\nexport type MergeEditorState = (state: Partial<EditorState>) => Thunk<EditorState>;\n\nexport interface ReplaceAction {\n  nodeUUID: string;\n  actionUUID: string;\n}\n\nexport type OnUpdateRouter = (node: RenderNode) => Thunk<RenderNodeMap>;\n\nexport interface Connection {\n  previousConnection: Connection;\n}\n\nexport interface ConnectionEvent {\n  connection: Connection;\n  source: Element;\n  target: Element;\n  sourceId: string;\n  targetId: string;\n  suspendedElementId: string;\n  endpoints: any[];\n}\n\nexport interface ErrorMessage {\n  status: string;\n  description: string;\n}\n\nexport type LocalizationUpdates = Array<{ uuid: string; translations?: any }>;\nconst QUIET_SAVE = 1000;\nconst SAVE_ALERT_MILLIS = 1000 * 60;\n\nlet markDirty: (quiet?: number) => void = () => {};\nlet lastDirtyAttemptTimeout: any = null;\nlet postingRevision = false;\n\nlet lastDirtyMillis: number = 0;\nlet lastSuccessfulMillis: number = 0;\n\nconst NETWORK_ERROR = i18n.t(\n  'errors.network',\n  'Hmm, we ran into a problem trying to save your changes. It could just be that your internet connection is not working well at the moment. Please wait a minute or so and try again.'\n);\n\nconst SERVER_ERROR = i18n.t(\n  'errors.server',\n  'Hmm, we ran into a problem trying to save your changes. If this problem persists, take note of the change you are trying to make and contact support.'\n);\n\nexport const createSaveMonitor = (dispatch: DispatchWithState) => {\n  window.setInterval(() => {\n    if (\n      lastSuccessfulMillis < lastDirtyMillis &&\n      new Date().getTime() - lastDirtyMillis > SAVE_ALERT_MILLIS\n    ) {\n      dispatch(\n        mergeEditorState({\n          modalMessage: {\n            title: \"Uh oh, we couldn't save your changes\",\n            body: NETWORK_ERROR\n          },\n          saving: false\n        })\n      );\n    }\n  }, 5000);\n};\n\nexport const createDirty = (\n  revisionsEndpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState\n) => (quiet: number = QUIET_SAVE) => {\n  lastDirtyMillis = new Date().getTime();\n\n  if (lastDirtyAttemptTimeout) {\n    window.clearTimeout(lastDirtyAttemptTimeout);\n  }\n\n  const {\n    flowContext: { definition, nodes, assetStore, issues },\n    editorState: { currentRevision }\n  } = getState();\n\n  dispatch(mergeEditorState({ saving: true }));\n\n  // make sure we have the most current revision number we know about\n  const newDefinition = getCurrentDefinition(definition, nodes, true);\n  newDefinition.revision = currentRevision;\n\n  if (postingRevision) {\n    lastDirtyAttemptTimeout = window.setTimeout(() => {\n      markDirty();\n    }, QUIET_SAVE);\n    return;\n  }\n\n  lastDirtyAttemptTimeout = window.setTimeout(() => {\n    postingRevision = true;\n    saveRevision(revisionsEndpoint, newDefinition).then(\n      (result: SaveResult) => {\n        const revision = result.revision;\n        definition.revision = revision.revision;\n        dispatch(updateDefinition(definition));\n        dispatch(updateIssues(createFlowIssueMap(issues, result.issues)));\n\n        if (result.metadata) {\n          dispatch(updateMetadata(result.metadata));\n        }\n\n        const updatedAssets = mutators.addRevision(assetStore, revision);\n        dispatch(updateAssets(updatedAssets));\n        dispatch(\n          mergeEditorState({\n            currentRevision: revision.revision,\n            saving: false,\n            activityInterval: ACTIVITY_INTERVAL\n          })\n        );\n\n        lastSuccessfulMillis = new Date().getTime();\n        postingRevision = false;\n      },\n      (error: AxiosError) => {\n        let body = NETWORK_ERROR;\n\n        if (error.response && error.response.status === 500) {\n          body = SERVER_ERROR;\n        }\n\n        if (error.response && error.response.data && error.response.data.description) {\n          body = error.response.data.description;\n        }\n\n        dispatch(\n          mergeEditorState({\n            modalMessage: {\n              title: \"Uh oh, we couldn't save your changes\",\n              body\n            },\n            saving: false\n          })\n        );\n        postingRevision = false;\n      }\n    );\n  }, quiet);\n};\n\nexport const mergeEditorState = (changes: Partial<EditorState>) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): EditorState => {\n  const { editorState } = getState();\n  const updated = mutate(editorState, { $merge: changes });\n  dispatch(updateEditorState(updated));\n  return updated;\n};\n\nexport const createNewRevision = () => (dispatch: DispatchWithState, getState: GetState): void => {\n  // mark us dirty with no quiet period\n  markDirty(0);\n};\n\nexport const loadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  // first see if we need our asset store initialized\n\n  const definition = details.definition;\n\n  const {\n    flowContext: { issues },\n    editorState: { fetchingFlow }\n  } = getState();\n\n  if (!fetchingFlow) {\n    // mark us as underway\n    dispatch(mergeEditorState({ fetchingFlow: true }));\n  }\n\n  // while we don't officially support doing it, lets make a best effort to load\n  // definitions that don't have _ui information (created outside of the editor)\n  definition.localization = definition.localization || {};\n  definition._ui = definition._ui || { nodes: {}, languages: [], stickies: {} };\n\n  // make sure we have a ui entry for each node\n  let currentTop = 0;\n  for (const node of definition.nodes) {\n    if (!definition._ui.nodes[node.uuid]) {\n      definition._ui.nodes[node.uuid] = {\n        position: { left: 0, top: currentTop },\n        type: guessNodeType(node)\n      };\n      currentTop += 150;\n    }\n  }\n\n  // add assets we found in our flow to our asset store\n  const components = getFlowComponents(definition);\n  mergeAssetMaps(assetStore.fields.items, components.fields);\n  mergeAssetMaps(assetStore.groups.items, components.groups);\n  mergeAssetMaps(assetStore.labels.items, components.labels);\n  mergeAssetMaps(assetStore.results.items, components.results);\n\n  // initialize our language\n  let language: Asset;\n  if (definition.language) {\n    language = assetStore.languages.items[definition.language];\n  }\n\n  if (!language) {\n    language = DEFAULT_LANGUAGE;\n    dispatch(mergeEditorState({ language: DEFAULT_LANGUAGE }));\n    mergeAssetMaps(assetStore.languages.items, { base: DEFAULT_LANGUAGE });\n  }\n\n  if (details.issues) {\n    dispatch(updateIssues(createFlowIssueMap(issues, details.issues)));\n  } else {\n    dispatch(updateIssues({}));\n  }\n\n  dispatch(updateBaseLanguage(language));\n  dispatch(updateMetadata(details.metadata));\n\n  // store our flow definition without any nodes\n  dispatch(updateDefinition(mutators.pruneDefinition(definition)));\n  dispatch(updateNodes(components.renderNodeMap));\n\n  // finally update our assets, and mark us as fetched\n  dispatch(updateAssets(assetStore));\n  dispatch(mergeEditorState({ language, fetchingFlow: false }));\n\n  const store: TembaStore = document.querySelector('temba-store');\n  if (store) {\n    store.setKeyedAssets('results', Object.keys(assetStore.results.items));\n  }\n};\n\n/**\n * Fetches a flow. Fetches all assets as well if the haven't been initialized yet\n * @param endpoints where our assets live\n * @param uuid the uuid for the flow to fetch\n */\nexport const fetchFlow = (endpoints: Endpoints, uuid: string, forceSave = false) => async (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  // mark us as underway\n  dispatch(mergeEditorState({ fetchingFlow: true }));\n\n  // first see if we need our asset store initialized\n  let {\n    flowContext: { assetStore }\n  } = getState();\n\n  if (!Object.keys(assetStore).length) {\n    assetStore = await createAssetStore(endpoints);\n  }\n\n  fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  (window as any).triggerActivityUpdate = () => {\n    fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  };\n\n  getFlowDetails(assetStore.revisions)\n    .then((response: any) => {\n      // backwards compatibitly for during deployment\n      const details: FlowDetails = response.definition\n        ? response\n        : { definition: response as FlowDefinition, metadata: { issues: [] } };\n\n      dispatch(loadFlowDefinition(details, assetStore));\n      dispatch(\n        mergeEditorState({\n          currentRevision: details.definition.revision\n        })\n      );\n\n      markDirty = createDirty(assetStore.revisions.endpoint, dispatch, getState);\n      if (forceSave) {\n        markDirty(0);\n      }\n\n      createSaveMonitor(dispatch);\n    })\n    .catch(error => {\n      // not much we can do without our flow definition\n      // log it to the console, this should really only happen if\n      // misconfigured or the endpoint is unavailable\n      console.error(error);\n    });\n};\n\nexport const addAsset: AddAsset = (assetType: string, asset: Asset) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { assetStore }\n  } = getState();\n\n  const updated = mutate(assetStore, {\n    [assetType]: { items: { $merge: { [asset.id]: asset } } }\n  });\n\n  // update our temba store if we have one\n  const store: TembaStore = document.querySelector('temba-store');\n  if (store) {\n    store.setKeyedAssets(assetType, Object.keys(updated[assetType]));\n  }\n\n  dispatch(updateAssets(updated));\n};\n\nexport const handleLanguageChange: HandleLanguageChange = language => (dispatch, getState) => {\n  const {\n    flowContext: { baseLanguage },\n    editorState: { translating, language: currentLanguage }\n  } = getState();\n\n  // determine translating state\n  if (!isEqual(language, baseLanguage)) {\n    if (!translating) {\n      dispatch(mergeEditorState({ translating: true }));\n    }\n  } else {\n    dispatch(mergeEditorState({ translating: false }));\n  }\n\n  // update language\n  if (!isEqual(language, currentLanguage)) {\n    dispatch(mergeEditorState({ language }));\n  }\n};\n\nexport const onUpdateLocalizations = (language: string, changes: LocalizationUpdates) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): FlowDefinition => {\n  const {\n    flowContext: { definition }\n  } = getState();\n  const updated = mutators.updateLocalization(definition, language, changes);\n  dispatch(updateDefinition(updated));\n\n  markDirty();\n  return updated;\n};\n\nexport const updateExitDestination = (nodeUUID: string, exitUUID: string, destination: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.updateConnection(nodes, nodeUUID, exitUUID, destination);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const disconnectExit = (nodeUUID: string, exitUUID: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => dispatch(updateExitDestination(nodeUUID, exitUUID, null));\n\nexport const updateConnection = (source: string, target: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const [nodeUUID, exitUUID] = source.split(':');\n  return dispatch(updateExitDestination(nodeUUID, exitUUID, target));\n};\n\nexport const removeNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  // Remove result name if node has one\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // update asset store to remove results that no longer exist\n  if (node.router && node.router.result_name) {\n    const updatedAssets = mutators.removeResultFromStore(node.router.result_name, assetStore, {\n      nodeUUID: node.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  const updated = mutators.removeNode(nodes, node.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const removeAction = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n  const renderNode = nodes[nodeUUID];\n\n  // update asset store to remove results that no longer exist\n  if (action.type === Types.set_run_result) {\n    const resultAction = action as SetRunResult;\n    const updatedAssets = mutators.removeResultFromStore(resultAction.name, assetStore, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // If it's our last action, then nuke the node\n  if (renderNode.node.actions.length === 1) {\n    const updated = dispatch(removeNode(renderNode.node));\n    markDirty();\n    return updated;\n  } else {\n    // Otherwise, just remove that action\n    const updated = mutators.removeAction(nodes, nodeUUID, action.uuid);\n    dispatch(updateNodes(updated));\n    markDirty();\n    return updated;\n  }\n};\n\nexport const moveActionUp = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.moveActionUp(nodes, nodeUUID, action.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\n/**\n * Splices a router into a list of actions creating up to three nodes where there\n * was once one node.\n * @param nodeUUID the node to replace\n * @param node the new node being added (shares the previous node uuid)\n * @param type the type of the new router\n * @param previousAction the previous action that is being replaced with our router\n * @returns a list of RenderNodes that were created\n */\nexport const spliceInRouter = (\n  newRouterNode: RenderNode,\n  previousAction: { nodeUUID: string; actionUUID: string }\n) => (dispatch: DispatchWithState, getState: GetState): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const previousNode = nodes[previousAction.nodeUUID];\n\n  // remove our old node, we'll make new ones\n  let updatedNodes = nodes;\n  updatedNodes = mutators.removeNode(updatedNodes, previousNode.node.uuid, false);\n\n  newRouterNode.node = mutators.uniquifyNode(newRouterNode.node);\n\n  const actionIdx = getActionIndex(previousNode.node, previousAction.actionUUID);\n\n  // we need to splice a wait node where our previousAction was\n  const topActions: Action[] =\n    actionIdx > 0 ? [...previousNode.node.actions.slice(0, actionIdx)] : [];\n  const bottomActions: Action[] = previousNode.node.actions.slice(\n    actionIdx + 1,\n    previousNode.node.actions.length\n  );\n\n  // tslint:disable-next-line:prefer-const\n  let { left, top } = previousNode.ui.position;\n\n  let topNode: RenderNode;\n  let bottomNode: RenderNode;\n\n  // add our top node if we have one\n  if (topActions.length > 0) {\n    topNode = {\n      node: {\n        uuid: createUUID(),\n        actions: topActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: null\n          }\n        ]\n      },\n      ui: { position: { left, top } },\n      inboundConnections: { ...previousNode.inboundConnections }\n    };\n\n    updatedNodes = mutators.mergeNode(updatedNodes, topNode);\n    top += NODE_SPACING;\n\n    // update our routerNode for the presence of a top node\n    newRouterNode.inboundConnections = {\n      [topNode.node.exits[0].uuid]: topNode.node.uuid\n    };\n    newRouterNode.ui.position.top += NODE_SPACING;\n  } else {\n    newRouterNode.inboundConnections = { ...previousNode.inboundConnections };\n  }\n\n  // now add our routerNode\n  updatedNodes = mutators.mergeNode(updatedNodes, newRouterNode);\n\n  // add our bottom\n  if (bottomActions.length > 0) {\n    bottomNode = {\n      node: {\n        uuid: createUUID(),\n        actions: bottomActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: previousNode.node.exits[0].destination_uuid\n          }\n        ]\n      },\n      ui: {\n        position: { left, top }\n      },\n      inboundConnections: {\n        [newRouterNode.node.exits[0].uuid]: newRouterNode.node.uuid\n      }\n    };\n    updatedNodes = mutators.mergeNode(updatedNodes, bottomNode);\n  } else {\n    // if we don't have a bottom, route our routerNode to the previous destination\n    updatedNodes = mutators.updateConnection(\n      updatedNodes,\n      newRouterNode.node.uuid,\n      newRouterNode.node.exits[0].uuid,\n      previousNode.node.exits[0].destination_uuid\n    );\n  }\n\n  dispatch(updateNodes(updatedNodes));\n\n  markDirty();\n  return updatedNodes;\n};\n\nexport const handleTypeConfigChange = (typeConfig: Type) => (dispatch: DispatchWithState) => {\n  // TODO: Generate suggested result name if user is changing to a `wait_for_response` router.\n  dispatch(updateTypeConfig(typeConfig));\n};\n\nexport const resetNodeEditingState = () => (dispatch: DispatchWithState, getState: GetState) => {\n  dispatch(mergeEditorState({ ghostNode: null }));\n  dispatch(updateNodeEditorSettings(null));\n};\n\nexport const onUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => (dispatch: DispatchWithState, getState: GetState) => {\n  timeStart('onUpdateAction');\n\n  const {\n    nodeEditor: { userAddingAction, settings },\n    flowContext: { nodes, contactFields, assetStore }\n  } = getState();\n\n  if (settings == null || settings.originalNode == null) {\n    throw new Error('Need originalNode in settings to update an action');\n  }\n  const { originalNode, originalAction } = settings;\n\n  let updatedAssets = assetStore;\n\n  // remove our result reference\n  if (originalAction && originalAction.type === Types.set_run_result) {\n    const { name: resultName } = originalAction as SetRunResult;\n    updatedAssets = mutators.removeResultFromStore(resultName, updatedAssets, {\n      nodeUUID: originalNode.node.uuid,\n      actionUUID: action.uuid\n    });\n  }\n\n  let updatedNodes = nodes;\n  const creatingNewNode = !!(originalNode !== null && originalNode.ghost);\n\n  let nodeUUID: string = null;\n\n  if (creatingNewNode) {\n    const newNode: RenderNode = {\n      node: {\n        uuid: createUUID(),\n        actions: [action],\n        exits: [{ uuid: createUUID(), destination_uuid: null }]\n      },\n      ui: { position: originalNode.ui.position, type: Types.execute_actions },\n      inboundConnections: originalNode.inboundConnections\n    };\n    updatedNodes = mutators.mergeNode(nodes, newNode);\n\n    nodeUUID = newNode.node.uuid;\n  } else {\n    nodeUUID = originalNode.node.uuid;\n\n    if (userAddingAction) {\n      updatedNodes = mutators.addAction(nodes, originalNode.node.uuid, action);\n    } else if (originalNode.node.hasOwnProperty('router')) {\n      updatedNodes = mutators.spliceInAction(nodes, originalNode.node.uuid, action);\n    } else {\n      updatedNodes = mutators.updateAction(nodes, originalNode.node.uuid, action, originalAction);\n    }\n  }\n\n  dispatch(updateNodes(updatedNodes));\n  dispatch(updateUserAddingAction(false));\n\n  // Add result to store.\n  if (action.type === Types.set_run_result) {\n    const { name: resultName } = action as SetRunResult;\n    updatedAssets = mutators.addResultToStore(resultName, updatedAssets, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // Add contact field to our store.\n  if (action.type === Types.set_contact_field) {\n    const { field } = action as SetContactField;\n    dispatch(updateContactFields({ ...contactFields, [field.key]: field.name }));\n  }\n\n  markDirty(0);\n\n  timeEnd('onUpdateAction');\n\n  if (onUpdated) {\n    onUpdated(dispatch, getState);\n  }\n  return updatedNodes;\n};\n\n/**\n * Opens the NodeEditor in the state for adding to a provided node\n * @param node the node to add to\n */\nexport const onAddToNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n\n  // TODO: remove the need for this once we all have formHelpers\n  const newAction: SendMsg = {\n    uuid: createUUID(),\n    type: Types.send_msg,\n    text: ''\n  };\n\n  dispatch(\n    updateNodeEditorSettings({\n      originalNode: getNode(nodes, node.uuid),\n      originalAction: newAction,\n      showAdvanced: false\n    })\n  );\n\n  markDirty();\n  dispatch(updateUserAddingAction(true));\n  dispatch(handleTypeConfigChange(getTypeConfig(Types.send_msg)));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const onRemoveNodes = (uuids: string[]) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedNodes = nodes;\n  let updatedDefinition = definition;\n  let didNodes = false;\n  let didDef = false;\n\n  uuids.forEach((uuid: string) => {\n    if (uuid in updatedNodes) {\n      updatedNodes = mutators.removeNode(updatedNodes, uuid, true);\n      didNodes = true;\n    } else if (uuid in updatedDefinition._ui.stickies) {\n      updatedDefinition = mutators.updateStickyNote(updatedDefinition, uuid, null);\n      didDef = true;\n    }\n  });\n\n  if (didNodes) {\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (didDef) {\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (didDef || didNodes) {\n    markDirty();\n  }\n\n  return nodes;\n};\n\nexport const onUpdateCanvasPositions = (positions: CanvasPositions) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedDefinition = definition;\n  let updatedNodes = nodes;\n\n  let updatedNodePosition = false;\n  let updatedStickyPosition = false;\n\n  for (const uuid in positions) {\n    if (updatedNodes[uuid]) {\n      updatedNodes = mutators.updatePosition(updatedNodes, uuid, positions[uuid]);\n      updatedNodePosition = true;\n    } else if (updatedDefinition._ui.stickies[uuid]) {\n      updatedDefinition = mutators.updateStickyNotePosition(\n        updatedDefinition,\n        uuid,\n        positions[uuid]\n      );\n      updatedStickyPosition = true;\n    }\n  }\n\n  let updated = false;\n\n  if (updatedNodePosition) {\n    updated = true;\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (updatedStickyPosition) {\n    updated = true;\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (updated) {\n    markDirty();\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Called when a connection begins to be dragged from an endpoint both\n * when a new connection is desired or when an existing one is being moved.\n * @param event\n */\nexport const onConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // We finished dragging a ghost node, create the spec for our new ghost component\n  const [fromNodeUUID, fromExitUUID] = event.sourceId.split(':');\n\n  const fromNode = nodes[fromNodeUUID];\n\n  const names = Object.keys(assetStore.results ? assetStore.results.items : {});\n\n  let resultCount = names.length + 1;\n  let key = `result_${resultCount}`;\n\n  while (hasString(names, key)) {\n    resultCount++;\n    key = `result_${resultCount}`;\n  }\n\n  // set our ghost node\n  const ghostNode = createEmptyNode(fromNode, fromExitUUID, resultCount, flowType);\n  ghostNode.inboundConnections = { [fromExitUUID]: fromNodeUUID };\n  dispatch(mergeEditorState({ ghostNode }));\n};\n\nexport const updateSticky = (uuid: string, sticky: StickyNote) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  const updated = mutators.updateStickyNote(definition, uuid, sticky);\n  dispatch(updateDefinition(updated));\n  markDirty();\n};\n\nexport const onUpdateRouter = (renderNode: RenderNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore },\n    nodeEditor: {\n      settings: { originalNode, originalAction }\n    }\n  } = getState();\n\n  let updated = nodes;\n  if (originalNode) {\n    const previousPosition = originalNode.ui.position;\n    renderNode.ui.position = previousPosition;\n    renderNode.inboundConnections = originalNode.inboundConnections;\n  }\n\n  if (originalNode.ghost) {\n    renderNode.inboundConnections = originalNode.inboundConnections;\n    const { left, top } = originalNode.ui.position;\n    renderNode.ui.position = { left, top };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n  }\n\n  // update our results\n  const resultName = getResultName(renderNode.node);\n  if (resultName) {\n    let updatedAssets = assetStore;\n\n    // remove our original result name\n    const originalResultName = getResultName(originalNode.node);\n    if (originalResultName) {\n      updatedAssets = mutators.removeResultFromStore(originalResultName, updatedAssets, {\n        nodeUUID: originalNode.node.uuid\n      });\n    }\n\n    updatedAssets = mutators.addFlowResult(updatedAssets, renderNode.node);\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  if (\n    originalNode &&\n    originalAction &&\n    !originalNode.ghost &&\n    !getSwitchRouter(originalNode.node)\n  ) {\n    const actionToSplice = originalNode.node.actions.find(\n      (action: Action) => action.uuid === originalAction.uuid\n    );\n\n    if (actionToSplice) {\n      // if we are splicing using the original top\n      renderNode.ui.position.top = originalNode.ui.position.top;\n\n      return dispatch(\n        spliceInRouter(renderNode, {\n          nodeUUID: originalNode.node.uuid,\n          actionUUID: actionToSplice.uuid\n        })\n      );\n    }\n\n    // didn't recognize that action, let's add a new router node\n    // if we are appendeng in, see if we need to route through\n    const switchRouter = getSwitchRouter(renderNode.node);\n    if (switchRouter) {\n      const defaultCategory = switchRouter.categories.find(\n        (cat: Category) => cat.uuid === switchRouter.default_category_uuid\n      );\n      const exitToUpdate = renderNode.node.exits.find(\n        (exit: Exit) => exit.uuid === defaultCategory.exit_uuid\n      );\n\n      exitToUpdate.destination_uuid = originalNode.node.exits[0].destination_uuid;\n    }\n\n    renderNode.inboundConnections = {\n      [originalNode.node.exits[0].uuid]: originalNode.node.uuid\n    };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n    renderNode.ui.position.top += NODE_SPACING;\n    updated = mutators.mergeNode(updated, renderNode);\n  } else {\n    updated = mutators.mergeNode(updated, renderNode);\n  }\n\n  dispatch(updateNodes(updated));\n\n  markDirty(0);\n  return updated;\n};\n\nexport const onOpenNodeEditor = (settings: NodeEditorSettings) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { language, translating }\n  } = getState();\n\n  const { originalNode: renderNode } = settings;\n  let { originalAction: action } = settings;\n\n  const node = renderNode.node;\n\n  // stuff our localization objects in our settings\n  settings.localizations = [];\n  if (translating) {\n    let actionToTranslate = action;\n\n    // TODO: this is a hack, would be nice to find how to make that area respond differently\n    // if they clicked just below the actions, treat it as the last action\n    if (!actionToTranslate && node.actions.length > 0) {\n      actionToTranslate = node.actions[node.actions.length - 1];\n      if (\n        actionToTranslate.type !== Types.send_msg &&\n        actionToTranslate.type !== Types.send_broadcast\n      ) {\n        return;\n      }\n    }\n\n    const translations = localization[language.id];\n    settings.localizations.push(\n      ...getLocalizations(node, actionToTranslate, language, translations)\n    );\n  }\n\n  // Account for hybrids or clicking on the empty exit table\n  if (!action && node.actions.length > 0) {\n    action = node.actions[node.actions.length - 1];\n  }\n\n  const typeConfig = determineTypeConfig(settings);\n  dispatch(handleTypeConfigChange(typeConfig));\n  dispatch(updateNodeEditorSettings(settings));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const updateTranslationFilters = (translationFilters: {\n  categories: boolean;\n  rules: boolean;\n}) => (dispatch: DispatchWithState, getState: GetState): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  definition._ui.translation_filters = translationFilters;\n  dispatch(updateDefinition(definition));\n  markDirty();\n};\n","import { fieldToAsset } from 'components/flow/actions/updatecontact/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { getActivity } from 'external';\nimport {\n  AddLabels,\n  AnyAction,\n  Category,\n  ChangeGroups,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  HintTypes,\n  RouterTypes,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  SwitchRouter,\n  UIMetaData,\n  Wait,\n  WaitTypes,\n  SendMsg,\n  FlowIssue,\n  FlowIssueType\n} from 'flowTypes';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Activity, EditorState, Warnings } from 'store/editor';\nimport {\n  Asset,\n  AssetMap,\n  AssetType,\n  RenderNode,\n  RenderNodeMap,\n  FlowIssueMap\n} from 'store/flowContext';\nimport { addResult } from 'store/mutators';\nimport { DispatchWithState, GetState, mergeEditorState } from 'store/thunks';\nimport { createUUID, snakify } from 'utils';\n\nexport interface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\ninterface Reflow {\n  uuid: string;\n  bounds: Bounds;\n}\n\n// track if we have an active timeout before issuing a new one\nlet activityTimeout: any = null;\n\nexport const getNodeWithAction = (nodes: RenderNodeMap, actionUUID: string): RenderNode => {\n  for (const nodeUUID of Object.keys(nodes)) {\n    const renderNode = nodes[nodeUUID];\n    for (const action of renderNode.node.actions) {\n      if (action.uuid === actionUUID) {\n        return renderNode;\n      }\n    }\n  }\n};\n\nexport const getNode = (nodes: RenderNodeMap, nodeUUID: string) => {\n  const node = nodes[nodeUUID];\n  if (!node) {\n    throw new Error('Cannot find node ' + nodeUUID);\n  }\n  return node;\n};\n\nexport const getExitIndex = (node: FlowNode, exitUUID: string) => {\n  for (const [exitIdx, exit] of node.exits.entries()) {\n    if (exit.uuid === exitUUID) {\n      return exitIdx;\n    }\n  }\n  throw new Error('Cannot find exit ' + exitUUID);\n};\n\nexport const getActionIndex = (node: FlowNode, actionUUID: string) => {\n  for (const [actionIdx, action] of node.actions.entries()) {\n    if (action.uuid === actionUUID) {\n      return actionIdx;\n    }\n  }\n  throw new Error('Cannot find action ' + actionUUID);\n};\n\nexport const getSuggestedResultName = (count: number) => `Result ${count}`;\n\nexport const hasRouter = (renderNode: RenderNode): boolean => {\n  return !!(renderNode && renderNode.node.router);\n};\n\nexport const hasWait = (renderNode: RenderNode): boolean => {\n  return !!(renderNode.node.router && renderNode.node.router.wait);\n};\n\nexport const hasLoopSplit = (renderNode: RenderNode): boolean => {\n  const type = getType(renderNode);\n\n  return (\n    hasWait(renderNode) || type === Types.split_by_expression || type === Types.split_by_subflow\n  );\n};\n\n/**\n * Follows every path from fromNodeUUID to toNodeUUID and throws\n * an error if we hit ourselves again without hitting a wait\n * @param nodes the entire node map\n * @param fromNodeUUID which node we are originating from\n * @param toNodeUUID where we are trying to go\n * @param path the path we have tried so far\n */\nexport const detectLoops = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  toNodeUUID: string,\n  path: string[] = []\n): void => {\n  const fromNode = nodes[fromNodeUUID];\n  const toNode = nodes[toNodeUUID];\n\n  if (fromNodeUUID === toNodeUUID) {\n    throw new Error(\"Flow loop detected, can't point to self\");\n  }\n\n  if (hasLoopSplit(toNode) || hasLoopSplit(fromNode)) {\n    return;\n  }\n\n  if (path.length === 0) {\n    path.push(fromNodeUUID);\n    for (const exit of toNode.node.exits) {\n      if (exit.destination_uuid) {\n        detectLoops(nodes, toNode.node.uuid, exit.destination_uuid, path);\n      }\n    }\n    return;\n  }\n\n  // we're back where we started\n  if (toNodeUUID === path[0]) {\n    throw new Error('Flow loop detected, route through a wait first');\n  }\n\n  // add us to the path\n  path.push(toNodeUUID);\n\n  // follow each of our exits\n  for (const exit of toNode.node.exits) {\n    if (exit.destination_uuid) {\n      detectLoops(nodes, toNodeUUID, exit.destination_uuid, path);\n    }\n  }\n\n  return;\n};\n\nexport const getLocalizations = (\n  node: FlowNode,\n  action: AnyAction,\n  language: Asset,\n  translations?: { [uuid: string]: any }\n): LocalizedObject[] => {\n  const localizations: LocalizedObject[] = [];\n\n  // Account for localized cases\n  if (node.router && node.router.type === RouterTypes.switch) {\n    const router = node.router as SwitchRouter;\n\n    router.cases.forEach(kase =>\n      localizations.push(Localization.translate(kase, language, translations))\n    );\n  }\n\n  if (action) {\n    localizations.push(Localization.translate(action, language, translations));\n    // check for localized template variables]\n    if (action.type === Types.send_msg) {\n      const sendMsgAction = action as SendMsg;\n      if (sendMsgAction.templating) {\n        localizations.push(\n          Localization.translate(sendMsgAction.templating, language, translations)\n        );\n      }\n    }\n  }\n\n  // Account for localized categories\n  if (node.router) {\n    node.router.categories.forEach(category => {\n      if (category.name) {\n        localizations.push(Localization.translate(category, language, translations));\n      }\n    });\n  }\n\n  return localizations;\n};\n\nexport const getUniqueDestinations = (node: FlowNode): string[] => {\n  const destinations: any = {};\n  for (const exit of node.exits) {\n    if (exit.destination_uuid) {\n      destinations[exit.destination_uuid] = true;\n    }\n  }\n  return Object.keys(destinations);\n};\n\nexport const getCurrentDefinition = (\n  definition: FlowDefinition,\n  nodeMap: RenderNodeMap,\n  includeUI: boolean = true\n): FlowDefinition => {\n  const renderNodes = getOrderedNodes(nodeMap);\n  const nodes: FlowNode[] = [];\n  renderNodes.forEach((renderNode: RenderNode) => nodes.push(renderNode.node));\n\n  // tslint:disable-next-line:variable-name\n  const uiNodes: any = {};\n  for (const uuid of Object.keys(nodeMap)) {\n    uiNodes[uuid] = nodeMap[uuid].ui;\n  }\n\n  const result = {\n    ...definition,\n    nodes\n  };\n\n  if (includeUI) {\n    // tslint:disable-next-line:variable-name\n    result._ui = {\n      nodes: uiNodes,\n      stickies: definition._ui.stickies,\n      languages: definition._ui.languages,\n      translation_filters: definition._ui.translation_filters\n    } as UIMetaData;\n  }\n\n  return result;\n};\n\nexport const newPosition = (left: number, top: number): FlowPosition => {\n  return { left, top };\n};\n\nexport const addPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  const width = a.right - a.left;\n  const height = a.bottom - a.top;\n\n  // we allow dragging out of bounds\n  const top = a.top + b.top;\n  const left = a.left + b.left;\n\n  if (width && height) {\n    return {\n      left,\n      top,\n      right: left + width,\n      bottom: top + height\n    };\n  }\n\n  return { top, left };\n};\n\nexport const subtractPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  return { left: a.left - b.left, top: a.top - b.top };\n};\n\nexport const getOrderedNodes = (nodes: RenderNodeMap): RenderNode[] => {\n  const sorted: RenderNode[] = [];\n  Object.keys(nodes).forEach((nodeUUID: string) => {\n    sorted.push(nodes[nodeUUID]);\n  });\n  return sorted.sort((a: RenderNode, b: RenderNode) => {\n    let diff = a.ui.position.top - b.ui.position.top;\n    if (diff === 0) {\n      diff = a.ui.position.left - b.ui.position.left;\n    }\n    return diff;\n  });\n};\n\nexport const getCollisions = (\n  nodes: RenderNodeMap,\n  stickies: { [key: string]: StickyNote },\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(nodes)) {\n    const node = nodes[nodeUUID];\n    if (collides(box, node.ui.position)) {\n      collisions[node.node.uuid] = node.ui.position;\n    }\n  }\n\n  for (const uuid in stickies) {\n    const sticky = stickies[uuid];\n    if (collides(box, sticky.position)) {\n      collisions[uuid] = sticky.position;\n    }\n  }\n\n  return collisions;\n};\n\nexport const collides = (a: FlowPosition, b: FlowPosition) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  return !(b.left > a.right || b.right < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nexport const getCollision = (nodes: RenderNodeMap): RenderNode[] => {\n  const sortedNodes = getOrderedNodes(nodes);\n\n  for (let i = 0; i < sortedNodes.length; i++) {\n    const current = sortedNodes[i];\n    if (i + 1 < sortedNodes.length) {\n      for (let j = i + 1; j < sortedNodes.length; j++) {\n        const other = sortedNodes[j];\n        if (collides(current.ui.position, other.ui.position)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedNodes.length) {\n            const cascaded = sortedNodes[j + 1];\n            if (collides(other.ui.position, cascaded.ui.position)) {\n              return [current, other, cascaded];\n            }\n          }\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nexport const createEmptyNode = (\n  fromNode: RenderNode,\n  fromExitUUID: string,\n  suggestedResultNameCount: number,\n  flowType: FlowTypes\n): RenderNode => {\n  const emptyNode: FlowNode = {\n    uuid: createUUID(),\n    actions: [],\n    exits: [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ]\n  };\n\n  let type = Types.execute_actions;\n\n  // Add an action next if 1) this is first node, 2) we are coming from a router or 3) this is a background flow\n  if (!fromNode || hasRouter(fromNode) || flowType === FlowTypes.MESSAGING_BACKGROUND) {\n    const replyType = flowType === FlowTypes.VOICE ? Types.say_msg : Types.send_msg;\n    const replyAction = {\n      uuid: createUUID(),\n      text: '',\n      type: replyType\n    };\n\n    emptyNode.actions.push(replyAction);\n  } else {\n    // Otherwise we are going to a switch\n    const categories: Category[] = [\n      {\n        uuid: createUUID(),\n        name: DefaultExitNames.All_Responses,\n        exit_uuid: emptyNode.exits[0].uuid\n      }\n    ];\n\n    const wait: Wait = { type: WaitTypes.msg };\n    type = Types.wait_for_response;\n    if (flowType === FlowTypes.VOICE) {\n      wait.hint = { type: HintTypes.digits, count: 1 };\n    }\n\n    emptyNode.router = {\n      type: RouterTypes.switch,\n      result_name: getSuggestedResultName(suggestedResultNameCount),\n      default_category_uuid: categories[0].uuid,\n      categories,\n      wait,\n      cases: []\n    } as SwitchRouter;\n  }\n\n  let inboundConnections = {};\n  if (fromNode) {\n    inboundConnections = { [fromExitUUID]: fromNode.node.uuid };\n  }\n\n  return {\n    node: emptyNode,\n    ui: { position: { left: 0, top: 0 }, type },\n    inboundConnections,\n    ghost: true\n  };\n};\n\nexport interface FlowComponents {\n  renderNodeMap: RenderNodeMap;\n  groups: AssetMap;\n  fields: AssetMap;\n  labels: AssetMap;\n  results: AssetMap;\n  warnings: Warnings;\n}\n\nexport const isGroupAction = (actionType: string) => {\n  return (\n    actionType === Types.add_contact_groups ||\n    actionType === Types.remove_contact_groups ||\n    actionType === Types.send_broadcast\n  );\n};\n\n/**\n * This isn't necessarily supported, but lets make a best effort to guess node\n * types from cues within the definition if somebody loads a flow without _ui details.\n * @param node\n */\nexport const guessNodeType = (node: FlowNode) => {\n  // router based nodes\n  if (node.router) {\n    // hybrid nodes\n    if (node.actions.length === 1) {\n      if (node.actions[0].type === Types.call_webhook) {\n        return Types.split_by_webhook;\n      }\n\n      if (node.actions[0].type === Types.transfer_airtime) {\n        return Types.split_by_airtime;\n      }\n\n      if (node.actions[0].type === Types.call_resthook) {\n        return Types.split_by_resthook;\n      }\n\n      if (node.actions[0].type === Types.enter_flow) {\n        return Types.split_by_subflow;\n      }\n    }\n\n    if (node.router.wait) {\n      return Types.wait_for_response;\n    }\n\n    if (node.router.type === RouterTypes.random) {\n      return Types.split_by_random;\n    }\n\n    const switchRouter = getSwitchRouter(node);\n    if (switchRouter) {\n      if (switchRouter.operand === GROUPS_OPERAND) {\n        return Types.split_by_groups;\n      }\n    }\n\n    return Types.split_by_expression;\n  }\n\n  return Types.execute_actions;\n};\n\nexport const generateResultQuery = (resultName: string) => `@run.results.${snakify(resultName)}`;\n\n/**\n * Converts a list of assets to a map keyed by their id\n */\nexport const assetListToMap = (assets: Asset[]): AssetMap => {\n  const assetMap: any = {};\n  for (const asset of assets) {\n    assetMap[asset.id] = asset;\n  }\n  return assetMap;\n};\n\nexport const assetMapToList = (assets: AssetMap): any[] => {\n  return Object.keys(assets).map(key => {\n    const asset = assets[key];\n    return { uuid: asset.id, name: asset.name };\n  });\n};\n\n/**\n * Processes an initial FlowDefinition for details necessary for the editor\n */\nexport const getFlowComponents = (definition: FlowDefinition): FlowComponents => {\n  const renderNodeMap: RenderNodeMap = {};\n  const warnings: Warnings = {};\n  const { nodes, _ui } = definition;\n\n  // initialize our nodes\n  const pointerMap: { [uuid: string]: { [uuid: string]: string } } = {};\n\n  const groups: AssetMap = {};\n  const fields: AssetMap = {};\n  const labels: AssetMap = {};\n  let results: AssetMap = {};\n\n  for (const node of nodes) {\n    if (!node.actions) {\n      node.actions = [];\n    }\n\n    const ui = _ui.nodes[node.uuid];\n    const renderNode: RenderNode = {\n      node,\n      ui,\n      inboundConnections: {}\n    };\n\n    renderNodeMap[node.uuid] = renderNode;\n\n    const resultName = getResultName(node);\n    if (resultName) {\n      results = addResult(resultName, results, { nodeUUID: node.uuid });\n    }\n\n    const type = getType(renderNode);\n\n    // if we are split by group, look at our categories for groups\n    if (type === Types.split_by_groups) {\n      const router = getSwitchRouter(node);\n\n      for (const kase of router.cases) {\n        const groupUUID = kase.arguments[0];\n        const category = router.categories.find((cat: Category) => {\n          return cat.uuid === kase.category_uuid;\n        });\n\n        /* istanbul ignore else */\n        if (category) {\n          if (groupUUID) {\n            groups[groupUUID] = {\n              name: category.name,\n              id: groupUUID,\n              type: AssetType.Group\n            };\n          }\n        }\n      }\n    }\n\n    for (const action of node.actions) {\n      if (isGroupAction(action.type)) {\n        const groupsToChange = (action as ChangeGroups).groups;\n        if (groupsToChange) {\n          for (const group of groupsToChange) {\n            if (group.uuid) {\n              groups[group.uuid] = {\n                name: group.name,\n                id: group.uuid,\n                type: AssetType.Group\n              };\n            }\n          }\n        }\n      } else if (action.type === Types.set_contact_field) {\n        const fieldAction = action as SetContactField;\n        fields[fieldAction.field.key] = {\n          name: fieldAction.field.name,\n          id: fieldAction.field.key,\n          type: AssetType.Field\n        };\n      } else if (action.type === Types.add_input_labels) {\n        for (const label of (action as AddLabels).labels) {\n          labels[label.uuid] = {\n            name: label.name,\n            id: label.uuid,\n            type: AssetType.Label\n          };\n        }\n      } else if (action.type === Types.set_run_result) {\n        const resultAction = action as SetRunResult;\n        const key = snakify(resultAction.name);\n\n        if (key in results) {\n          results[key].references.push({\n            nodeUUID: node.uuid,\n            actionUUID: action.uuid\n          });\n        } else {\n          results[key] = {\n            name: resultAction.name,\n            id: key,\n            type: AssetType.Result,\n            references: [{ nodeUUID: node.uuid, actionUUID: action.uuid }]\n          };\n        }\n      }\n    }\n\n    for (const exit of node.exits) {\n      if (exit.destination_uuid) {\n        let pointers: { [uuid: string]: string } = pointerMap[exit.destination_uuid];\n\n        if (!pointers) {\n          pointers = {};\n        }\n\n        pointers[exit.uuid] = node.uuid;\n        pointerMap[exit.destination_uuid] = pointers;\n      }\n    }\n  }\n\n  // store our pointers with their associated nodes\n  for (const nodeUUID of Object.keys(pointerMap)) {\n    renderNodeMap[nodeUUID].inboundConnections = pointerMap[nodeUUID];\n  }\n\n  return { renderNodeMap, groups, fields, labels, results, warnings };\n};\n\n/**\n * Extracts contact fields from a list of nodes\n */\nexport const extractContactFields = (nodes: FlowNode[]): Asset[] =>\n  nodes.reduce((fieldList, { actions }) => {\n    actions.forEach(action => {\n      if (action.type === Types.set_contact_field) {\n        fieldList.push(fieldToAsset((action as SetContactField).field));\n      }\n    });\n    return fieldList;\n  }, []);\n\n/** Adds all the items from toAdd if that don't already exist in assets */\nexport const mergeAssetMaps = (assets: AssetMap, toAdd: AssetMap): void => {\n  Object.keys(toAdd).forEach((key: string) => {\n    assets[key] = assets[key] || toAdd[key];\n  });\n};\n\nexport const createFlowIssueMap = (\n  previousIssues: FlowIssueMap,\n  issues: FlowIssue[]\n): FlowIssueMap => {\n  const issueMap: FlowIssueMap = (issues || [])\n    .filter((issue: FlowIssue) => issue.type !== FlowIssueType.LEGACY_EXTRA)\n    .reduce((issueMap: FlowIssueMap, issue: FlowIssue) => {\n      const nodeIssues: FlowIssue[] = issueMap[issue.node_uuid] || [];\n      nodeIssues.push(issue);\n      issueMap[issue.node_uuid] = nodeIssues;\n      return issueMap;\n    }, {});\n\n  for (const [nodeUUID, nodeIssues] of Object.entries(issueMap)) {\n    // would be nice not to use stringify as a deepequals here\n    if (JSON.stringify(previousIssues[nodeUUID]) === JSON.stringify(nodeIssues)) {\n      issueMap[nodeUUID] = previousIssues[nodeUUID];\n    }\n  }\n  return issueMap;\n};\n\nexport const fetchFlowActivity = (\n  endpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState,\n  uuid: string\n): void => {\n  const {\n    editorState: { simulating, activityInterval, visible }\n  } = getState();\n\n  if (visible) {\n    getActivity(endpoint, uuid).then((activity: Activity) => {\n      // every interval we back off a bit up to 5 minutes\n      if (activity) {\n        const updates: Partial<EditorState> = {\n          liveActivity: activity,\n          activityInterval: Math.min(60000 * 5, activityInterval + 200)\n        };\n\n        if (!simulating) {\n          updates.activity = activity;\n        }\n\n        dispatch(mergeEditorState(updates));\n\n        if (activityTimeout) {\n          window.clearTimeout(activityTimeout);\n        }\n\n        activityTimeout = window.setTimeout(() => {\n          fetchFlowActivity(endpoint, dispatch, getState, uuid);\n        }, activityInterval);\n      }\n    });\n  } else {\n    if (activityTimeout) {\n      window.clearTimeout(activityTimeout);\n    }\n\n    activityTimeout = window.setTimeout(() => {\n      fetchFlowActivity(endpoint, dispatch, getState, uuid);\n    }, 1000);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { newPosition } from 'store/helpers';\n\nimport styles from './CanvasDraggable.module.scss';\nimport { onNextRender } from 'utils';\n\nexport interface CanvasDraggableProps {\n  position: FlowPosition;\n  uuid: string;\n  idx: number;\n  elementCreator: (props: CanvasDraggableProps) => JSX.Element;\n  config?: any;\n  // should our draggable be initialized as dragged\n  dragOnAdd?: boolean;\n\n  selected?: boolean;\n\n  onAnimated?: (uuid: string) => void;\n  updateDimensions?: (uuid: string, position: Dimensions) => void;\n  onDragStart?: (uuid: string, clickedPosition: FlowPosition) => void;\n  onDragStop?: () => void;\n}\n\nexport interface CanvasDraggableState {\n  width?: number;\n  height?: number;\n}\n\nexport class CanvasDraggable extends React.Component<CanvasDraggableProps, CanvasDraggableState> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CanvasDraggableProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/, 'ref']\n    });\n\n    this.state = {};\n  }\n\n  private ref(ref: HTMLDivElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidMount(): void {\n    if (this.ele) {\n      if (this.props.updateDimensions) {\n        const width = this.ele.clientWidth || this.props.position.right - this.props.position.left;\n        const height =\n          this.ele.clientHeight || this.props.position.bottom - this.props.position.top;\n        this.setState({ width, height }, () => {\n          this.props.updateDimensions(this.props.uuid, {\n            width,\n            height\n          });\n        });\n      }\n    }\n  }\n\n  public shouldComponentUpdate(nextProps: CanvasDraggableProps, state: any, context: any): boolean {\n    return (\n      nextProps.position.left !== this.props.position.left ||\n      nextProps.position.top !== this.props.position.top ||\n      nextProps.position.right !== this.props.position.right ||\n      nextProps.position.bottom !== this.props.position.bottom ||\n      nextProps.idx !== this.props.idx ||\n      nextProps.selected !== this.props.selected ||\n      nextProps.config !== this.props.config\n    );\n  }\n\n  public componentDidUpdate(\n    prevProps: CanvasDraggableProps,\n    prevState: CanvasDraggableState\n  ): void {\n    // traceUpdate(this, prevProps, prevState);\n\n    // we want to check our dimensions after our next render\n    onNextRender(() => {\n      if (this.ele) {\n        if (this.ele.clientWidth && this.ele.clientHeight) {\n          if (\n            this.state.width !== this.ele.clientWidth ||\n            this.state.height !== this.ele.clientHeight\n          ) {\n            if (this.props.updateDimensions) {\n              const height = this.ele.clientHeight;\n              const width = this.ele.clientWidth;\n\n              this.setState({ width, height }, () => {\n                this.props.updateDimensions(this.props.uuid, { width, height });\n              });\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n    if (this.props.onDragStop) {\n      this.props.onDragStop();\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    // ignore clicks in textareas\n    if (!this.props.selected && (event.target as any).tagName.toUpperCase() === 'TEXTAREA') {\n      return;\n    }\n\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n    if (this.props.onDragStart) {\n      this.props.onDragStart(\n        this.props.uuid,\n        newPosition(event.pageX - this.props.position.left, event.pageY - this.props.position.top)\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    const classes = [styles.draggable];\n\n    if (this.props.selected) {\n      classes.push(styles.selected);\n    }\n\n    const handleAnimated = () => {\n      if (this.props.onAnimated) {\n        this.props.onAnimated(this.props.uuid);\n      }\n    };\n\n    return (\n      <div\n        data-testid={'draggable_' + this.props.uuid}\n        onTransitionEnd={handleAnimated}\n        ref={this.ref}\n        className={classes.join(' ')}\n        style={{\n          left: this.props.position.left,\n          top: this.props.position.top\n        }}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n      >\n        {this.props.elementCreator(this.props)}\n      </div>\n    );\n  }\n}\n","import { FlowPosition } from 'flowTypes';\nimport { CanvasPositions } from 'store/editor';\nimport {\n  MAX_REFLOW_ATTEMPTS,\n  NODE_SPACING,\n  set,\n  snapPositionToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const collides = (a: FlowPosition, b: FlowPosition, fudge: number) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  a.bottom += fudge;\n\n  return !(b.left > a.right! || b.right! < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\nexport const getDraggablesInBox = (\n  positions: CanvasPositions,\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(positions)) {\n    const position = positions[nodeUUID];\n    if (collides(box, position, 0)) {\n      collisions[nodeUUID] = position;\n    }\n  }\n  return collisions;\n};\n\ninterface DraggablePosition extends FlowPosition {\n  uuid: string;\n}\n\nexport const getOrderedDraggables = (positions: CanvasPositions): DraggablePosition[] => {\n  const sorted: DraggablePosition[] = [];\n  Object.keys(positions).forEach((uuid: string) => {\n    sorted.push({ ...positions[uuid], uuid });\n  });\n\n  return sorted.sort((a: DraggablePosition, b: DraggablePosition) => {\n    let diff = a.top - b.top;\n    if (diff === 0) {\n      diff = a.left - b.left;\n    }\n    return diff;\n  });\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nconst getFirstCollision = (\n  positions: CanvasPositions,\n  changed: string[],\n  fudge: number\n): DraggablePosition[] => {\n  const sortedDraggables = getOrderedDraggables(positions);\n\n  for (let i = 0; i < sortedDraggables.length; i++) {\n    const current = sortedDraggables[i];\n\n    if (i + 1 < sortedDraggables.length) {\n      for (let j = i + 1; j < sortedDraggables.length; j++) {\n        const other = sortedDraggables[j];\n\n        if (collides(current, other, fudge)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedDraggables.length) {\n            const cascaded = sortedDraggables[j + 1];\n            if (collides(other, cascaded, fudge)) {\n              return [current, other, cascaded];\n            }\n          }\n\n          if (\n            !!changed.find((uuid: string) => other.uuid === uuid) &&\n            !!!changed.find((uuid: string) => current.uuid === uuid)\n          ) {\n            return [other, current];\n          }\n\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nconst setTop = (position: FlowPosition, newTop: number) => {\n  return snapPositionToGrid({\n    top: newTop,\n    left: position.left,\n    bottom: newTop + (position.bottom! - position.top),\n    right: position.right\n  });\n};\n\n/**\n * Reflow positions to account for any collisions\n * @param positions\n */\nexport const reflow = (\n  positions: CanvasPositions,\n  fudge: number\n): { positions: CanvasPositions; changed: string[] } => {\n  let newPositions = positions;\n  const changed: string[] = [];\n\n  // if for some reason we can't reflow, don't blow up\n  let attempts = 0;\n\n  timeStart('reflow');\n\n  let collision = getFirstCollision(positions, changed, fudge);\n  while (collision.length > 0 && attempts < MAX_REFLOW_ATTEMPTS) {\n    attempts++;\n    if (collision.length) {\n      const [top, bottom, cascade] = collision;\n      newPositions = mutate(newPositions, {\n        [bottom.uuid]: set(setTop(bottom, top.bottom! + NODE_SPACING))\n      });\n      changed.push(bottom.uuid);\n\n      if (cascade) {\n        // start with the top of the bottom node\n        let cascadeTop = top.bottom! + NODE_SPACING;\n\n        // and add its height\n        cascadeTop += bottom.bottom! - bottom.top;\n        newPositions = mutate(newPositions, {\n          [cascade.uuid]: set(setTop(cascade, cascadeTop))\n        });\n\n        changed.push(cascade.uuid);\n      }\n    }\n\n    collision = getFirstCollision(newPositions, changed, fudge);\n  }\n\n  timeEnd('reflow');\n\n  return { positions: newPositions, changed };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CanvasDraggable, CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport { getDraggablesInBox, reflow } from 'components/canvas/helpers';\nimport { DRAG_THRESHOLD } from 'components/flow/Flow';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport React from 'react';\nimport { CanvasPositions, DragSelection } from 'store/editor';\nimport { addPosition } from 'store/helpers';\nimport { MergeEditorState } from 'store/thunks';\nimport { COLLISION_FUDGE, snapPositionToGrid, throttle, snapToGrid } from 'utils';\n\nimport styles from './Canvas.module.scss';\n\nexport const CANVAS_PADDING = 300;\nexport const REFLOW_QUIET = 200;\n\nexport interface CanvasProps {\n  uuid: string;\n  dragActive: boolean;\n  draggingNew: boolean;\n  newDragElement: JSX.Element;\n  draggables: CanvasDraggableProps[];\n  mutable: boolean;\n  onLoaded: () => void;\n  onDragging: (draggedUUIDs: string[]) => void;\n  onUpdatePositions: (positions: CanvasPositions) => void;\n  onRemoveNodes: (nodeUUIDs: string[]) => void;\n  onDoubleClick: (position: FlowPosition) => void;\n  mergeEditorState: MergeEditorState;\n}\n\ninterface CanvasState {\n  dragDownPosition: FlowPosition | null;\n  dragUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  uuid: string;\n  positions: CanvasPositions;\n  selected: CanvasPositions;\n  height: number;\n}\n\nexport class Canvas extends React.PureComponent<CanvasProps, CanvasState> {\n  private ele!: HTMLDivElement;\n  private isScrolling: any;\n\n  private reflowTimeout: any;\n\n  // when auto scrolling we need to move dragged elements\n  private lastX!: number | null;\n  private lastY!: number | null;\n\n  // did we just select something\n  private justSelected = false;\n\n  private onDragThrottled: (uuids: string[]) => void = throttle(this.props.onDragging, 300);\n  private onMouseThrottled: (event: any) => void = throttle(this.handleMouseMove.bind(this), 10);\n\n  constructor(props: CanvasProps) {\n    super(props);\n\n    let height = document.documentElement.clientHeight;\n\n    const positions: { [uuid: string]: FlowPosition } = {};\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      positions[draggable.uuid] = draggable.position;\n      if (draggable.position.bottom) {\n        height = Math.max(height, draggable.position.bottom + CANVAS_PADDING);\n      }\n    });\n\n    this.state = {\n      height,\n      dragDownPosition: null,\n      dragUUID: null,\n      dragGroup: false,\n      dragSelection: null,\n      uuid: this.props.uuid,\n      selected: {},\n      positions\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/, /^mark/, /^do/, /^ensure/]\n    });\n  }\n\n  private handleWindowResize(): void {\n    const windowHeight = document.documentElement.clientHeight;\n    this.setState({ height: Math.max(windowHeight, this.state.height) });\n  }\n\n  public componentDidMount(): void {\n    /* istanbul ignore next */\n    window.addEventListener('resize', this.handleWindowResize);\n    document.addEventListener('keydown', this.handleKeyDown);\n\n    this.props.onLoaded();\n  }\n\n  private handleKeyDown(event: any): void {\n    if (this.state.selected && event.key === 'Backspace') {\n      const nodeUUIDs = Object.keys(this.state.selected);\n      if (nodeUUIDs.length > 0) {\n        this.props.onRemoveNodes(Object.keys(this.state.selected));\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.handleWindowResize);\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  public componentDidUpdate(prevProps: CanvasProps, prevState: CanvasState): void {\n    // traceUpdate(this, prevProps, prevState);\n\n    let updated = false;\n    let updatedPositions = { ...this.state.positions };\n\n    // are we being given something new\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      if (!this.state.positions[draggable.uuid]) {\n        updatedPositions = mutate(updatedPositions, {\n          $merge: { [draggable.uuid]: draggable.position }\n        });\n        updated = true;\n      }\n    });\n\n    // have we removed something\n    Object.keys(updatedPositions).forEach((uuid: string) => {\n      if (\n        !this.props.draggables.find((draggable: CanvasDraggableProps) => draggable.uuid === uuid)\n      ) {\n        updatedPositions = mutate(updatedPositions, { $unset: [[uuid]] } as any);\n        updated = true;\n      }\n    });\n\n    if (updated) {\n      this.setState({ positions: updatedPositions });\n    }\n  }\n\n  public renderSelectionBox(): JSX.Element | null {\n    const drag = this.state.dragSelection;\n\n    if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n      const left = Math.min(drag.startX, drag.currentX);\n      const top = Math.min(drag.startY, drag.currentY);\n      const width = Math.max(drag.startX, drag.currentX) - left;\n      const height = Math.max(drag.startY, drag.currentY) - top;\n\n      if (this.state.dragSelection && this.state.dragSelection.startX) {\n        return <div className={styles.drag_selection} style={{ left, top, width, height }} />;\n      }\n    }\n\n    return null;\n  }\n\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return false;\n    }\n    return (event.target as any).id === 'canvas';\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    if (!this.props.mutable) {\n      return;\n    }\n\n    const offset = this.ele.getBoundingClientRect();\n\n    this.justSelected = false;\n    if (this.isClickOnCanvas(event)) {\n      const startX = event.pageX - offset.left;\n      const startY = event.pageY - offset.top - window.scrollY;\n\n      this.setState({\n        dragSelection: { startX, startY, currentX: startX, currentY: startY }\n      });\n    }\n  }\n\n  private handleMouseMove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    if (this.props.draggingNew) {\n      this.lastX = event.pageX;\n      this.lastY = event.pageY;\n      this.updateStateWithScroll(event.clientY, event.pageY);\n      if (this.state.dragUUID) {\n        this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n      }\n      return;\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      const drag = this.state.dragSelection;\n\n      if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n        const left = Math.min(drag.startX, drag.currentX);\n        const top = Math.min(drag.startY, drag.currentY);\n        const right = Math.max(drag.startX, drag.currentX);\n        const bottom = Math.max(drag.startY, drag.currentY);\n\n        const selected = getDraggablesInBox(this.state.positions, {\n          left,\n          top,\n          right,\n          bottom\n        });\n\n        const offset = this.ele.getBoundingClientRect();\n\n        this.setState({\n          dragSelection: {\n            startX: drag.startX,\n            startY: drag.startY,\n            currentX: event.pageX - offset.left,\n            currentY: event.pageY - offset.top - window.scrollY\n          }\n        });\n\n        this.setState({ selected });\n\n        if (Object.keys(selected).length > 0) {\n          this.justSelected = true;\n        }\n      }\n    }\n\n    if (this.state.dragUUID) {\n      this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n    }\n  }\n\n  private scrollCanvas(amount: number): void {\n    if (!this.isScrolling) {\n      this.isScrolling = true;\n\n      let speed = amount;\n      if (window.scrollY + amount < 0) {\n        speed = 0;\n      }\n\n      this.isScrolling = window.setInterval(() => {\n        if (this.lastX && this.lastY) {\n          // as we scroll we need to move our dragged items along with us\n          this.updatePositions(this.lastX, this.lastY + speed, 0, false);\n          window.scrollBy(0, speed);\n        }\n      }, 30);\n    }\n  }\n\n  private handleMouseUpCapture(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    this.lastX = null;\n    this.lastY = null;\n    if (this.state.dragUUID) {\n      this.setState({\n        dragDownPosition: null,\n        dragSelection: null,\n        dragUUID: null\n      });\n    }\n\n    if (!this.justSelected) {\n      this.props.mergeEditorState({\n        dragActive: false\n      });\n\n      this.setState({ selected: {} });\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      this.setState({\n        dragSelection: {\n          startX: undefined,\n          startY: undefined,\n          currentX: undefined,\n          currentY: undefined\n        }\n      });\n    }\n\n    this.justSelected = false;\n  }\n\n  public handleUpdateDimensions(uuid: string, dimensions: Dimensions): void {\n    if (dimensions.width && dimensions.height) {\n      let pos = this.state.positions[uuid];\n      if (!pos) {\n        pos = this.props.draggables.find((item: CanvasDraggableProps) => item.uuid === uuid)!\n          .position;\n      }\n\n      const newPosition = {\n        left: pos.left,\n        top: pos.top,\n        right: pos.left + dimensions.width,\n        bottom: pos.top + dimensions.height\n      };\n\n      if (newPosition.bottom !== pos.bottom || newPosition.right !== pos.right) {\n        this.setState((prevState: CanvasState) => {\n          const newPositions = mutate(prevState.positions, {\n            $merge: {\n              [uuid]: newPosition\n            }\n          });\n\n          return {\n            positions: newPositions,\n            height: Math.max(newPosition.bottom + CANVAS_PADDING, prevState.height)\n          };\n        }, this.markReflow);\n      }\n    }\n  }\n\n  public ensureCanvasHeight() {\n    let height = this.state.height;\n    Object.keys(this.state.positions).forEach(uuid => {\n      const bottom = this.state.positions[uuid].bottom + CANVAS_PADDING;\n      if (bottom > height) {\n        height = bottom;\n      }\n    });\n\n    if (height > this.state.height) {\n      this.setState({ height });\n    }\n  }\n\n  public doReflow(): void {\n    const reflowPositions = { ...this.state.positions };\n    delete reflowPositions[this.state.dragUUID];\n    const { positions, changed } = reflow(reflowPositions, COLLISION_FUDGE);\n\n    if (changed) {\n      this.setState({ positions });\n\n      if (changed) {\n        this.props.onUpdatePositions(\n          changed.reduce((results: CanvasPositions, uuid: string) => {\n            results[uuid] = positions[uuid];\n            return results;\n          }, {})\n        );\n      }\n    }\n\n    this.props.onDragging(changed);\n  }\n\n  private markReflow(): void {\n    if (this.reflowTimeout) {\n      clearTimeout(this.reflowTimeout);\n    }\n\n    this.reflowTimeout = setTimeout(() => {\n      // only reflow if we aren't dragging\n      if (!this.state.dragUUID) {\n        this.doReflow();\n      }\n    }, REFLOW_QUIET);\n  }\n\n  /**\n   * Updates the state of the canvas, expanding and scrolling as needed\n   * @param windowY the mouse position in the viewport\n   * @param pageY the mouse position in the full canvas\n   * @param otherState optional state to set\n   */\n  private updateStateWithScroll(\n    windowY: number,\n    pageY: number,\n    otherState: Partial<CanvasState> = {}\n  ): void {\n    const viewportHeight = document.documentElement.clientHeight;\n    this.setState(\n      (prevState: CanvasState) => {\n        return {\n          ...(otherState as CanvasState),\n          height: Math.max(pageY + CANVAS_PADDING, prevState.height)\n        };\n      },\n      () => {\n        // check if we need to scroll our canvas\n\n        if (!this.isScrolling && windowY !== 0) {\n          if (windowY + 100 > viewportHeight) {\n            this.scrollCanvas(15);\n          } else if (windowY < 100) {\n            this.scrollCanvas(-15);\n          }\n        }\n        // if we are scrolling but given a clientY then user is mousing\n        else if (windowY !== 0 && (windowY > 100 && windowY + 100 < viewportHeight)) {\n          window.clearInterval(this.isScrolling);\n          this.isScrolling = null;\n        }\n      }\n    );\n  }\n\n  private updatePositions(pageX: number, pageY: number, clientY: number, snap: boolean): void {\n    if (this.state.dragUUID) {\n      const { dragUUID } = this.state;\n\n      // save off the last update, if we scroll on the user's behalf we'll need this\n      this.lastX = pageX;\n      this.lastY = pageY;\n\n      const startPosition = this.props.dragActive\n        ? this.state.selected[dragUUID]\n        : this.state.positions[dragUUID];\n\n      const offset = this.ele.getBoundingClientRect();\n\n      if (this.state.dragDownPosition) {\n        const xd = pageX - offset.left - this.state.dragDownPosition.left - startPosition.left;\n\n        const yd =\n          pageY - offset.top - this.state.dragDownPosition.top - startPosition.top - window.scrollY;\n\n        let lowestNode: number | undefined = 0;\n        if (this.props.dragActive) {\n          const delta = { left: xd, top: yd };\n          const prevState = this.state;\n          const uuids = Object.keys(prevState.selected);\n          let newPositions: { [uuid: string]: FlowPosition } = {};\n\n          uuids.forEach((uuid: string) => {\n            let newPosition = addPosition(prevState.selected[uuid], delta);\n            if (snap) {\n              newPosition = snapPositionToGrid(newPosition);\n            }\n\n            if (newPosition && newPosition.bottom! > lowestNode!) {\n              lowestNode = newPosition.bottom;\n            }\n            newPositions[uuid] = newPosition;\n          });\n\n          newPositions = mutate(prevState.positions, {\n            $merge: newPositions\n          });\n\n          this.updateStateWithScroll(clientY, lowestNode, {\n            positions: newPositions\n          });\n\n          if (uuids.length <= 5) {\n            this.props.onDragging(uuids);\n          } else {\n            this.onDragThrottled(uuids);\n          }\n        } else {\n          if (Math.abs(xd) + Math.abs(yd) > DRAG_THRESHOLD) {\n            let selected = this.state.selected;\n            if (!(this.state.dragUUID in selected)) {\n              selected = { [dragUUID]: this.state.positions[dragUUID] };\n            }\n\n            this.props.mergeEditorState({\n              dragActive: true\n            });\n\n            this.setState({ selected });\n          }\n        }\n      }\n    }\n  }\n\n  private handleDragStart(uuid: string, position: FlowPosition): void {\n    const offset = this.ele.getBoundingClientRect();\n\n    this.setState({\n      dragUUID: uuid,\n      dragDownPosition: {\n        left: position.left - offset.left,\n        top: position.top - offset.top - window.scrollY\n      }\n    });\n  }\n\n  /** Gets all the positions for nodes that were dragged */\n  private getSelectedPositions(): CanvasPositions {\n    return Object.keys(this.state.selected).reduce((result: CanvasPositions, uuid: string) => {\n      result[uuid] = this.state.positions[uuid];\n      return result;\n    }, {});\n  }\n\n  private handleDragStop(): void {\n    if (this.state.dragUUID) {\n      this.updatePositions(this.lastX!, this.lastY!, 0, true);\n    }\n\n    this.props.onUpdatePositions(this.getSelectedPositions());\n    this.setState({\n      dragUUID: null,\n      dragDownPosition: null,\n      dragSelection: null\n    });\n\n    this.markReflow();\n\n    this.props.mergeEditorState({\n      dragActive: false\n    });\n  }\n\n  private handleAnimated(uuid: string): void {\n    this.props.onDragging([uuid]);\n  }\n\n  private handleDoubleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.isClickOnCanvas(event)) {\n      const offset = this.ele.getBoundingClientRect();\n      this.props.onDoubleClick(\n        snapToGrid(event.pageX - offset.left, event.pageY - offset.top - window.scrollY)\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        id=\"canvas-container\"\n        className={styles.canvas_container}\n        onMouseDown={this.handleMouseDown}\n        onMouseMove={this.onMouseThrottled}\n        onMouseUp={this.handleMouseUpCapture}\n        onDoubleClick={this.handleDoubleClick}\n      >\n        <div className={styles.canvas_background}>\n          <div\n            data-testid=\"canvas\"\n            style={{ height: this.state.height }}\n            id=\"canvas\"\n            ref={(ele: HTMLDivElement) => {\n              this.ele = ele;\n            }}\n            className={styles.canvas}\n          >\n            {this.props.newDragElement}\n            {this.props.draggables.map((draggable: CanvasDraggableProps, idx: number) => {\n              const pos = this.state.positions[draggable.uuid] || draggable.position;\n              return (\n                <CanvasDraggable\n                  onAnimated={this.handleAnimated}\n                  key={'draggable_' + draggable.uuid}\n                  uuid={draggable.uuid}\n                  updateDimensions={this.handleUpdateDimensions}\n                  position={pos}\n                  idx={draggable.idx}\n                  selected={!!this.state.selected[draggable.uuid]}\n                  elementCreator={draggable.elementCreator}\n                  onDragStart={this.handleDragStart}\n                  onDragStop={this.handleDragStop}\n                  dragOnAdd={draggable.dragOnAdd}\n                  config={draggable.config}\n                />\n              );\n            })}\n            {this.renderSelectionBox()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport styles from 'components/counter/Counter.module.scss';\nimport * as React from 'react';\nimport { addCommas } from 'utils';\n\nexport interface CounterProps {\n  keepVisible: boolean;\n  containerStyle: string;\n  countStyle: string;\n  count: number;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport default class Counter extends React.Component<CounterProps> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CounterProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public componentDidMount(): void {\n    this.handleScrollIntoView();\n  }\n\n  public componentDidUpdate(prevProps: CounterProps): void {\n    if (prevProps.count !== this.props.count) {\n      this.handleScrollIntoView();\n    }\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      if (this.props.count > 0 && this.props.keepVisible) {\n        window.setTimeout(() => {\n          window.scrollTo({\n            top: this.ele.getBoundingClientRect().top - 200 + window.scrollY,\n            behavior: 'smooth'\n          });\n        }, 200);\n      }\n    }\n  }\n\n  private handleMouseEvent(event: React.MouseEvent<HTMLDivElement>, callback: () => void): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  private handleMouseEnter(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseEnter!);\n  }\n\n  private handleMouseLeave(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseLeave!);\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onClick!);\n  }\n\n  public render(): JSX.Element | null {\n    const count = addCommas(this.props.count);\n    return (\n      <div\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n        className={\n          styles.counter +\n          ' ' +\n          this.props.containerStyle +\n          ' ' +\n          (this.props.onClick ? styles.clickable : '') +\n          ' ' +\n          (this.props.count > 0 ? styles.visible : '')\n        }\n        onClick={this.handleClick}\n        data-spec=\"counter-outter\"\n      >\n        <div\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          className={this.props.countStyle}\n          data-spec=\"counter-inner\"\n        >\n          {count}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { createClickHandler } from 'utils';\n\nimport styles from './TitleBar.module.scss';\nimport { fakePropType } from 'config/ConfigProvider';\nimport i18n from 'config/i18n';\n\nexport interface TitleBarProps {\n  title: string;\n  onRemoval(event: React.MouseEvent<HTMLElement>): any;\n  __className?: string;\n  showRemoval?: boolean;\n  showMove?: boolean;\n  onMoveUp?(event: React.MouseEvent<HTMLElement>): any;\n  shouldCancelClick?: () => boolean;\n}\n\ninterface TitleBarState {\n  confirmingRemoval: boolean;\n}\n\nexport const confirmationTime = 2000;\n\nexport const titlebarContainerSpecId = 'titlebar-container';\nexport const titlebarSpecId = 'titlebar';\nexport const moveIconSpecId = 'move-icon';\nexport const moveSpecId = 'move';\nexport const removeIconSpecId = 'remove-icon';\nexport const confirmationSpecId = 'confirmation';\nexport const confirmRemovalSpecId = 'confirm-removal';\n\n/**\n * Simple title bar with confirmation removal\n */\nexport default class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n  private confirmationTimeout: number;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: TitleBarProps) {\n    super(props);\n\n    this.state = {\n      confirmingRemoval: false\n    };\n\n    this.handleConfirmRemoval = this.handleConfirmRemoval.bind(this);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.confirmationTimeout) {\n      window.clearTimeout(this.confirmationTimeout);\n    }\n  }\n\n  public handleMouseUpCapture(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  public handleConfirmRemoval(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      confirmingRemoval: true\n    });\n\n    this.confirmationTimeout = window.setTimeout(\n      () =>\n        this.setState({\n          confirmingRemoval: false\n        }),\n      confirmationTime\n    );\n  }\n\n  private getMoveArrow(): JSX.Element {\n    let moveArrow: JSX.Element = null;\n\n    if (this.props.showMove && this.context.config.mutable) {\n      moveArrow = (\n        <div\n          className={styles.up_button}\n          {...createClickHandler(\n            this.props.onMoveUp,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={moveIconSpecId}\n        >\n          <span className=\"fe-arrow-up\" />\n        </div>\n      );\n    } else {\n      moveArrow = <div className={styles.up_button} data-spec={moveSpecId} />;\n    }\n\n    return moveArrow;\n  }\n\n  private getRemove(): JSX.Element {\n    let remove: JSX.Element = (\n      <div className={styles.remove_button} data-testid={removeIconSpecId}></div>\n    );\n\n    if (this.props.showRemoval && this.context.config.mutable) {\n      remove = (\n        <div\n          className={styles.remove_button}\n          {...createClickHandler(\n            this.handleConfirmRemoval,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={removeIconSpecId}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      );\n    }\n\n    return remove;\n  }\n\n  private getConfirmationEl(): JSX.Element {\n    let confirmation: JSX.Element;\n\n    if (this.state.confirmingRemoval && this.context.config.mutable) {\n      confirmation = (\n        <div className={styles.remove_confirm} data-spec={confirmationSpecId}>\n          <div className={styles.up_button} data-spec={moveSpecId} />\n          <div className={styles.titletext}>{i18n.t('removal_confirmation', 'Remove?')}</div>\n          <div\n            className={styles.remove_button}\n            {...createClickHandler(\n              this.props.onRemoval,\n              this.props.shouldCancelClick,\n              this.handleMouseUpCapture\n            )}\n            data-testid={confirmRemovalSpecId}\n          >\n            <span className=\"fe-x\" />\n          </div>\n        </div>\n      );\n    }\n\n    return confirmation;\n  }\n\n  public render(): JSX.Element {\n    const confirmation: JSX.Element = this.getConfirmationEl();\n    const moveArrow: JSX.Element = this.getMoveArrow();\n    const remove: JSX.Element = this.getRemove();\n    return (\n      <div className={styles.titlebar} data-spec={titlebarContainerSpecId}>\n        <div className={`${this.props.__className} ${styles.normal}`} data-spec={titlebarSpecId}>\n          {moveArrow}\n          <div className={styles.titletext}>{this.props.title}</div>\n          {remove}\n        </div>\n        {confirmation}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './MountScroll.module.scss';\n\nconst cx: any = classNames.bind(styles);\n\ninterface MountScrollProps {\n  pulseAfterScroll?: boolean;\n}\n\ninterface MountScrollState {\n  pulse: boolean;\n}\n\nexport default class MountScroll extends React.Component<MountScrollProps, MountScrollState> {\n  private ele!: HTMLDivElement;\n  private handleScroll: () => void;\n\n  constructor(props: MountScrollProps) {\n    super(props);\n\n    this.state = {\n      pulse: false\n    };\n  }\n\n  public componentDidMount(): void {\n    const handleScrollCompleted = this.handleScrollCompleted.bind(this);\n\n    let timer: number = null;\n    this.handleScroll = () => {\n      if (timer !== null) {\n        window.clearTimeout(timer);\n      }\n      timer = window.setTimeout(() => {\n        handleScrollCompleted();\n        window.removeEventListener('scroll', this.handleScroll);\n      }, 50);\n    };\n\n    window.addEventListener('scroll', this.handleScroll);\n    this.handleScrollIntoView();\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  private handleScrollCompleted(): void {\n    this.setState({ pulse: true });\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      const scrollTo = this.ele.getBoundingClientRect().top - 200 + window.scrollY;\n\n      if (scrollTo !== window.scrollY) {\n        const atBottom = window.innerHeight + window.scrollY >= document.body.scrollHeight - 2;\n        if (atBottom && scrollTo > window.scrollY) {\n          this.handleScrollCompleted();\n        } else {\n          window.setTimeout(() => {\n            window.scrollTo({\n              top: scrollTo,\n              behavior: 'smooth'\n            });\n          }, 0);\n        }\n      } else {\n        this.handleScrollCompleted();\n      }\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const classes = cx({\n      [styles.wrapper]: true,\n      [styles.pulse]: this.state.pulse\n    });\n\n    return (\n      <div\n        className={classes}\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { Action, AnyAction, Endpoints, LocalizationMap, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, RenderNode, AssetStore } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  ActionAC,\n  DispatchWithState,\n  moveActionUp,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  removeAction\n} from 'store/thunks';\nimport { createClickHandler, getLocalization } from 'utils';\n\nimport styles from './Action.module.scss';\nimport { hasIssues } from 'components/flow/helpers';\nimport MountScroll from 'components/mountscroll/MountScroll';\n\nexport interface ActionWrapperPassedProps {\n  first: boolean;\n  action: AnyAction;\n  localization: LocalizationMap;\n  selected: boolean;\n  issues: FlowIssue[];\n  render: (action: AnyAction, endpoints: Endpoints) => React.ReactNode;\n}\n\nexport interface ActionWrapperStoreProps {\n  assetStore: AssetStore;\n  renderNode: RenderNode;\n  language: Asset;\n  translating: boolean;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeAction: ActionAC;\n  moveActionUp: ActionAC;\n  scrollToAction: string;\n}\n\nexport type ActionWrapperProps = ActionWrapperPassedProps & ActionWrapperStoreProps;\n\nexport const actionContainerSpecId = 'action-container';\nexport const actionOverlaySpecId = 'action-overlay';\nexport const actionInteractiveDivSpecId = 'interactive-div';\nexport const actionBodySpecId = 'action-body';\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\n// Note: this needs to be a ComponentClass in order to work w/ react-flip-move\nexport class ActionWrapper extends React.Component<ActionWrapperProps> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionWrapperProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleActionClicked(event: React.MouseEvent<HTMLElement>): void {\n    const target = event.target as any;\n\n    const showAdvanced =\n      target && target.attributes && target.getAttribute('data-advanced') === 'true';\n\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode,\n      originalAction: this.props.action,\n      showAdvanced\n    });\n  }\n\n  public handleRemoval(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.removeAction(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public handleMoveUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.moveActionUp(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public getAction(): Action {\n    // if we are translating, us our localized version\n    if (this.props.translating) {\n      const localization = getLocalization(\n        this.props.action,\n        this.props.localization,\n        this.props.language\n      );\n      return localization.getObject() as AnyAction;\n    }\n\n    return this.props.action;\n  }\n\n  private getClasses(): string {\n    const localizedKeys = [];\n    let missingLocalization = false;\n\n    if (this.props.translating) {\n      if (\n        this.props.action.type === Types.send_msg ||\n        this.props.action.type === Types.send_broadcast ||\n        this.props.action.type === Types.say_msg\n      ) {\n        localizedKeys.push('text');\n      }\n\n      if (this.props.action.type === Types.send_email) {\n        localizedKeys.push('subject');\n      }\n\n      if (localizedKeys.length !== 0) {\n        const localization = getLocalization(\n          this.props.action,\n          this.props.localization,\n          this.props.language\n        );\n\n        if (localization.isLocalized()) {\n          for (const key of localizedKeys) {\n            if (!(key in localization.localizedKeys)) {\n              missingLocalization = true;\n              break;\n            }\n          }\n        } else {\n          missingLocalization = true;\n        }\n      }\n    }\n\n    const notLocalizable = this.props.translating && localizedKeys.length === 0;\n\n    return cx({\n      [styles.action]: true,\n      [styles.has_router]:\n        this.props.renderNode.node.hasOwnProperty('router') &&\n        this.props.renderNode.node.router !== null,\n      [styles.translating]: this.props.translating,\n      [styles.not_localizable]: notLocalizable,\n      [styles.missing_localization]: missingLocalization,\n      [styles.localized]: !notLocalizable && !missingLocalization\n    });\n  }\n\n  public render(): JSX.Element {\n    const { name } = getTypeConfig(this.props.action.type);\n\n    const classes = this.getClasses();\n    const actionToInject = this.getAction();\n\n    let titleBarClass = (shared as any)[this.props.action.type] || shared.missing;\n    const actionClass = (styles as any)[this.props.action.type] || styles.missing;\n    const showRemoval = !this.props.translating;\n    const showMove = !this.props.first && !this.props.translating;\n\n    if (hasIssues(this.props.issues, this.props.translating, this.props.language)) {\n      titleBarClass = shared.missing;\n    }\n\n    const events = this.context.config.mutable\n      ? createClickHandler(this.handleActionClicked, () => this.props.selected)\n      : {};\n\n    const body = (\n      <>\n        <TitleBar\n          __className={titleBarClass}\n          title={name}\n          onRemoval={this.handleRemoval}\n          showRemoval={showRemoval}\n          showMove={showMove}\n          onMoveUp={this.handleMoveUp}\n          shouldCancelClick={() => this.props.selected}\n        />\n        <div className={styles.body + ' ' + actionClass} data-spec={actionBodySpecId}>\n          {this.props.render(actionToInject, this.context.config.endpoints)}\n        </div>\n      </>\n    );\n    return (\n      <div\n        id={`action-${this.props.action.uuid}`}\n        className={classes}\n        data-spec={actionContainerSpecId}\n      >\n        <div className={styles.overlay} data-spec={actionOverlaySpecId} />\n        <div {...events} data-spec={actionInteractiveDivSpecId}>\n          {this.props.scrollToAction && this.props.scrollToAction === this.props.action.uuid ? (\n            <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\n          ) : (\n            body\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: {\n    assetStore,\n    definition: { localization }\n  },\n  editorState: { language, translating, scrollToAction }\n}: AppState) => ({\n  scrollToAction,\n  assetStore,\n  language,\n  translating,\n  localization\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onOpenNodeEditor,\n      removeAction,\n      moveActionUp\n    },\n    dispatch\n  );\n\nconst ConnectedActionWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(ActionWrapper);\n\nexport default ConnectedActionWrapper;\n","import Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport Modal from 'components/modal/Modal';\nimport styles from 'components/simulator/LogEvent.module.scss';\nimport { Types } from 'config/interfaces';\nimport { Flow, Group, Label, Topic, Hint } from 'flowTypes';\nimport * as React from 'react';\nimport { createUUID, getURNPath } from 'utils';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nconst MAP_THUMB = require('static/images/map.jpg');\n\ninterface MsgProps {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments?: string[];\n  quick_replies?: string[];\n}\n\ninterface WebRequestLog {\n  url: string;\n  request: string;\n  response: string;\n}\n\ninterface ClassifierIntent {\n  name: string;\n  confidence: number;\n}\n\ninterface ClassifierEntity {\n  value: string;\n  confidence: number;\n}\n\nexport interface EventProps {\n  step_uuid: string;\n  uuid?: string;\n  created_on?: string;\n  type?: string;\n  field?: { key: string; name: string };\n  field_uuid?: string;\n  result_name?: string;\n  text?: string;\n  name?: string;\n  value?: string | { text: string };\n  body?: string;\n  addresses?: string[];\n  to?: string[];\n  subject?: string;\n  url?: string;\n  status?: string;\n  status_code?: number;\n  request?: string;\n  response?: string;\n  resthook?: string;\n  base_language?: string;\n  language?: string;\n  translations?: { [lang: string]: { [text: string]: string } };\n  groups?: Group[];\n  flow?: Flow;\n  groups_added?: Group[];\n  groups_removed?: Group[];\n  labels?: Label[];\n  msg?: MsgProps;\n  http_logs?: WebRequestLog[];\n  extra?: any;\n  urns?: string[];\n  service?: string;\n  classifier?: { uuid: string; name: string };\n  ticketer?: { uuid: string; name: string };\n  ticket?: { topic: Topic; body: string };\n  hint?: Hint;\n  timeout_seconds?: number;\n}\n\ninterface FlowEvent {\n  step_uuid: string;\n  type: string;\n}\n\ninterface AirtimeTransferEvent extends FlowEvent {\n  actual_amount: number;\n  desired_amount: number;\n  currency: string;\n  http_logs: WebRequestLog[];\n  recipient: string;\n  sender: string;\n}\n\ninterface LogEventState {\n  detailsVisible: boolean;\n}\n\nexport enum Direction {\n  MT,\n  MO\n}\n\nconst getStyleForDirection = (direction: Direction): string => {\n  return direction === Direction.MO ? styles.msg_received : styles.send_msg;\n};\n\nconst renderError = (error: string): JSX.Element => {\n  return (\n    <div className={styles.error}>\n      <span>Error: {error}</span>\n    </div>\n  );\n};\n\nconst renderInfo = (info: string): JSX.Element => {\n  // localized text can have html entities, so this isn't as dangerous as it looks\n  return (\n    <div key={info} className={styles.info}>\n      <span dangerouslySetInnerHTML={{ __html: info }} />\n    </div>\n  );\n};\n\nconst renderAttachment = (attachment: string): JSX.Element => {\n  const idx = attachment.indexOf(':');\n  if (idx > -1) {\n    const type = attachment.substr(0, idx);\n    const url = attachment.substr(idx + 1);\n    if (type.startsWith('audio')) {\n      return (\n        <div className={styles.audio_attachment}>\n          <div className={styles.media_player}>\n            <MediaPlayer url={url} />\n          </div>\n          <div className={styles.audio_text}>Audio Recording</div>\n        </div>\n      );\n    } else if (type.startsWith('image')) {\n      return <img src={url} alt=\"Attachment\" />;\n    } else if (type.startsWith('application')) {\n      return (\n        <div\n          onClick={() => {\n            window.open(url);\n          }}\n          style={{\n            cursor: 'pointer',\n            textDecoration: 'none',\n            padding: '10px 12px',\n            background: '#e6e6e6',\n            color: '#666'\n          }}\n        >\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div\n              className=\"fe-document-file-pdf\"\n              style={{\n                textDecoration: 'none',\n                fontSize: '20px'\n              }}\n            />\n            <div style={{ marginLeft: '5px', lineHeight: '16px' }}>\n              {i18n.t('document', 'Document')}\n            </div>\n          </div>\n        </div>\n      );\n    } else if (type.startsWith('geo')) {\n      return <img src={MAP_THUMB} alt=\"Attachment\" />;\n    } else if (type.startsWith('video')) {\n      return (\n        <div className={styles.video_attachment}>\n          <video controls={true} src={url} />\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nconst renderMessage = (text: string, attachments: string[], direction: Direction): JSX.Element => {\n  const attaches = attachments || [];\n\n  return (\n    <div className={getStyleForDirection(direction)}>\n      {attaches.map((attachment: string) => (\n        <div key={text + attachment}>{renderAttachment(attachment)}</div>\n      ))}\n      {text\n        ? text\n            .trim()\n            .split('\\n')\n            .map((item, key) => {\n              return (\n                <div key={createUUID()} className={styles.msg_text}>\n                  {item}\n                </div>\n              );\n            })\n        : null}\n    </div>\n  );\n};\n\n/**\n * Viewer for log events\n */\nexport default class LogEvent extends React.Component<EventProps, LogEventState> {\n  constructor(props: EventProps) {\n    super(props);\n    this.state = {\n      detailsVisible: false\n    };\n\n    this.showDetails = this.showDetails.bind(this);\n    this.getButtons = this.getButtons.bind(this);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: {\n        name: 'Ok',\n        onClick: () => {\n          this.setState({ detailsVisible: false });\n        }\n      }\n    };\n  }\n\n  private showDetails(): void {\n    this.setState({ detailsVisible: true });\n  }\n\n  private renderGroupsChanged(): JSX.Element {\n    let parts: string[] = [];\n    if (this.props.groups_added) {\n      const info = i18n.t('simulator.added_to_group', 'Added to');\n      parts.push(\n        info + ' ' + this.renderValueList(this.props.groups_added.map(group => group.name))\n      );\n    }\n    if (this.props.groups_removed) {\n      const info = i18n.t('simulator.removed_from_group', 'Removed from');\n      parts.push(\n        info + ' ' + this.renderValueList(this.props.groups_removed.map(group => group.name))\n      );\n    }\n\n    return renderInfo(parts.join('. '));\n  }\n\n  private renderLabelsAdded(): JSX.Element {\n    let info = i18n.t('simulator.input_labels_added', 'Message labeled with');\n\n    return renderInfo(\n      info + ' ' + this.renderValueList(this.props.labels.map(label => label.name))\n    );\n  }\n\n  private renderEmailSent(): JSX.Element {\n    const recipients = this.props.to || this.props.addresses;\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.email}>\n        <Trans\n          i18nKey=\"simulator.sent_email.summary\"\n          values={{ recipients: this.renderValueList(recipients), subject: this.props.subject }}\n        >\n          Sent email to [[recipients]] with subject \"[[subject]]\"\n        </Trans>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.sent_email.title', 'Email Details')}\n        headerClass={Types.send_email}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.email_details}>\n          <div className={styles.to}>\n            {i18n.t('email.to', 'To')}: {this.renderValueList(recipients)}\n          </div>\n          <div className={styles.subject}>\n            {i18n.t('email.subject', 'Subject')}: {this.props.subject}\n          </div>\n          <div className={styles.body}>{this.props.body}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderHTTPRequest(headerClass: Types, log: WebRequestLog): JSX.Element {\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.webhook}>\n        <span>Called {log.url}</span>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.httplog_dialog', 'HTTP Request Details')}\n        headerClass={headerClass}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.webhook_details}>\n          <div className={''}>{log.request}</div>\n          <div className={styles.response}>{log.response}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderWebhook(headerClass: Types): JSX.Element {\n    if (this.props.http_logs) {\n      return (\n        <>\n          {this.props.http_logs.map((log: WebRequestLog) => {\n            return this.renderHTTPRequest(headerClass, log);\n          })}\n        </>\n      );\n    }\n    if (this.props.url) {\n      return this.renderHTTPRequest(headerClass, this.props as WebRequestLog);\n    }\n  }\n\n  private renderClickable(element: JSX.Element, details: JSX.Element): JSX.Element {\n    return (\n      <div key={this.props.step_uuid}>\n        <div className={styles.has_detail} onClick={this.showDetails}>\n          {element}\n        </div>\n        <Modal show={this.state.detailsVisible}>\n          <div className={styles.event_viewer}>{details}</div>\n        </Modal>\n      </div>\n    );\n  }\n\n  private renderClassification(): JSX.Element {\n    return (\n      <table className={styles.classification}>\n        <tbody>\n          {(this.props.extra.intents || []).map((intent: ClassifierIntent) => (\n            <tr key={intent.name + intent.confidence}>\n              <td>{intent.name}</td>\n              <td>intent</td>\n              <td>{intent.confidence.toFixed(3)}</td>\n            </tr>\n          ))}\n\n          {Object.keys(this.props.extra.entities || []).map((key: string) => {\n            const entities = this.props.extra.entities[key];\n            return entities.map((entity: ClassifierEntity) =>\n              key !== entity.value ? (\n                <tr key={entity.value + entity.confidence}>\n                  <td>{entity.value}</td>\n                  <td>{key}</td>\n                  <td>{entity.confidence.toFixed(3)}</td>\n                </tr>\n              ) : null\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n\n  public renderLogEvent(): JSX.Element {\n    if (this.props.extra && this.props.extra.intents) {\n      return this.renderClassification();\n    }\n\n    switch (this.props.type) {\n      case 'msg_received':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MO);\n      case 'msg_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'ivr_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'error':\n        return renderError(this.props.text);\n      case 'failure':\n        return renderError(this.props.text);\n      case 'msg_wait':\n        return renderInfo(i18n.t('simulator.msg_wait', 'Waiting for reply'));\n      case 'contact_groups_changed':\n        return this.renderGroupsChanged();\n      case 'contact_urns_changed':\n        return renderInfo('Added a URN for the contact');\n      case 'contact_field_changed':\n        const value = this.getValue(this.props.value);\n        if (value !== '') {\n          return renderInfo(\n            i18n.t('simulator.contact_field_changed', 'Set contact \"[[field]]\" to \"[[value]]\"', {\n              field: this.props.field.name,\n              value: this.getValue(this.props.value)\n            })\n          );\n        } else {\n          return renderInfo(\n            i18n.t('simulator.contact_field_cleared', 'Cleared contact \"[[field]]\"', {\n              field: this.props.field.name\n            })\n          );\n        }\n      case 'run_result_changed':\n        return renderInfo(\n          i18n.t('simulator.run_result_changed', 'Set result \"[[field]]\" to \"[[value]]\"', {\n            field: this.props.name,\n            value: this.getValue(this.props.value)\n          })\n        );\n      case 'contact_name_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_name_changed', 'Set contact name to \"[[name]]\"', {\n            name: this.props.name\n          })\n        );\n      case 'email_created':\n      case 'email_sent':\n        return this.renderEmailSent();\n      case 'broadcast_created':\n        return renderMessage(\n          this.props.translations[this.props.base_language].text,\n          this.props.msg ? this.props.msg.attachments : [],\n          Direction.MT\n        );\n      case 'resthook_called':\n        return renderInfo(\n          i18n.t('simulator.resthook_called', 'Triggered flow event \"[[resthook]]\"', {\n            resthook: this.props.resthook\n          })\n        );\n      case 'service_called':\n        if (this.props.service === 'classifier') {\n          return this.renderWebhook(Types.call_classifier);\n        }\n        break;\n      case 'webhook_called':\n        return this.renderWebhook(Types.call_webhook);\n      case 'flow_entered':\n        return renderInfo(\n          i18n.t('simulator.flow_entered', 'Entered flow \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'session_triggered':\n        return renderInfo(\n          i18n.t('simulator.session_triggered', 'Started somebody else in \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'contact_language_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_language_changed', 'Set preferred language to \"[[language]]\"', {\n            language: this.props.language\n          })\n        );\n      case 'contact_status_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_status_changed', 'Set status to \"[[status]]\"', {\n            status: this.props.status\n          })\n        );\n      case 'info':\n        return renderInfo(this.props.text);\n      case 'input_labels_added':\n        return this.renderLabelsAdded();\n      case 'environment_refreshed':\n        return null;\n      case 'ticket_opened':\n        return renderInfo(\n          i18n.t('simulator.ticket_opened', 'Ticket opened with topic \"[[topic]]\"', {\n            topic: this.props.ticket.topic.name\n          })\n        );\n      case 'airtime_transferred':\n        const event = this.props as AirtimeTransferEvent;\n        return (\n          <>\n            {this.renderWebhook(Types.transfer_airtime)}\n\n            {renderInfo(\n              i18n.t(\n                'simulator.airtime_transferred',\n                'Transferred [[amount]] [[currency]] to [[recipient]]',\n                {\n                  amount: event.actual_amount,\n                  currency: event.currency,\n                  recipient: getURNPath(event.recipient)\n                }\n              )\n            )}\n          </>\n        );\n    }\n\n    // should only get here if we are get an unexpected event\n    console.log('Simulator render missing', this.props);\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return <div className={styles.evt}>{this.renderLogEvent()}</div>;\n  }\n\n  /**\n   * Helper to render a list of values with each value quoted\n   */\n  private renderValueList(values: string[]): string {\n    let text = '';\n    let delim = '';\n    values.forEach(value => {\n      text += `${delim}\"${value}\"`;\n      delim = ', ';\n    });\n    return text;\n  }\n\n  /**\n   * Helper for value fields which can be an object (contact_field_changed) or string (run_result_changed)\n   */\n  private getValue(value: string | { text: string } | null): string {\n    if (!value) {\n      return '';\n    } else if (typeof value === 'string') {\n      return value;\n    }\n    return value.text;\n  }\n}\n","import * as React from 'react';\n\nimport styles from './DragHelper.module.scss';\nimport { Trans } from 'react-i18next';\n\ninterface DragHelperState {\n  visible: boolean;\n}\n\nexport default class DragHelper extends React.Component<{}, DragHelperState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  public componentDidMount(): void {\n    window.setTimeout(() => {\n      if (!this.state.visible) {\n        this.setState({ visible: true });\n      }\n    }, 100);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.drag_helper + ' ' + (this.state.visible ? styles.visible : '')}>\n        <div className={styles.arrow}>\n          <div className={styles.tail} />\n          <div className={styles.head} />\n        </div>\n        <div className={styles.help_text}>\n          <Trans i18nKey=\"drag_helper\">\n            To connect nodes, <span className={styles.bold}>drag</span> from the red circle.\n          </Trans>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Exit } from 'flowTypes';\n\nexport const getExitActivityKey = (exit: Exit) => {\n  return exit.uuid + ':' + exit.destination_uuid;\n};\n","import * as React from 'react';\nimport { range } from 'utils';\n\nimport styles from './Loading.module.scss';\n\nexport interface LoadingProps {\n  size: number;\n  units: number;\n  color: string;\n  square?: boolean;\n}\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface LoadingState {\n  color: Color;\n}\n\nconst hexToRgb = (hex: string): Color => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      }\n    : null;\n};\n\nexport default class Loading extends React.Component<LoadingProps, LoadingState> {\n  constructor(props: LoadingProps) {\n    super(props);\n\n    this.state = {\n      color: hexToRgb(props.color)\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={styles.loading}\n        style={{\n          width: this.props.size * this.props.units * 2,\n          height: this.props.size\n        }}\n      >\n        {range(0, this.props.units).map((num: number) => (\n          <div\n            key={`ball_${num}`}\n            style={{\n              borderRadius: this.props.square ? '0' : '50%',\n              width: this.props.size,\n              height: this.props.size,\n              margin: this.props.size / 3,\n              animationDelay: `-${1 - num * (1 / this.props.units)}s`,\n              background: `rgba(${this.state.color.r},${this.state.color.g},${\n                this.state.color.b\n              }, ${1 - num * (1 / this.props.units)})`\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport interface PortalProps {\n  id?: string;\n}\n\nexport class Portal extends React.Component<PortalProps> {\n  private el: HTMLDivElement = null;\n  private portalRoot: HTMLElement = null;\n\n  constructor(props: PortalProps) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    window.setTimeout(() => {\n      this.portalRoot = document.getElementById(this.props.id || 'portal-root');\n      if (this.portalRoot) {\n        this.portalRoot.appendChild(this.el);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.portalRoot) {\n      this.el.remove();\n    }\n  }\n\n  componentDidUpdate(prevProps: PortalProps) {\n    if (this.props.id && prevProps.id !== this.props.id) {\n      window.setTimeout(() => {\n        this.portalRoot = document.getElementById(this.props.id || 'portal-root');\n        this.portalRoot.appendChild(this.el);\n      }, 100);\n    }\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n","import { EventProps } from 'components/simulator/LogEvent';\nimport { FlowDefinition } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { assetMapToList } from 'store/helpers';\nimport { createUUID } from 'utils';\n\nexport const DEFAULT_KEY = '__default__';\n\nconst SIMULATOR_CHANNEL = {\n  uuid: createUUID(),\n  name: 'Simulator',\n  address: '+12065550000',\n  schemes: ['tel'],\n  roles: ['send', 'receive']\n};\n\ninterface SimAsset {\n  type: AssetType;\n  url: string;\n  content: any;\n}\n\nexport const getTime = (): string => {\n  const now = new Date();\n  const mins = now.getMinutes();\n  let minStr = '' + mins;\n  if (mins < 10) {\n    minStr = '0' + mins;\n  }\n  return Math.abs(12 - now.getHours()) + ':' + minStr;\n};\n\nexport const getSimulationAssets = (assets: AssetStore, flow: FlowDefinition): any => {\n  const simAssets: SimAsset[] = [];\n\n  // our group set asset\n  simAssets.push({\n    type: AssetType.Group,\n    url: assets.groups.endpoint,\n    content: assetMapToList(assets.groups.items)\n  });\n\n  // our fields\n  simAssets.push({\n    type: AssetType.Field,\n    url: assets.fields.endpoint,\n    content: assetMapToList(assets.fields.items)\n  });\n\n  // our labels\n  simAssets.push({\n    type: AssetType.Label,\n    url: assets.labels.endpoint,\n    content: assetMapToList(assets.labels.items)\n  });\n\n  // our channels\n  simAssets.push({\n    type: AssetType.Channel,\n    url: assets.channels.endpoint,\n    content: [SIMULATOR_CHANNEL]\n  });\n\n  simAssets.push({\n    type: AssetType.Flow,\n    url: assets.flows.endpoint + `${flow.uuid}/`,\n    content: flow\n  });\n\n  const payload = {\n    assets: simAssets,\n    asset_server: {\n      type_urls: {\n        [AssetType.Flow]: assets.flows.endpoint,\n        [AssetType.Field]: assets.fields.endpoint,\n        [AssetType.Channel]: assets.channels.endpoint,\n        [AssetType.Group]: assets.groups.endpoint,\n        [AssetType.Label]: assets.labels.endpoint\n      }\n    }\n  };\n\n  return payload;\n};\n\nexport const isMessage = (event: EventProps): boolean => {\n  return !!['msg_created', 'msg_received', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const isMT = (event: EventProps): boolean => {\n  return !!['msg_created', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const hasPopulatedKey = (obj: any): boolean => {\n  if (obj) {\n    Object.keys(obj).forEach((key: string) => {\n      return true;\n    });\n  }\n  return false;\n};\n\nexport const pruneEmpty = (obj: any): any => {\n  if (typeof obj === 'object') {\n    Object.keys(obj).forEach((key: string) => {\n      if (\n        !obj[key] ||\n        (Object.keys(obj[key]).length === 1 && obj[key].hasOwnProperty(DEFAULT_KEY))\n      ) {\n        delete obj[key];\n      } else {\n        pruneEmpty(obj[key]);\n\n        // now see if we have any new leaves\n        if (obj[key] !== null && typeof obj[key] === 'object') {\n          if (Object.keys(obj[key]).length === 0) {\n            delete obj[key];\n          }\n        }\n      }\n    });\n  }\n\n  return obj;\n};\n","import * as React from 'react';\nimport ReactModal from 'react-modal';\n\ninterface CustomStyles {\n  content: { [cssProperty: string]: string | number };\n}\n\nexport interface ModalProps {\n  show: boolean;\n  onClose?(): void;\n\n  onModalOpen?: any;\n  width?: string;\n}\n\n// A base modal for displaying messages or performing single button actions\nexport default class Modal extends React.Component<ModalProps> {\n  public render(): JSX.Element {\n    const customStyles: CustomStyles = {\n      content: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '40px',\n        bottom: 'initial',\n        padding: 'none',\n        borderRadius: 'none',\n        outline: 'none',\n        width: this.props.width ? this.props.width : '700px',\n        border: 'none'\n      }\n    };\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={this.props.show}\n        onAfterOpen={this.props.onModalOpen}\n        onRequestClose={this.props.onClose}\n        style={customStyles}\n        shouldCloseOnOverlayClick={false}\n        contentLabel=\"Modal\"\n      >\n        {this.props.children}\n      </ReactModal>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as axios from 'axios';\nimport { getTime, isMessage, isMT } from 'components/simulator/helpers';\nimport LogEvent, { EventProps } from 'components/simulator/LogEvent';\nimport ContextExplorer from './ContextExplorer';\nimport styles from 'components/simulator/Simulator.module.scss';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { getURL } from 'external';\nimport { FlowDefinition, Group } from 'flowTypes';\nimport update from 'immutability-helper';\nimport { ReactNode } from 'react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Activity, RecentContact } from 'store/editor';\nimport { AssetStore, RenderNodeMap, Asset } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport { DispatchWithState, MergeEditorState } from 'store/thunks';\nimport { createUUID } from 'utils';\nimport { PopTabType } from 'config/interfaces';\nimport i18n from 'config/i18n';\nimport { PopTab } from 'components/poptab/PopTab';\n\nexport const SIMULATOR_CONTACT_UUID = 'fb3787ab-2eda-48a0-a2bc-e2ddadec1286';\nconst SIMULATOR_CONTACT_URNS = ['tel:+12065551212'];\nconst SIMULATOR_CONTACT_DISPLAY = '+1 (206) 555 1212';\n\nconst MESSAGE_DELAY_MS = 200;\n\nconst MAP_THUMB = require('static/images/map.jpg');\nconst IMAGE_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_a.jpg';\nconst IMAGE_B = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_b.jpg';\nconst IMAGE_C = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_c.jpg';\nconst AUDIO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_audio_a.mp3';\nconst VIDEO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a.mp4';\n\nconst VIDEO_A_THUMB =\n  'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a_thumb.jpg';\n\ninterface PostMessage {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments: string[];\n}\n\ninterface Message {\n  text: string;\n  inbound: boolean;\n}\n\nexport interface SimulatorStoreProps {\n  nodes: RenderNodeMap;\n  definition: FlowDefinition;\n  assetStore: AssetStore;\n\n  activity: Activity;\n\n  language: Asset;\n\n  // TODO: take away responsibility of simulator for resetting this\n  liveActivity: Activity;\n}\n\nexport interface SimulatorPassedProps {\n  mergeEditorState: MergeEditorState;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  popped: string;\n}\n\nexport type SimulatorProps = SimulatorStoreProps & SimulatorPassedProps;\n\nenum DrawerType {\n  audio = 'audio',\n  images = 'images',\n  videos = 'videos',\n  location = 'location',\n  digit = 'digit',\n  digits = 'digits',\n  quickReplies = 'quickReplies'\n}\n\ninterface SimulatorState {\n  visible: boolean;\n  session?: Session;\n  context?: any;\n  contact: Contact;\n  channel: string;\n  events: EventProps[];\n  segments: Segment[];\n  active: boolean;\n  time: string;\n\n  keypadEntry: string;\n\n  quickReplies?: string[];\n\n  // are we currently simulating a sprint\n  sprinting: boolean;\n\n  // is our drawer open\n  drawerOpen: boolean;\n\n  // what type of drawer are we looking at\n  drawerType?: DrawerType;\n\n  // how tall our drawer is\n  drawerHeight: number;\n\n  // is our attachment type selection open\n  attachmentOptionsVisible: boolean;\n\n  // if we can see our context explorer\n  contextExplorerVisible: boolean;\n\n  // are we at a wait hint, ie, a forced attachment\n  waitingForHint: boolean;\n}\n\ninterface Contact {\n  uuid: string;\n  urns: string[];\n  fields: {};\n  groups: Group[];\n}\n\ninterface Step {\n  arrived_on: Date;\n  uuid: string;\n  exit_uuid: string;\n  node_uuid: string;\n}\n\ninterface Run {\n  path: Step[];\n  flow_uuid: string;\n  status: string;\n  events?: EventProps[];\n}\n\ninterface Segment {\n  flow_uuid: string;\n  node_uuid: string;\n  exit_uuid: string;\n  operand: string;\n  destination_uuid: string;\n  time: string;\n}\n\ninterface RunContext {\n  contact: Contact;\n  session: Session;\n  context?: any;\n  events: EventProps[];\n  segments: Segment[];\n}\n\ninterface Session {\n  runs: Run[];\n  contact: Contact;\n  input?: any;\n  status: string;\n}\n\n/**\n * Our dev console for simulating or testing expressions\n */\nexport class Simulator extends React.Component<SimulatorProps, SimulatorState> {\n  private debug: Session[] = [];\n  private flows: FlowDefinition[] = [];\n  private currentFlow: string;\n  private inputBox: HTMLInputElement;\n\n  private drawerEle: HTMLDivElement;\n\n  // marks the bottom of our chat\n  private bottom: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: SimulatorProps, context: ConfigProviderContext) {\n    super(props);\n    this.state = {\n      active: false,\n      visible: false,\n      events: [],\n      segments: [],\n      contact: {\n        uuid: SIMULATOR_CONTACT_UUID,\n        urns: SIMULATOR_CONTACT_URNS,\n        fields: {},\n        groups: []\n      },\n      keypadEntry: '',\n      drawerHeight: 0,\n      channel: createUUID(),\n      time: getTime(),\n      waitingForHint: false,\n      drawerOpen: false,\n      attachmentOptionsVisible: false,\n      contextExplorerVisible: false,\n      sprinting: false\n    };\n    this.bottomRef = this.bottomRef.bind(this);\n    this.inputBoxRef = this.inputBoxRef.bind(this);\n    this.currentFlow = this.props.definition.uuid;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/]\n    });\n  }\n\n  private bottomRef(ref: any): void {\n    return (this.bottom = ref);\n  }\n\n  private inputBoxRef(ref: any): void {\n    this.inputBox = ref;\n  }\n\n  private updateActivity(): void {\n    if (this.state.session) {\n      const pathCounts: { [key: string]: number } = {};\n      const nodeCounts: { [nodeUUID: string]: number } = {};\n      const recentContacts: { [key: string]: RecentContact[] } = {};\n      let activeFlow: string;\n\n      // iterate thru segments to get path segment counts and recent contacts\n      for (const seg of this.state.segments) {\n        const key = seg.exit_uuid + ':' + seg.destination_uuid;\n\n        let pathCount = pathCounts[key] || 0;\n        pathCounts[key] = pathCount + 1;\n\n        let operand = seg.operand || '';\n        if (operand.length > 100) {\n          operand = operand.substring(0, 97) + '...';\n        }\n\n        let recent = recentContacts[key] || [];\n        recent.unshift({\n          contact: { uuid: SIMULATOR_CONTACT_UUID, name: SIMULATOR_CONTACT_DISPLAY },\n          operand: seg.operand,\n          time: seg.time\n        });\n        if (recent.length > 5) {\n          // keep capped to 5\n          recent.pop();\n        }\n        recentContacts[key] = recent;\n      }\n\n      // set node counts on the last step of any active/waiting runs\n      for (const run of this.state.session.runs) {\n        if (run.status === 'active' || run.status === 'waiting') {\n          let finalStep: Step = null;\n          if (run.path.length > 0) {\n            finalStep = run.path[run.path.length - 1];\n          }\n\n          if (finalStep) {\n            let count = nodeCounts[finalStep.node_uuid] || 0;\n            nodeCounts[finalStep.node_uuid] = count + 1;\n          }\n          activeFlow = run.flow_uuid;\n        }\n      }\n\n      this.props.mergeEditorState({\n        activity: {\n          segments: pathCounts,\n          nodes: nodeCounts,\n          recentContacts: recentContacts\n        }\n      });\n\n      if (activeFlow && activeFlow !== this.currentFlow) {\n        this.currentFlow = activeFlow;\n      }\n    }\n  }\n\n  private updateEvents(events: EventProps[], session: Session, callback: () => void): void {\n    if (events && events.length > 0) {\n      const toAdd = [];\n\n      let quickReplies: string[] = null;\n\n      let messageFound = false;\n      while (events.length > 0 && !messageFound) {\n        const event = events.shift();\n\n        if (isMessage(event)) {\n          messageFound = true;\n\n          if (isMT(event)) {\n            // save off any quick replies we might have\n            if (event.msg.quick_replies) {\n              quickReplies = event.msg.quick_replies;\n            }\n          }\n        }\n\n        toAdd.push(event);\n      }\n\n      const newEvents = update(this.state.events, {\n        $push: toAdd\n      }) as EventProps[];\n      const newState: Partial<SimulatorState> = { events: newEvents };\n\n      if (quickReplies !== null) {\n        newState.quickReplies = quickReplies;\n      }\n\n      this.scrollToBottom();\n\n      this.setState(newState as SimulatorState, () => {\n        if (events.length === 0) {\n          callback();\n        } else {\n          window.setTimeout(() => {\n            this.updateEvents(events, session, callback);\n          }, MESSAGE_DELAY_MS);\n        }\n      });\n    } else {\n      callback();\n    }\n  }\n\n  private updateRunContext(runContext: RunContext, msg?: PostMessage): void {\n    const wasJustActive = this.state.active || (runContext.events && runContext.events.length > 0);\n    this.setState({ quickReplies: [] }, () => {\n      if (!runContext.events || (runContext.events.length === 0 && msg)) {\n        const runs = runContext.session.runs;\n        const run = runs[runs.length - 1];\n        const step = run.path[run.path.length - 1];\n\n        runContext.events = [\n          {\n            msg: {\n              uuid: createUUID(),\n              urn: this.state.contact.urns[0],\n              text: msg.text,\n              attachments: msg.attachments\n            },\n            type: 'msg_created',\n            created_on: new Date().toISOString(),\n            step_uuid: step.uuid\n          }\n        ];\n      }\n\n      // if session is waiting, find the wait event\n      let waiting = runContext.session.status === 'waiting';\n      let waitEvent: EventProps = null;\n      if (waiting) {\n        for (const evt of runContext.events) {\n          if (evt.type.endsWith('_wait')) {\n            waitEvent = evt;\n          }\n        }\n      }\n\n      this.updateEvents(runContext.events, runContext.session, () => {\n        let newEvents = this.state.events;\n        if (!waiting && wasJustActive) {\n          newEvents = update(this.state.events, {\n            $push: [\n              {\n                type: 'info',\n                text: i18n.t('simulator.flow_exited', 'Exited flow'),\n                created_on: new Date()\n              } as any\n            ]\n          }) as EventProps[];\n        }\n\n        const waitingForHint = waitEvent && waitEvent.hint !== undefined;\n\n        let drawerType = null;\n        if (waitingForHint) {\n          switch (waitEvent.hint.type) {\n            case 'audio':\n              drawerType = DrawerType.audio;\n              break;\n            case 'video':\n              drawerType = DrawerType.videos;\n              break;\n            case 'image':\n              drawerType = DrawerType.images;\n              break;\n            case 'location':\n              drawerType = DrawerType.location;\n              break;\n            case 'digits':\n              drawerType = DrawerType.digit;\n              if (waitEvent.hint.count !== 1) {\n                drawerType = DrawerType.digits;\n              }\n              break;\n            default:\n              console.log('Unknown hint', waitEvent.hint.type);\n          }\n        }\n\n        let drawerOpen = waitingForHint;\n\n        // if we have quick replies, open our drawe with attachment options\n        if (!drawerType && this.hasQuickReplies()) {\n          drawerType = DrawerType.quickReplies;\n          drawerOpen = true;\n        }\n\n        this.setState(\n          {\n            active: waiting,\n            context: runContext.context,\n            sprinting: false,\n            session: runContext.session,\n            events: newEvents,\n            segments: this.state.segments.concat(runContext.segments || []),\n            drawerOpen,\n            drawerType,\n            waitingForHint\n          },\n          () => {\n            this.updateActivity();\n            this.handleFocusUpdate();\n          }\n        );\n      });\n    });\n  }\n\n  private startFlow(): void {\n    const now = new Date().toISOString();\n    const contact: any = {\n      uuid: SIMULATOR_CONTACT_UUID,\n      urns: SIMULATOR_CONTACT_URNS,\n      fields: {},\n      groups: [],\n      created_on: now\n    };\n\n    // use the current displayed language when simulating\n    if (this.props.language) {\n      contact.language = this.props.language.id;\n    }\n\n    // reset our events and contact\n    this.setState(\n      {\n        sprinting: true,\n        drawerOpen: false,\n        attachmentOptionsVisible: false,\n        events: [],\n        segments: []\n      },\n      () => {\n        const body: any = {\n          contact: this.state.contact,\n          flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n          trigger: {\n            type: 'manual',\n            environment: {\n              date_format: 'DD-MM-YYYY',\n              time_format: 'hh:mm',\n              timezone: 'America/New_York',\n              languages: []\n            },\n            contact,\n            flow: {\n              uuid: this.props.definition.uuid,\n              name: this.props.definition.name\n            },\n            params: {},\n            triggered_on: now\n          }\n        };\n\n        axios.default\n          .post(getURL(this.context.config.endpoints.simulateStart), JSON.stringify(body, null, 2))\n          .then((response: axios.AxiosResponse) => {\n            this.updateRunContext(response.data as RunContext);\n          });\n      }\n    );\n  }\n\n  private resume(text: string, attachment?: string): void {\n    if (!text && !attachment) {\n      return;\n    }\n\n    if (text === '\\\\debug') {\n      console.log(JSON.stringify(this.debug, null, 2));\n      return;\n    }\n\n    if (text === '\\\\recalc') {\n      console.log('recal..');\n      // this.props.plumberRepaint();\n      return;\n    }\n\n    this.setState({ sprinting: true, attachmentOptionsVisible: false, drawerOpen: false }, () => {\n      const now = new Date().toISOString();\n\n      const msg: PostMessage = {\n        text,\n        uuid: createUUID(),\n        urn: this.state.session.contact.urns[0],\n        attachments: attachment ? [attachment] : []\n      };\n\n      const body: any = {\n        flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n        session: this.state.session,\n        resume: {\n          type: 'msg',\n          msg,\n          resumed_on: now,\n          contact: this.state.session.contact\n        }\n      };\n\n      axios.default\n        .post(getURL(this.context.config.endpoints.simulateResume), JSON.stringify(body, null, 2))\n        .then((response: axios.AxiosResponse) => {\n          this.updateRunContext(response.data as RunContext, msg);\n        })\n        .catch(error => {\n          if (error.response.status) {\n          }\n          const events = update(this.state.events, {\n            $push: [\n              {\n                type: 'error',\n                text:\n                  error.response.status > 499\n                    ? 'Server error, try again later'\n                    : error.response.data.error\n              } as any\n            ]\n          }) as EventProps[];\n          this.setState({ events });\n        });\n    });\n  }\n\n  private onReset(event: any): void {\n    this.startFlow();\n  }\n\n  private scrollToBottom(delay?: number): void {\n    const wait = delay || 0;\n    if (this.bottom) {\n      window.setTimeout(() => {\n        if (this.bottom) {\n          this.bottom.scrollIntoView(false);\n        }\n      }, wait);\n    }\n  }\n\n  public componentDidUpdate(prevProps: SimulatorProps, prevState: SimulatorState): void {\n    if (this.drawerEle !== null) {\n      if (\n        prevState.drawerHeight !== this.drawerEle.clientHeight ||\n        prevState.drawerOpen !== this.state.drawerOpen\n      ) {\n        this.setState({ drawerHeight: this.drawerEle.clientHeight }, () => {\n          this.scrollToBottom(800);\n        });\n      }\n    }\n  }\n\n  private onKeyUp(event: any): void {\n    if (event.key === 'Enter') {\n      const ele = event.target;\n      const text = ele.value;\n      ele.value = '';\n      this.resume(text);\n    }\n  }\n\n  private onToggle(): void {\n    const newVisible = !this.state.visible;\n\n    this.props.onToggled(newVisible, PopTabType.SIMULATOR);\n\n    this.props.mergeEditorState({ simulating: newVisible });\n\n    this.setState({ visible: newVisible, contextExplorerVisible: false }, () => {\n      // clear our viewing definition\n      if (!this.state.visible) {\n        window.setTimeout(() => {\n          this.props.mergeEditorState({ activity: this.props.liveActivity });\n        }, 500);\n      } else {\n        this.updateActivity();\n\n        // start our flow if we haven't already\n        if (this.state.events.length === 0) {\n          this.startFlow();\n        }\n\n        this.handleFocusUpdate();\n      }\n    });\n  }\n\n  private handleFocusUpdate(): void {\n    if (this.inputBox) {\n      this.inputBox.focus();\n    }\n  }\n\n  private sendAttachment(attachment: string): void {\n    this.setState({ drawerOpen: false, attachmentOptionsVisible: false }, () => {\n      window.setTimeout(() => {\n        this.resume(null, attachment);\n      }, 200);\n    });\n  }\n\n  private getImageDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_A);\n          }}\n        >\n          <img src={IMAGE_A} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_B);\n          }}\n        >\n          <img src={IMAGE_B} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_C);\n          }}\n        >\n          <img src={IMAGE_C} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  public getLocationDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.map_thumb}\n        onClick={() => {\n          this.sendAttachment('geo:2.904194,-79.003418');\n        }}\n      >\n        <img src={MAP_THUMB} alt=\"Attachment\" />\n      </div>\n    );\n  }\n\n  private getAudioDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.audio_picker}\n        onClick={() => {\n          this.sendAttachment('audio/mp3:' + AUDIO_A);\n        }}\n      >\n        <div className={styles.audio_icon + ' fe-mic'} />\n        <div className={styles.audio_message}>Upload Audio</div>\n      </div>\n    );\n  }\n\n  private getVideoDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  private getQuickRepliesDrawer(): JSX.Element {\n    return (\n      <div className={styles.quick_replies}>\n        {this.state.quickReplies.map(reply => (\n          <div\n            className={styles.quick_reply}\n            onClick={() => {\n              this.resume(reply);\n            }}\n            key={`reply_${reply}`}\n          >\n            {reply}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private handleKeyPress(btn: string, multiple: boolean): void {\n    if (!multiple) {\n      this.resume(btn);\n    } else {\n      if (btn === '#') {\n        this.resume(this.state.keypadEntry);\n        this.setState({ keypadEntry: '' });\n      } else {\n        this.setState((prevState: SimulatorState) => {\n          return { keypadEntry: prevState.keypadEntry += btn };\n        });\n      }\n    }\n  }\n\n  private getKeyRow(keys: string[], multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.row}>\n        {keys.map((key: string) => {\n          return (\n            <div\n              key={'btn_' + key}\n              onClick={() => {\n                this.handleKeyPress(key, multiple);\n              }}\n              className={styles.key}\n            >\n              {key}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private getKeypadDrawer(multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.keypad}>\n        {multiple ? <div className={styles.keypad_entry}>{this.state.keypadEntry}</div> : null}\n        <div className={styles.keys}>\n          {this.getKeyRow(['1', '2', '3'], multiple)}\n          {this.getKeyRow(['4', '5', '6'], multiple)}\n          {this.getKeyRow(['7', '8', '9'], multiple)}\n          {this.getKeyRow(['*', '0', '#'], multiple)}\n        </div>\n      </div>\n    );\n  }\n\n  private getDrawerContents(): JSX.Element {\n    switch (this.state.drawerType) {\n      case DrawerType.location:\n        return this.getLocationDrawer();\n      case DrawerType.audio:\n        return this.getAudioDrawer();\n      case DrawerType.images:\n        return this.getImageDrawer();\n      case DrawerType.videos:\n        return this.getVideoDrawer();\n      case DrawerType.quickReplies:\n        return this.getQuickRepliesDrawer();\n      case DrawerType.digits:\n      case DrawerType.digit:\n        return this.getKeypadDrawer(this.state.drawerType === DrawerType.digits);\n    }\n    return null;\n  }\n\n  private handleDrawerRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.drawerEle = ref);\n  }\n\n  public getDrawer(): JSX.Element {\n    const style: any = {};\n\n    if (this.state.drawerOpen) {\n      style.bottom = 50;\n\n      // are we being forced open\n      if (this.state.waitingForHint) {\n        style.bottom = 25;\n        style.zIndex = 150;\n        style.paddingBottom = 10;\n      }\n    } else {\n      style.bottom = -this.state.drawerHeight;\n    }\n\n    return (\n      <div\n        ref={this.handleDrawerRef}\n        style={style}\n        className={\n          styles.drawer +\n          ' ' +\n          (this.state.drawerOpen ? styles.drawer_visible : '') +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? '' : styles.forced)\n        }\n      >\n        {this.getDrawerContents()}\n      </div>\n    );\n  }\n\n  private hasQuickReplies(): boolean {\n    return (this.state.quickReplies || []).length > 0;\n  }\n\n  private handleHideAttachments(): void {\n    this.setState(\n      {\n        attachmentOptionsVisible: false,\n        drawerOpen: false\n      },\n      () => {\n        if (this.hasQuickReplies()) {\n          window.setTimeout(() => {\n            this.showAttachmentDrawer(DrawerType.quickReplies);\n          }, 300);\n        }\n      }\n    );\n  }\n\n  private getAttachmentButton(icon: string, drawerType: DrawerType): JSX.Element {\n    return (\n      <div\n        className={icon}\n        onClick={() => {\n          this.showAttachmentDrawer(drawerType);\n        }}\n      />\n    );\n  }\n\n  private getAttachmentOptions(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.attachment_buttons +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? styles.visible : '')\n        }\n      >\n        <div className=\"fe-x\" onClick={this.handleHideAttachments} />\n        {this.getAttachmentButton('fe-picture2', DrawerType.images)}\n        {this.getAttachmentButton('fe-video', DrawerType.videos)}\n        {this.getAttachmentButton('fe-mic', DrawerType.audio)}\n        {this.getAttachmentButton('fe-map-marker', DrawerType.location)}\n      </div>\n    );\n  }\n\n  private handleContextExplorerClose(): void {\n    this.setState({ contextExplorerVisible: false });\n  }\n\n  private getContextExplorer(): JSX.Element {\n    return (\n      <ContextExplorer\n        visible={this.state.contextExplorerVisible}\n        onClose={this.handleContextExplorerClose}\n        contents={this.state.context}\n      />\n    );\n  }\n\n  private handleHideAttachmentDrawer(): void {\n    this.setState({ drawerOpen: false });\n  }\n\n  private showAttachmentDrawer(drawerType: DrawerType): void {\n    // if we are already open but a different type, hide ourselves and reopen with the new type\n    if (this.state.drawerOpen) {\n      // if that type is already open, its a noop\n      if (drawerType === this.state.drawerType) {\n        return;\n      }\n\n      this.handleHideAttachmentDrawer();\n      window.setTimeout(() => {\n        this.showAttachmentDrawer(drawerType);\n      }, 300);\n    } else {\n      this.setState((prevState: SimulatorState) => {\n        return { drawerOpen: true, drawerType };\n      });\n    }\n  }\n\n  public render(): ReactNode {\n    const messages: JSX.Element[] = [];\n    for (const event of this.state.events) {\n      messages.push(<LogEvent {...event} key={event.type + '_' + String(event.created_on)} />);\n    }\n\n    const hidden = this.props.popped && this.props.popped !== PopTabType.SIMULATOR;\n    const simHidden = hidden || !this.state.visible ? styles.sim_hidden : '';\n\n    const messagesStyle: any = {\n      height: 366 - (this.state.drawerOpen ? this.state.drawerHeight - 20 : 0)\n    };\n\n    // if attachments are forced open, account for missing attachment choice panel\n    if (this.state.drawerOpen && this.state.waitingForHint) {\n      messagesStyle.height += 25;\n    }\n\n    return (\n      <div className={hidden ? styles.tab_hidden : ''}>\n        <PopTab\n          header={i18n.t('simulator.header', 'Simulator')}\n          color=\"#2db379\"\n          icon=\"fe-smartphone\"\n          label={i18n.t('simulator.label', 'Simulator')}\n          top=\"220px\"\n          popTop=\"0px\"\n          custom={true}\n          visible={this.state.visible}\n          onShow={this.onToggle}\n          onHide={this.onToggle}\n        >\n          <div id=\"sim_container\" className={styles.sim_container}>\n            <div>\n              <div id=\"simulator\" className={styles.simulator + ' ' + simHidden} key={'sim'}>\n                {this.getContextExplorer()}\n\n                <div className={styles.screen}>\n                  <div className={styles.header}>\n                    <div className={styles.close + ' fe-x'} onClick={this.onToggle} />\n                  </div>\n                  <div className={styles.messages} style={messagesStyle}>\n                    {messages}\n                    <div\n                      id=\"bottom\"\n                      style={{ float: 'left', clear: 'both', marginTop: 20 }}\n                      ref={this.bottomRef}\n                    />\n                  </div>\n                  <div className={styles.controls}>\n                    <input\n                      ref={this.inputBoxRef}\n                      type=\"text\"\n                      onKeyUp={this.onKeyUp}\n                      disabled={this.state.sprinting}\n                      placeholder={\n                        this.state.active\n                          ? i18n.t('simulator.prompt.message', 'Enter message')\n                          : i18n.t('simulator.prompt.restart', 'Press home to start again')\n                      }\n                    />\n                    <div className={styles.show_attachments_button}>\n                      <div\n                        className=\"fe-paperclip\"\n                        onClick={() => {\n                          this.setState({\n                            attachmentOptionsVisible: true,\n                            drawerOpen: false\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                  {this.getAttachmentOptions()}\n                  {this.getDrawer()}\n                  <div className={styles.footer}>\n                    {!this.state.contextExplorerVisible ? (\n                      <div className={styles.show_context_button}>\n                        <div\n                          className=\"context-button\"\n                          onClick={() => {\n                            this.setState({\n                              contextExplorerVisible: true\n                            });\n                          }}\n                        >\n                          <span className=\"fe-at-sign\"></span>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className={styles.show_context_button}>\n                        <div\n                          className=\"context-button\"\n                          onClick={() => {\n                            this.setState({\n                              contextExplorerVisible: false\n                            });\n                          }}\n                        >\n                          <span className=\"fe-x\"></span>\n                        </div>\n                      </div>\n                    )}\n\n                    <span\n                      className={\n                        styles.reset + ' ' + (this.state.active ? styles.active : styles.inactive)\n                      }\n                      onClick={this.onReset}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore },\n  editorState: { liveActivity, activity, language }\n}: AppState) => ({\n  liveActivity,\n  activity,\n  assetStore,\n  definition,\n  nodes,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => bindActionCreators({}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Simulator);\n","import * as React from 'react';\nimport styles from './ContextExplorer.module.scss';\nimport { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { copyToClipboard } from 'utils';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { DEFAULT_KEY, pruneEmpty } from './helpers';\n\nconst cx: any = classNames.bind(styles);\n\ntype PathStep = number | string;\n\nexport interface ContextExplorerProps {\n  visible: boolean;\n  onClose: () => void;\n  contents: any;\n}\n\ninterface ContextExplorerState {\n  opened: {};\n  expression: string;\n  messageVisible: boolean;\n  message: string;\n  showEmpty: boolean;\n}\n\nexport default class ContextExplorer extends React.Component<\n  ContextExplorerProps,\n  ContextExplorerState\n> {\n  constructor(props: ContextExplorerProps) {\n    super(props);\n    this.state = {\n      opened: {},\n      expression: null,\n      messageVisible: false,\n      showEmpty: false,\n      message: null\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleHide(): void {\n    this.props.onClose();\n  }\n\n  private isOpen(path: PathStep[]): boolean {\n    let openState: any = this.state.opened;\n    for (const step of path) {\n      openState = openState[step];\n      if (!openState) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private handleCopyPath(key: PathStep, prevPath: PathStep[]) {\n    const path: PathStep[] = [...prevPath, key];\n    const expression = '@' + path.join('.');\n    copyToClipboard(expression);\n    this.setState({ expression, messageVisible: true, message: null }, () => {\n      window.setTimeout(() => {\n        if (this.state.expression === expression) {\n          this.setState({ messageVisible: false });\n        }\n      }, 1500);\n    });\n  }\n\n  private handleToggleHide(): void {\n    const message = this.state.showEmpty\n      ? i18n.t('context_explorer.hide_empty', 'Showing keys with values')\n      : i18n.t('context_explorer.show_empty', 'Showing all keys');\n    this.setState(\n      { showEmpty: !this.state.showEmpty, message, expression: null, messageVisible: true },\n      () => {\n        window.setTimeout(() => {\n          if (this.state.message === message) {\n            this.setState({ messageVisible: false });\n          }\n        }, 1000);\n      }\n    );\n  }\n\n  private handlePathClick(key: PathStep, prevPath: PathStep[]) {\n    const opened = { ...this.state.opened };\n    const path: PathStep[] = [...prevPath, key];\n\n    let openPath: any = opened;\n    while (path.length > 0) {\n      const next = path.shift();\n\n      let closing = false;\n      // if it's the last one, check if toggling\n      if (path.length === 0) {\n        if (openPath[next]) {\n          closing = true;\n        }\n      }\n\n      if (closing) {\n        delete openPath[next];\n      } else {\n        const existing = openPath[next] || {};\n        // make sure it exists\n        openPath[next] = existing;\n      }\n\n      // dive down\n      openPath = openPath[next];\n    }\n\n    this.setState({ opened });\n  }\n\n  private renderContextNode(name: string, value: any, path: PathStep[]): JSX.Element {\n    if (!name) {\n      return null;\n    }\n\n    const newPath = [...path, name];\n    const valueType = typeof value;\n    let text = valueType !== 'object' ? value : '';\n    let hasChildren = value && valueType === 'object' && Object.keys(value).length > 0;\n\n    if (value && value.hasOwnProperty(DEFAULT_KEY)) {\n      text = value[DEFAULT_KEY];\n      if (Object.keys(value).length === 1) {\n        hasChildren = false;\n      }\n    }\n\n    const isOpen = this.isOpen(newPath);\n\n    const arrowStyles = cx({\n      [styles.arrow_right]: true,\n      [styles.has_children]: hasChildren,\n      [styles.open]: isOpen\n    });\n    const keyStyles = cx({ [styles.key]: true, [styles.has_children]: hasChildren });\n    const keySummary = Array.isArray(value) ? `[${value.length}]` : null;\n\n    const onClick = (evt: React.MouseEvent<HTMLDivElement>) => {\n      if (evt.shiftKey) {\n        this.handleCopyPath(name, path);\n      } else {\n        if (hasChildren) {\n          this.handlePathClick(name, path);\n        }\n      }\n    };\n\n    return (\n      <div key={name + path.length}>\n        <div\n          className={styles.row}\n          style={{ marginLeft: path.length * 10 + 'px' }}\n          onClick={onClick}\n        >\n          <div className={arrowStyles}>›</div>\n          <div className={keyStyles}>\n            {name}\n            <div className={styles.key_summary}>{keySummary}</div>\n            <div\n              className={styles.clipboard + ' fe-clipboard-empty'}\n              onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                evt.stopPropagation();\n                this.handleCopyPath(name, path);\n              }}\n            ></div>\n          </div>\n          <div className={styles.str_value}>{text}</div>\n        </div>\n        {isOpen ? this.renderProperties(value, newPath) : null}\n      </div>\n    );\n  }\n\n  private renderProperties(value: any, path: PathStep[] = []): JSX.Element {\n    if (!value) {\n      return null;\n    }\n\n    return (\n      <>\n        {Object.keys(value).map((key: string) => {\n          // don't show default key as a property\n          if (key !== DEFAULT_KEY) {\n            return this.renderContextNode(key, value[key], path);\n          }\n          return null;\n        })}\n      </>\n    );\n  }\n\n  public render(): JSX.Element {\n    let context = this.props.contents;\n    if (this.props.contents && !this.state.showEmpty) {\n      context = pruneEmpty(JSON.parse(JSON.stringify(this.props.contents)));\n    }\n\n    let message = null;\n    if (this.state.message || this.state.expression) {\n      if (this.state.message) {\n        message = this.state.message;\n      } else if (this.state.expression) {\n        message = (\n          <Trans\n            i18nKey=\"context_explorer.copied_expression\"\n            values={{ expression: this.state.expression }}\n          >\n            Copied <span className={styles.expression}>[[expression]]</span> to clipboard\n          </Trans>\n        );\n      }\n    }\n\n    const messageStyle = cx({\n      [styles.message]: true,\n      [styles.visible]: this.state.messageVisible\n    });\n\n    return (\n      <div className={styles.context_explorer + ' ' + (this.props.visible ? styles.visible : '')}>\n        <div className={messageStyle}>{message}</div>\n        <div className={styles.panel}>{this.renderProperties(context)}</div>\n        <div className={styles.footer}>\n          <div\n            className={styles.empty_toggle}\n            onClick={() => {\n              this.handleToggleHide();\n            }}\n          >\n            <div className={this.state.showEmpty ? 'fe-eye' : 'fe-eye-crossed'}></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './PopTab.module.scss';\n\nexport interface PopTabProps {\n  color: string;\n  icon: string;\n  label: string;\n  header: string;\n  top: string;\n  popTop: string;\n  visible: boolean;\n  custom: boolean;\n  onShow: () => void;\n  onHide: () => void;\n}\n\nexport interface PopTabState {\n  width: number;\n}\n\nexport class PopTab extends React.Component<PopTabProps, PopTabState> {\n  private poppedEle: HTMLDivElement;\n\n  constructor(props: PopTabProps) {\n    super(props);\n    this.state = { width: 260 };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidUpdate(): void {\n    if (this.state.width !== this.poppedEle.offsetWidth) {\n      // we have fixed widths for all poptabs\n      // this.setState({ width: this.poppedEle.offsetWidth });\n    }\n  }\n\n  private handlePoppedRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.poppedEle = ref);\n  }\n\n  private handleTabClick(): void {\n    this.props.onShow();\n  }\n\n  private handleClose(): void {\n    this.props.onHide();\n  }\n  public render(): JSX.Element {\n    return (\n      <div\n        className={\n          'pop_wrapper ' + styles.pop_wrapper + ' ' + (this.props.visible ? styles.visible : '')\n        }\n        style={{\n          right: -this.state.width,\n          top: this.props.top\n        }}\n      >\n        <div className={styles.tab_wrapper}>\n          <div\n            className={styles.tab}\n            style={{ background: this.props.color }}\n            onClick={this.handleTabClick}\n          >\n            <div className={styles.icon}>\n              <span className={this.props.icon} />\n            </div>\n            <div className={styles.label}>{this.props.label}</div>\n          </div>\n        </div>\n        <div\n          ref={this.handlePoppedRef}\n          className={styles.popped + ' ' + (this.props.custom ? styles.custom : '')}\n          style={{\n            borderColor: this.props.color,\n            top: this.props.popTop || 0,\n            right: this.props.visible ? 40 + this.state.width : 0\n          }}\n        >\n          <div className={styles.header} style={{ background: this.props.color }}>\n            <div className={styles.close + ' fe-x'} onClick={this.handleClose} />\n            <div className={styles.header_label}>{this.props.header}</div>\n          </div>\n          <div className={styles.body} style={{ background: this.props.color }}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport DragHelper from 'components/draghelper/DragHelper';\nimport { getExitActivityKey } from 'components/flow/exit/helpers';\nimport Loading from 'components/loading/Loading';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Cancel, getRecentMessages } from 'external';\nimport { Category, Exit, FlowNode, LocalizationMap } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RecentContact } from 'store/editor';\nimport { Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DisconnectExit, disconnectExit, DispatchWithState } from 'store/thunks';\nimport { createClickHandler, getLocalization, renderIf } from 'utils';\n\nimport * as moment from 'moment';\nimport styles from './Exit.module.scss';\nimport { Portal } from 'components/Portal';\nimport i18n from 'config/i18n';\nimport { SIMULATOR_CONTACT_UUID } from 'components/simulator/Simulator';\n\nexport interface RenderCategory extends Category {\n  missing: boolean;\n}\n\nexport interface ExitPassedProps {\n  exit: Exit;\n  categories: Category[];\n  node: FlowNode;\n  showDragHelper: boolean;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n}\n\nexport interface ExitStoreProps {\n  translating: boolean;\n  dragging: boolean;\n  language: Asset;\n  localization: LocalizationMap;\n  disconnectExit: DisconnectExit;\n  segmentCount: number;\n  recentContacts: RecentContact[];\n}\n\nexport type ExitProps = ExitPassedProps & ExitStoreProps;\n\nexport interface ExitState {\n  confirmDelete: boolean;\n  recentContacts: RecentContact[];\n  fetchingRecentContacts: boolean;\n  showDragHelper: boolean;\n}\n\nconst cx: any = classNames.bind(styles);\nexport class ExitComp extends React.PureComponent<ExitProps, ExitState> {\n  private timeout: number;\n  private hideDragHelper: number;\n  private pendingMessageFetch: Cancel = {};\n  private ele: HTMLDivElement;\n  private lastEnter = new Date().getTime();\n\n  constructor(props: ExitProps) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      recentContacts: null,\n      fetchingRecentContacts: false,\n      showDragHelper: props.showDragHelper\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/, /^connect/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public getSourceId(): string {\n    return `${this.props.node.uuid}:${this.props.exit.uuid}`;\n  }\n\n  public handleDisconnect(): void {\n    this.setState({ showDragHelper: false });\n  }\n\n  public componentDidMount(): void {\n    this.props.plumberMakeSource(this.getSourceId());\n\n    if (this.ele) {\n      this.ele.addEventListener('disconnect', this.handleDisconnect);\n    }\n\n    if (this.props.exit.destination_uuid) {\n      this.connect();\n    }\n  }\n\n  public componentDidUpdate(prevProps: ExitProps): void {\n    if (this.props.exit.destination_uuid !== prevProps.exit.destination_uuid) {\n      this.connect();\n      if (this.state.confirmDelete) {\n        this.setState({ confirmDelete: false });\n      }\n    }\n\n    if (this.state.showDragHelper && prevProps.showDragHelper && !this.props.showDragHelper) {\n      this.setState({ showDragHelper: false });\n    }\n\n    this.props.plumberUpdateClass(\n      this.props.node,\n      this.props.exit,\n      'confirm-delete',\n      this.state.confirmDelete\n    );\n  }\n\n  public componentWillUnmount(): void {\n    if (this.props.exit.destination_uuid) {\n      this.props.plumberRemove(this.getSourceId());\n    }\n\n    if (this.ele) {\n      this.ele.removeEventListener('disconnect', this.handleDisconnect);\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLElement>): void {\n    if (!this.props.translating) {\n      if (this.props.exit.destination_uuid) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState(\n          {\n            confirmDelete: true\n          },\n          () => {\n            this.timeout = window.setTimeout(() => {\n              this.setState({\n                confirmDelete: false\n              });\n            }, 2000);\n          }\n        );\n      } else {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.showDragHelper) {\n          this.setState({ showDragHelper: true }, () => {\n            if (this.hideDragHelper) {\n              window.clearTimeout(this.hideDragHelper);\n            }\n            this.hideDragHelper = window.setTimeout(() => {\n              this.setState({ showDragHelper: false });\n            }, 3000);\n          });\n        }\n      }\n    }\n  }\n\n  private onDisconnect(event: React.MouseEvent<HTMLElement>): void {\n    if (this.timeout) {\n      window.clearTimeout(this.timeout);\n    }\n\n    if (this.hideDragHelper) {\n      window.clearTimeout(this.hideDragHelper);\n    }\n\n    this.props.disconnectExit(this.props.node.uuid, this.props.exit.uuid);\n  }\n\n  private connect(): void {\n    this.props.plumberConnectExit(this.props.node, this.props.exit);\n  }\n\n  private handleShowRecentMessages(): void {\n    if (this.props.recentContacts) {\n      this.setState({ recentContacts: this.props.recentContacts });\n      return;\n    }\n\n    this.setState({ fetchingRecentContacts: true }, () => {\n      getRecentMessages(\n        this.context.config.endpoints.recents,\n        this.props.exit,\n        this.pendingMessageFetch\n      )\n        .then((recentContacts: RecentContact[]) => {\n          this.setState({ recentContacts, fetchingRecentContacts: false });\n        })\n        .catch(() => {\n          // we may have been canceled\n        });\n    });\n  }\n\n  private handleHideRecentMessages(): void {\n    if (this.pendingMessageFetch.reject) {\n      this.pendingMessageFetch.reject();\n      this.pendingMessageFetch = {};\n    }\n\n    this.setState({ fetchingRecentContacts: false, recentContacts: null });\n  }\n\n  private getSegmentCount(): JSX.Element {\n    // Only exits with a destination have activity\n    if (this.props.segmentCount > 0) {\n      const key = `${this.props.exit.uuid}-label`;\n      return (\n        <div style={{ position: 'absolute', bottom: '-25px' }}>\n          <Counter\n            key={key}\n            count={this.props.segmentCount}\n            containerStyle={styles.activity}\n            countStyle={styles.count}\n            keepVisible={false}\n            onMouseEnter={() => {\n              this.lastEnter = new Date().getTime();\n              this.handleShowRecentMessages();\n            }}\n            onMouseLeave={() => {\n              if (new Date().getTime() - this.lastEnter < 100) {\n                this.handleHideRecentMessages();\n              }\n            }}\n          />\n        </div>\n      );\n    }\n  }\n\n  public getName(): { name: string; localized?: boolean } {\n    if (this.props.translating) {\n      let name = '';\n      let delim = '';\n\n      let localized = false;\n\n      this.props.categories.forEach((category: Category) => {\n        const localization = getLocalization(\n          category,\n          this.props.localization,\n          this.props.language\n        );\n\n        localized = localized || 'name' in localization.localizedKeys;\n        const localizedObject = localization.getObject() as Category;\n        name += delim + localizedObject.name;\n        delim = ', ';\n      });\n\n      return { name, localized };\n    } else {\n      const names: string[] = [];\n      this.props.categories.forEach((cat: Category) => {\n        names.push(cat.name);\n      });\n\n      return {\n        name: names.join(', ')\n      };\n    }\n  }\n\n  private getRecentContacts(): JSX.Element {\n    if (this.state.fetchingRecentContacts || this.state.recentContacts !== null) {\n      const recentContacts = this.state.recentContacts || [];\n      const hasRecents = recentContacts.length !== 0;\n\n      const recentStyles = [styles.recent_contacts];\n\n      let title = i18n.t('recent_contacts.header', 'Recent Contacts');\n      if (!hasRecents && !this.state.fetchingRecentContacts) {\n        title = i18n.t('recent_contacts.header_empty', 'No Recent Contacts');\n        recentStyles.push(styles.no_recents);\n      }\n\n      const canvas = document.getElementById('canvas-container');\n      let left = 0;\n      let top = 0;\n\n      if (canvas) {\n        const canvasBounds = canvas.getBoundingClientRect();\n        const canvasOffset = canvasBounds.top + window.scrollY;\n        const rect = this.ele.getBoundingClientRect();\n        left = rect.left + window.scrollX + 5 - canvasBounds.left;\n        top = rect.top + window.scrollY - canvasOffset + 30;\n      }\n\n      let getContactURL = (uuid: string): string => {\n        return this.context.config.endpoints.contact + uuid;\n      };\n\n      return (\n        <Portal id=\"activity_recent_contacts\">\n          <div\n            className={recentStyles.join(' ')}\n            style={{ position: 'absolute', left, top }}\n            onMouseDown={event => {\n              event.stopPropagation();\n              event.preventDefault();\n            }}\n            onMouseUp={event => {\n              event.stopPropagation();\n              event.preventDefault();\n            }}\n          >\n            <div className=\"pointer-capture\" style={{ display: 'flex', marginTop: '-20px' }}>\n              <div className=\"left\" style={{ flexGrow: 1, pointerEvents: 'none' }}></div>\n              <div\n                onMouseLeave={this.handleHideRecentMessages}\n                className=\"middle\"\n                style={{\n                  width: '50px',\n                  height: '40px',\n                  marginBottom: '-20px',\n                  paddingBottom: '20px'\n                }}\n              >\n                &nbsp;\n              </div>\n              <div className=\"right\" style={{ flexGrow: 1 }}></div>\n            </div>\n            <div\n              className={styles.container}\n              onMouseEnter={() => {\n                this.setState({ recentContacts, fetchingRecentContacts: false });\n              }}\n              onMouseLeave={this.handleHideRecentMessages}\n            >\n              <div className={styles.title}>{title}</div>\n              {recentContacts.map((recentContact: RecentContact, idx: number) => {\n                let opRow: JSX.Element = null;\n                if (recentContact.operand) {\n                  opRow = <div className={styles.operand}>{recentContact.operand}</div>;\n                }\n                return (\n                  <div key={'recent_' + idx} className={styles.row}>\n                    <div className={styles.contact}>\n                      {recentContact.contact.uuid === SIMULATOR_CONTACT_UUID ? (\n                        recentContact.contact.name\n                      ) : (\n                        <a href={getContactURL(recentContact.contact.uuid)}>\n                          {recentContact.contact.name}\n                        </a>\n                      )}\n                    </div>\n                    {opRow}\n                    <div className={styles.time}>{moment.utc(recentContact.time).fromNow()}</div>\n                  </div>\n                );\n              })}\n              {this.state.recentContacts === null ? (\n                <div className={styles.loading}>\n                  <Loading size={10} units={6} color=\"#999999\" />\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const { name, localized } = this.getName();\n\n    const nameStyle = name ? styles.name : '';\n    const connected = this.props.exit.destination_uuid ? ' jtk-connected' : '';\n    const dragNodeClasses = cx(styles.endpoint, connected);\n    const confirmDelete =\n      this.state.confirmDelete && this.props.exit.hasOwnProperty('destination_uuid');\n    const confirm: JSX.Element =\n      confirmDelete && this.context.config.mutable ? (\n        <div\n          className={styles.confirm_x + ' fe-x'}\n          {...createClickHandler(this.onDisconnect, () => this.props.dragging)}\n        />\n      ) : null;\n    const exitClasses: string = cx({\n      [styles.exit]: true,\n      'plumb-exit': true,\n      [styles.translating]: this.props.translating,\n      [styles.unnamed_exit]: name == null,\n      [styles.missing_localization]: name && this.props.translating && !localized,\n      [styles.confirm_delete]: confirmDelete\n    });\n\n    const activity = this.getSegmentCount();\n    const recents = this.getRecentContacts();\n\n    const events = this.context.config.mutable\n      ? createClickHandler(\n          this.handleClick,\n          () => {\n            return this.props.dragging;\n          },\n          this.handleMouseDown\n        )\n      : {};\n\n    return (\n      <div className={exitClasses}>\n        {name ? <div className={nameStyle}>{name}</div> : null}\n        <div\n          ref={(ref: HTMLDivElement) => (this.ele = ref)}\n          {...events}\n          id={`${this.props.node.uuid}:${this.props.exit.uuid}`}\n          className={dragNodeClasses}\n        >\n          {confirm}\n        </div>\n        {activity}\n        {recents}\n        {renderIf(this.state.showDragHelper)(<DragHelper />)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { translating, language, dragActive, activity }\n  }: AppState,\n  props: ExitPassedProps\n) => {\n  // see if we have some passed in (simulated) contacts\n  let recentContacts: RecentContact[] = null;\n  const key = getExitActivityKey(props.exit);\n  if (key in (activity.recentContacts || {})) {\n    recentContacts = activity.recentContacts[key];\n  }\n  const segmentCount = activity.segments[getExitActivityKey(props.exit)] || 0;\n\n  return {\n    dragging: dragActive,\n    segmentCount,\n    translating,\n    language,\n    localization,\n    recentContacts\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators({ disconnectExit }, dispatch);\n\nconst ConnectedExit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitComp);\n\nexport default ConnectedExit;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport ActionWrapper from 'components/flow/actions/action/Action';\nimport ExitComp from 'components/flow/exit/Exit';\nimport {\n  getCategoriesForExit,\n  getResultName,\n  getVisibleActions,\n  filterIssuesForAction\n} from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { AnyAction, Exit, FlowNode, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport FlipMove from 'react-flip-move';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DebugState } from 'store/editor';\nimport { AssetMap, RenderNode, Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  DispatchWithState,\n  MergeEditorState,\n  mergeEditorState,\n  OnAddToNode,\n  onAddToNode,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  RemoveNode,\n  removeNode\n} from 'store/thunks';\nimport { ClickHandler, createClickHandler } from 'utils';\n\nimport styles from './Node.module.scss';\nimport { hasIssues } from '../helpers';\nimport MountScroll from 'components/mountscroll/MountScroll';\nimport i18n from 'config/i18n';\n\nexport interface NodePassedProps {\n  nodeUUID: string;\n  plumberMakeTarget: (id: string) => void;\n  plumberRecalculate: (id: string) => void;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (node: FlowNode, exit: Exit) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n  startingNode: boolean;\n  onlyNode: boolean;\n  selected: boolean;\n  ghostRef?: any;\n  ghost?: boolean;\n}\n\nexport interface NodeStoreProps {\n  results: AssetMap;\n  language: Asset;\n  languages: AssetMap;\n  activeCount: number;\n  translating: boolean;\n  simulating: boolean;\n  debug: DebugState;\n  renderNode: RenderNode;\n  issues: FlowIssue[];\n  onAddToNode: OnAddToNode;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeNode: RemoveNode;\n  mergeEditorState: MergeEditorState;\n  scrollToNode: string;\n  scrollToAction: string;\n}\n\nexport type NodeProps = NodePassedProps & NodeStoreProps;\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\nconst EMPTY: any[] = [];\n/**\n * A single node in the rendered flow\n */\nexport class NodeComp extends React.PureComponent<NodeProps> {\n  public ele: HTMLDivElement;\n  private firstAction: any;\n  private clicking: boolean;\n  private events: ClickHandler;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: NodeProps, context: any) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^get/, /^handle/]\n    });\n\n    this.events = context.config.mutable\n      ? createClickHandler(this.onClick, this.handleShouldCancelClick)\n      : {};\n  }\n\n  private handleShouldCancelClick(): boolean {\n    return this.props.selected;\n  }\n\n  private eleRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  private getGhostListener(): any {\n    return (e: MouseEvent) => {\n      if (this.ele) {\n        let canvas = this.ele.parentElement;\n        if (this.ele.parentElement.parentElement) {\n          canvas = this.ele.parentElement.parentElement;\n        }\n\n        const canvasBounds = canvas.getBoundingClientRect();\n\n        // move our ghost node into position\n        const width = this.ele.getBoundingClientRect().width;\n        const left = e.pageX - width / 2 - 15 - canvasBounds.left;\n        const top = e.pageY - canvasBounds.top - window.scrollY;\n        const style = this.ele.style;\n        style.left = left + 'px';\n        style.top = top + 'px';\n\n        // Hide ourselves if there's a drop target\n        style.visibility = document.querySelector('.plumb-drop-hover') ? 'hidden' : 'visible';\n      }\n    };\n  }\n\n  public componentDidMount(): void {\n    // Make ourselves a target\n    this.props.plumberMakeTarget(this.props.renderNode.node.uuid);\n\n    // Move our drag node around as necessary\n    if (this.props.ghost) {\n      // We store our listener on the window so flow can remove it\n      // this is a bit hacky but allows us to remove our dependency on jquery\n      // TODO: rework ghost node to manage its location like other nodes\n      const ghostListener: any = this.getGhostListener();\n      (window as any).ghostListener = ghostListener;\n      document.addEventListener('mousemove', ghostListener);\n    }\n  }\n\n  public componentDidUpdate(prevProps: any): void {\n    // traceUpdate(this, prevProps);\n\n    // when our exits change, we need to recalculate the endpoints\n    if (!this.props.ghost) {\n      try {\n        this.props.plumberRecalculate(this.props.renderNode.node.uuid);\n        for (const exit of this.props.renderNode.node.exits) {\n          this.props.plumberRecalculate(this.props.renderNode.node.uuid + ':' + exit.uuid);\n        }\n      } catch (error) {\n        // console.log(error);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.props.plumberRemove(this.props.renderNode.node.uuid);\n  }\n\n  /* istanbul ignore next */\n  private handleUUIDClicked(event: React.MouseEvent<HTMLElement>): void {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(event.currentTarget);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    document.execCommand('copy');\n    selection.removeAllRanges();\n    console.log(event.currentTarget.textContent + ' copied to clipboard.');\n  }\n\n  private handleAddToNode(): void {\n    this.props.onAddToNode(this.props.renderNode.node);\n  }\n\n  // Applies only to router nodes;\n  // ./Action/Action handles click logic for Action nodes.\n  private onClick(event: React.MouseEvent<HTMLElement>): void {\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode\n    });\n  }\n\n  private handleRemoval(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.removeNode(this.props.renderNode.node);\n  }\n\n  private getExits(): JSX.Element[] {\n    if (this.props.renderNode.node.exits) {\n      return this.props.renderNode.node.exits.map((exit: Exit, idx: number) => (\n        <ExitComp\n          key={exit.uuid}\n          node={this.props.renderNode.node}\n          categories={getCategoriesForExit(this.props.renderNode, exit)}\n          exit={exit}\n          showDragHelper={this.props.onlyNode && idx === 0}\n          plumberMakeSource={this.props.plumberMakeSource}\n          plumberRemove={this.props.plumberRemove}\n          plumberConnectExit={this.props.plumberConnectExit}\n          plumberUpdateClass={this.props.plumberUpdateClass}\n        />\n      ));\n    }\n    return [];\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private isStartNodeVisible(): boolean {\n    return this.props.startingNode;\n  }\n\n  /* istanbul ignore next */\n  private renderDebug(): JSX.Element {\n    if (this.props.debug) {\n      if (this.props.debug.showUUIDs) {\n        return (\n          <span\n            id={`uuid-${this.props.renderNode.node.uuid}`}\n            onClick={this.handleUUIDClicked}\n            className={styles.uuid}\n          >\n            {this.props.renderNode.node.uuid}\n          </span>\n        );\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const actions: JSX.Element[] = [];\n\n    let actionList: JSX.Element = null;\n    if (this.props.renderNode.node.actions) {\n      // Save the first reference off to manage our clicks\n      let firstRef: { ref: (ref: any) => any } | {} = {\n        ref: (ref: any) => (this.firstAction = ref)\n      };\n\n      getVisibleActions(this.props.renderNode).forEach((action: AnyAction, idx: number) => {\n        const actionConfig = getTypeConfig(action.type);\n\n        const issues: FlowIssue[] = filterIssuesForAction(\n          this.props.nodeUUID,\n          action,\n          this.props.issues\n        );\n\n        if (actionConfig.hasOwnProperty('component') && actionConfig.component) {\n          const { component: ActionComponent } = actionConfig;\n          if (actionConfig.massageForDisplay) {\n            actionConfig.massageForDisplay(action);\n          }\n\n          actions.push(\n            <ActionWrapper\n              {...firstRef}\n              key={action.uuid}\n              renderNode={this.props.renderNode}\n              selected={this.props.selected}\n              action={action}\n              first={idx === 0}\n              issues={issues}\n              render={(anyAction: AnyAction) => {\n                return (\n                  <ActionComponent\n                    {...anyAction}\n                    languages={this.props.languages}\n                    issues={issues}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        firstRef = {};\n      });\n\n      actionList =\n        actions.length > 0 ? (\n          <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" duration={300} easing=\"ease-out\">\n            {actions}\n          </FlipMove>\n        ) : null;\n    }\n\n    let header: JSX.Element = null;\n    let addActions: JSX.Element = null;\n    let summary: JSX.Element = null;\n\n    // Router node display logic\n    const type = getType(this.props.renderNode);\n    if (type !== Types.execute_actions) {\n      const config = getTypeConfig(type);\n      let title: string = config.name;\n\n      const switchRouter = getSwitchRouter(this.props.renderNode.node);\n      if (switchRouter) {\n        if (type === Types.split_by_contact_field && this.props.renderNode.ui.config.operand.name) {\n          title = `Split by ${this.props.renderNode.ui.config.operand.name}`;\n        }\n      }\n\n      const resultName = getResultName(this.props.renderNode.node);\n      if (resultName) {\n        summary = (\n          <div {...this.events} className={styles.save_result}>\n            <div className={styles.save_as}>{i18n.t('forms.save_as', 'Save as')} </div>\n            <div className={styles.result_name}>{resultName}</div>\n          </div>\n        );\n      }\n\n      if (\n        title === null &&\n        (type === Types.split_by_run_result || type === Types.split_by_run_result_delimited)\n      ) {\n        title = `Split by ${this.props.results[this.props.renderNode.ui.config.operand.id].name}`;\n      }\n\n      if (title === null) {\n        title = config.name;\n      }\n\n      if (!this.props.renderNode.node.actions || !this.props.renderNode.node.actions.length) {\n        // Router headers are introduced here while action headers are introduced in ./Action/Action\n        header = (\n          // Wrap in a relative parent so it honors node clipping\n          <div style={{ position: 'relative' }}>\n            <div {...this.events}>\n              <TitleBar\n                __className={\n                  (shared as any)[\n                    hasIssues(this.props.issues, this.props.translating, this.props.language)\n                      ? 'missing'\n                      : config.type\n                  ]\n                }\n                showRemoval={!this.props.translating}\n                onRemoval={this.handleRemoval}\n                shouldCancelClick={this.handleShouldCancelClick}\n                title={title}\n              />\n            </div>\n          </div>\n        );\n      }\n    } else {\n      // Don't show add actions option if we are translating\n      if (!this.props.translating && this.context.config.mutable) {\n        addActions = (\n          <div\n            className={styles.add}\n            {...createClickHandler(this.handleAddToNode, this.handleShouldCancelClick)}\n          >\n            <span className=\"fe-add\" />\n          </div>\n        );\n      }\n    }\n\n    const exits: JSX.Element[] = this.getExits();\n\n    const classes = cx({\n      'plumb-drag': true,\n      [styles.ghost]: this.props.ghost,\n      [styles.flow_start]: this.isStartNodeVisible(),\n      [styles.selected]: this.isSelected(),\n      [styles.immutable]: !this.context.config.mutable\n    });\n\n    const uuid: JSX.Element = this.renderDebug();\n\n    const body = (\n      <div className={styles.node}>\n        {this.isStartNodeVisible() ? (\n          <div className={styles.flow_start_message}>{i18n.t('flow_start', 'Flow Start')}</div>\n        ) : null}\n\n        {uuid}\n        <Counter\n          count={this.props.activeCount}\n          containerStyle={styles.active}\n          countStyle={''}\n          keepVisible={this.props.simulating}\n          onClick={() => {\n            if (this.context.config.onActivityClicked) {\n              this.context.config.onActivityClicked(this.props.nodeUUID, this.props.activeCount);\n            }\n          }}\n        />\n\n        <div className={styles.cropped}>\n          {header}\n          {actionList}\n          {summary}\n        </div>\n\n        <div className={`${styles.exit_table}`}>\n          <div className={styles.exits} {...this.events}>\n            {exits}\n          </div>\n          {addActions}\n        </div>\n      </div>\n    );\n\n    const renderedNode = (\n      <div\n        id={this.props.renderNode.node.uuid}\n        className={`${styles.node_container} ${classes}`}\n        ref={this.eleRef}\n      >\n        {!this.props.scrollToAction &&\n        this.props.scrollToNode &&\n        this.props.scrollToNode === this.props.nodeUUID ? (\n          <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\n        ) : (\n          body\n        )}\n      </div>\n    );\n    return renderedNode;\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      nodes,\n      issues,\n      assetStore: {\n        results: { items: results },\n        languages: { items: languages }\n      }\n    },\n    editorState: {\n      translating,\n      debug,\n      ghostNode,\n      simulating,\n      activity,\n      language,\n      scrollToAction,\n      scrollToNode\n    }\n  }: AppState,\n  props: NodePassedProps\n) => {\n  let renderNode: RenderNode = null;\n\n  // if we match our ghost node use that\n  if (ghostNode && ghostNode.node.uuid === props.nodeUUID) {\n    renderNode = ghostNode;\n  }\n\n  // otherwise look up our node from the list\n  else if (props.nodeUUID in nodes) {\n    renderNode = nodes[props.nodeUUID];\n  }\n\n  if (!renderNode) {\n    throw Error(\"Couldn't find node for \" + props.nodeUUID);\n  }\n\n  const activeCount = activity.nodes[props.nodeUUID] || 0;\n\n  // only set our scroll flags if they affect us\n  const scrollNode = scrollToNode && scrollToNode === props.nodeUUID ? scrollToNode : null;\n  const scrollAction = scrollToAction && scrollNode ? scrollToAction : null;\n\n  return {\n    issues: (issues || {})[props.nodeUUID] || EMPTY,\n    results,\n    language,\n    languages,\n    activeCount,\n    translating,\n    debug,\n    renderNode,\n    simulating,\n    scrollToNode: scrollNode,\n    scrollToAction: scrollAction\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onAddToNode,\n      onOpenNodeEditor,\n      removeNode,\n      mergeEditorState\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(NodeComp);\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getDraggedFrom } from 'components/helpers';\nimport Modal from 'components/modal/Modal';\nimport { Type } from 'config/interfaces';\nimport { Action, AnyAction, FlowDefinition, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { UpdateUserAddingAction } from 'store/actionTypes';\nimport { Asset, AssetStore, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, updateUserAddingAction } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  AddAsset,\n  addAsset,\n  DispatchWithState,\n  GetState,\n  HandleTypeConfigChange,\n  handleTypeConfigChange,\n  LocalizationUpdates,\n  MergeEditorState,\n  mergeEditorState,\n  NoParamsAC,\n  onUpdateAction,\n  OnUpdateAction,\n  OnUpdateLocalizations,\n  onUpdateLocalizations,\n  OnUpdateRouter,\n  onUpdateRouter,\n  resetNodeEditingState\n} from 'store/thunks';\nimport { LocalizationFormProps } from 'components/flow/props';\n\nexport type UpdateLocalizations = (language: string, changes: LocalizationUpdates) => void;\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface NodeEditorPassedProps {\n  plumberConnectExit: Function;\n  helpArticles: { [key: string]: string };\n}\n\nexport interface NodeEditorStoreProps {\n  assetStore: AssetStore;\n  addAsset: AddAsset;\n  language: Asset;\n  definition: FlowDefinition;\n  translating: boolean;\n  typeConfig: Type;\n  settings: NodeEditorSettings;\n  nodes: { [uuid: string]: RenderNode };\n  handleTypeConfigChange: HandleTypeConfigChange;\n  resetNodeEditingState: NoParamsAC;\n  issues: FlowIssue[];\n  mergeEditorState: MergeEditorState;\n  onUpdateLocalizations: OnUpdateLocalizations;\n  onUpdateAction: OnUpdateAction;\n  onUpdateRouter: OnUpdateRouter;\n  updateUserAddingAction: UpdateUserAddingAction;\n}\n\nexport type NodeEditorProps = NodeEditorPassedProps & NodeEditorStoreProps;\n\nexport interface FormProps {\n  // our two ways of updating\n  updateRouter(renderNode: RenderNode): void;\n  updateAction(action: AnyAction): void;\n\n  addAsset(assetType: string, asset: Asset): void;\n\n  assetStore: AssetStore;\n  issues: FlowIssue[];\n  helpArticles: { [key: string]: string };\n\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onTypeChange?(config: Type): void;\n  onClose?(canceled: boolean): void;\n}\n\n/* export interface LocalizationProps {\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onClose?(canceled: boolean): void;\n\n  issues: FlowIssue[];\n  updateLocalizations: UpdateLocalizations;\n  language: Asset;\n}*/\n\nexport class NodeEditor extends React.Component<NodeEditorProps> {\n  constructor(props: NodeEditorProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^close/, /^update/, /^handle/]\n    });\n  }\n\n  private updateLocalizations(language: string, changes: LocalizationUpdates) {\n    this.props.onUpdateLocalizations(language, changes);\n  }\n\n  public close(canceled: boolean): void {\n    // Make sure we re-wire the old connection\n    if (canceled) {\n      const dragPoint = getDraggedFrom(this.props.settings.originalNode);\n      if (dragPoint) {\n        const renderNode = this.props.nodes[dragPoint.nodeUUID];\n        for (const exit of renderNode.node.exits) {\n          if (exit.uuid === dragPoint.exitUUID) {\n            // TODO: should this just be taking literal uuids instead of objects?\n            this.props.plumberConnectExit(renderNode.node, exit);\n            break;\n          }\n        }\n      }\n    }\n\n    this.props.resetNodeEditingState();\n    this.props.updateUserAddingAction(false);\n  }\n\n  private updateAction(\n    action: Action,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void {\n    this.props.onUpdateAction(action, onUpdated);\n  }\n\n  private updateRouter(renderNode: RenderNode): void {\n    this.props.onUpdateRouter(renderNode);\n  }\n\n  private handleAddAsset(assetType: string, asset: Asset): void {\n    this.props.addAsset(assetType, asset);\n  }\n\n  public render(): JSX.Element {\n    if (this.props.settings) {\n      const { typeConfig } = this.props;\n\n      // see if we should use the localization form\n      if (this.props.translating) {\n        const { localization: LocalizationForm } = typeConfig;\n\n        if (LocalizationForm) {\n          const localizationProps: LocalizationFormProps = {\n            updateLocalizations: this.updateLocalizations,\n            nodeSettings: this.props.settings,\n            onClose: this.close,\n            language: this.props.language,\n            helpArticles: this.props.helpArticles,\n            issues: this.props.issues.filter(\n              (issue: FlowIssue) => issue.language === this.props.language.id\n            )\n          };\n\n          return (\n            <Modal width=\"600px\" show={true}>\n              <LocalizationForm {...{ ...localizationProps }} />\n            </Modal>\n          );\n        }\n      }\n\n      const { form: Form } = typeConfig;\n\n      const formProps: FormProps = {\n        assetStore: this.props.assetStore,\n        addAsset: this.handleAddAsset,\n        updateAction: this.updateAction,\n        updateRouter: this.updateRouter,\n        nodeSettings: this.props.settings,\n        helpArticles: this.props.helpArticles,\n        issues: this.props.issues.filter((issue: FlowIssue) => !issue.language),\n        typeConfig: this.props.typeConfig,\n        onTypeChange: this.props.handleTypeConfigChange,\n        onClose: this.close\n      };\n\n      return (\n        <Modal width=\"600px\" show={true}>\n          <Form {...{ ...formProps }} />\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore, issues },\n  editorState: { language, translating },\n  nodeEditor: { typeConfig, settings }\n}: AppState) => {\n  const filteredIssues = (issues[settings.originalNode.node.uuid] || []).filter(\n    (issue: FlowIssue) =>\n      !settings.originalAction || settings.originalAction.uuid === issue.action_uuid\n  );\n\n  return {\n    issues: filteredIssues,\n    language,\n    definition,\n    nodes,\n    translating,\n    typeConfig,\n    settings,\n    assetStore\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      addAsset,\n      resetNodeEditingState,\n      mergeEditorState,\n      handleTypeConfigChange,\n      onUpdateLocalizations,\n      onUpdateAction,\n      onUpdateRouter,\n      updateUserAddingAction\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeEditor);\n","import { react as bindCallbacks } from 'auto-bind';\nimport { FlowDefinition, StickyNote } from 'flowTypes';\nimport * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DragEvent } from 'services/Plumber';\nimport AppState from 'store/state';\nimport { DispatchWithState, UpdateSticky, updateSticky } from 'store/thunks';\nimport { CONFIRMATION_TIME, QUIET_NOTE, snapToGrid } from 'utils';\n\nimport styles from './Sticky.module.scss';\nimport i18n from 'config/i18n';\n\ntype DragFunction = (event: DragEvent) => void;\nexport const STICKY_SPEC_ID: string = 'sticky-container';\nexport const STICKY_TITLE = i18n.t('sticky.title', 'New Note');\nexport const STICKY_BODY = i18n.t('sticky.body', '...');\n\nexport interface StickyPassedProps {\n  uuid: string;\n  sticky: StickyNote;\n  selected: boolean;\n}\n\nexport interface StickyStoreProps {\n  definition: FlowDefinition;\n  updateSticky: UpdateSticky;\n}\n\nexport type StickyProps = StickyPassedProps & StickyStoreProps;\n\n/**\n * We have internal state to track as the user types so\n * we can debounce updates to the store.\n */\ninterface StickyState {\n  title: string;\n  body: string;\n  color: string;\n  showConfirmation: boolean;\n}\n\nconst COLOR_OPTIONS: any = {\n  yellow: styles.yellow,\n  blue: styles.blue,\n  green: styles.green,\n  purple: styles.purple,\n  gray: styles.gray\n};\n\nexport class Sticky extends React.Component<StickyProps, StickyState> {\n  private dragging = false;\n  private ele: HTMLDivElement;\n  private debounceTextChanges: number;\n  private showConfirmation: number;\n\n  public DEFUALT_TITLE = 'New Note';\n  public DEFUALT_BODY = '...';\n\n  constructor(props: StickyProps & StickyStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^is/, /^handle/]\n    });\n\n    this.state = {\n      title: this.props.sticky.title,\n      body: this.props.sticky.body,\n      color: this.props.sticky.color,\n      showConfirmation: false\n    };\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.showConfirmation) {\n      window.clearTimeout(this.showConfirmation);\n    }\n\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n  }\n\n  public handleDrag(event: DragEvent): void {\n    // noop\n  }\n\n  public handleDragStop(event: DragEvent): void {\n    // snap us to the same grid\n    const { left, top } = snapToGrid(event.finalPos[0], event.finalPos[1]);\n    this.ele.style.left = `${left}px`;\n    this.ele.style.top = `${top}px`;\n\n    this.props.sticky.position = { left, top };\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n  }\n\n  private onUpdateText(): void {\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n\n    this.debounceTextChanges = window.setTimeout(() => {\n      const updated = { ...this.props.sticky };\n      updated.title = this.state.title;\n      updated.body = this.state.body;\n      this.props.updateSticky(this.props.uuid, updated);\n      this.debounceTextChanges = null;\n    }, QUIET_NOTE);\n  }\n\n  private handleChangeTitle(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ title: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  private handleChangeBody(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ body: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  public handleClickRemove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.showConfirmation) {\n      this.props.updateSticky(this.props.uuid, null);\n    } else {\n      this.setState({ showConfirmation: true });\n      this.showConfirmation = window.setTimeout(() => {\n        this.setState({ showConfirmation: false });\n      }, CONFIRMATION_TIME);\n    }\n  }\n\n  private handleChangeColor(color: string): void {\n    this.props.sticky.color = color;\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n    this.setState({ color });\n  }\n\n  private handleSelectForValue(element: HTMLTextAreaElement, text: string): void {\n    if (element.value === text) {\n      window.setTimeout(() => {\n        element.select();\n      }, 0);\n    }\n  }\n\n  private handleTitleFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_TITLE);\n  }\n\n  private handleBodyFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_BODY);\n  }\n\n  private getColorChooser(): JSX.Element {\n    return (\n      <div className={styles.color_chooser_container}>\n        <div className={styles.color_chooser}>\n          {Object.keys(COLOR_OPTIONS).map((color: string) => {\n            return (\n              <div\n                key={this.props.uuid + color}\n                onClick={() => {\n                  this.handleChangeColor(color);\n                }}\n                className={styles.color_option + ' ' + COLOR_OPTIONS[color]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    // add our removal class if necessary\n    const titleClasses = [styles.title_wrapper];\n    if (this.state.showConfirmation) {\n      titleClasses.push(styles.removal);\n    }\n\n    const containerClasses = [styles.sticky_container];\n    if (!this.props.sticky.color) {\n      this.props.sticky.color = 'yellow';\n    }\n\n    const stickyClasses = [styles.sticky];\n    if (this.isSelected()) {\n      stickyClasses.push(styles.selected);\n    }\n\n    containerClasses.push(COLOR_OPTIONS[this.props.sticky.color]);\n    const colorChooser = this.getColorChooser();\n\n    return (\n      <div\n        key={this.props.uuid}\n        className={containerClasses.join(' ')}\n        data-spec={STICKY_SPEC_ID}\n        ref={this.onRef}\n        id={this.props.uuid}\n      >\n        <div className={stickyClasses.join(' ')}>\n          <div className={titleClasses.join(' ')}>\n            <div className={styles.remove_button} onClick={this.handleClickRemove}>\n              <span className=\"fe-x\" />\n            </div>\n            <div className={styles.confirmation}>Remove?</div>\n            <TextareaAutosize\n              className={styles.title}\n              value={this.state.title}\n              onChange={this.handleChangeTitle}\n              onFocusCapture={this.handleTitleFocused}\n            />\n          </div>\n          <div className={styles.body_wrapper}>\n            <TextareaAutosize\n              className={styles.body}\n              value={this.state.body}\n              onChange={this.handleChangeBody}\n              onFocusCapture={this.handleBodyFocused}\n            />\n            {colorChooser}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { definition } }: AppState) => ({\n  definition\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => {\n  return bindActionCreators({ updateSticky }, dispatch);\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: false }\n)(Sticky);\n","import { Exit, FlowNode } from 'flowTypes';\nimport { GRID_SIZE, timeStart, timeEnd, debounce } from 'utils';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nconst {\n  jsPlumb: { importDefaults }\n} = require('../../node_modules/jsplumb/dist/js/jsplumb');\nexport interface DragEvent {\n  el: Element;\n  pos: number[];\n  finalPos: number[];\n  e: MouseEvent;\n  clientX: number;\n  clientY: number;\n  target: Element;\n}\n\nexport interface PendingConnections {\n  [id: string]: {\n    source: string;\n    target: string;\n    className: string;\n    slot: number;\n    totalSlots: number;\n  };\n}\n\nexport const REPAINT_DURATION = 600;\n\nexport const TARGET_DEFAULTS = {\n  anchor: ['Continuous', { shape: 'Rectangle', faces: ['top', 'left', 'right'] }],\n  endpoint: [\n    'Rectangle',\n    {\n      width: 23,\n      height: 23,\n      cssClass: 'plumb-endpoint',\n      hoverClass: 'plumb-endpoint-hover'\n    }\n  ],\n  dropOptions: {\n    tolerance: 'touch',\n    hoverClass: 'plumb-drop-hover',\n    isTarget: false\n  },\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isTarget: false\n};\n\nexport const SOURCE_DEFAULTS = {\n  anchor: 'BottomCenter',\n  maxConnections: 1,\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isSource: true\n};\n\nexport const getAnchor = (sourceEle: any, targetEle: any): any[] => {\n  return [\n    'Continuous',\n    {\n      shape: 'Dot',\n      faces:\n        sourceEle.getBoundingClientRect().bottom + GRID_SIZE / 3 <\n        targetEle.getBoundingClientRect().top\n          ? ['top']\n          : ['right', 'left']\n    }\n  ];\n};\n\nconst defaultConnector = [\n  'Flowchart',\n  {\n    stub: 12,\n    midpoint: 0.75,\n    alwaysRespectStubs: false,\n    gap: [0, 5],\n    cornerRadius: 3\n  }\n];\n\n/* istanbul ignore next */\nexport default class Plumber {\n  public jsPlumb: any;\n\n  // we batch up connections to apply them together\n  private pendingConnections: PendingConnections = {};\n  private pendingConnectionTimeout: any;\n\n  private animateInterval: any = null;\n\n  private onLoadFunction: () => void = null;\n\n  constructor() {\n    this.jsPlumb = importDefaults({\n      DragOptions: { cursor: 'pointer', zIndex: 1000 },\n      DropOptions: { tolerance: 'touch', hoverClass: 'plumb-hover' },\n      Endpoint: 'Rectangle',\n      EndpointStyle: { strokeStyle: 'transparent' },\n      PaintStyle: { strokeWidth: 3.5 },\n      ConnectionsDetachable: true,\n      Connector: defaultConnector,\n      ConnectionOverlays: [\n        [\n          'PlainArrow',\n          {\n            location: 0.999,\n            width: 12,\n            length: 12,\n            cssClass: 'jtk-arrow'\n          }\n        ]\n      ]\n    });\n\n    this.debug = this.debug.bind(this);\n    this.setSourceEnabled = this.setSourceEnabled.bind(this);\n    this.makeSource = this.makeSource.bind(this);\n    this.makeTarget = this.makeTarget.bind(this);\n    this.connectExit = this.connectExit.bind(this);\n    this.setDragSelection = this.setDragSelection.bind(this);\n    this.clearDragSelection = this.clearDragSelection.bind(this);\n    this.removeFromDragSelection = this.removeFromDragSelection.bind(this);\n    this.cancelDurationRepaint = this.cancelDurationRepaint.bind(this);\n    this.remove = this.remove.bind(this);\n    this.handlePendingConnections = this.handlePendingConnections.bind(this);\n    this.checkForPendingConnections = this.checkForPendingConnections.bind(this);\n    this.connect = this.connect.bind(this);\n    this.bind = this.bind.bind(this);\n    this.repaint = this.repaint.bind(this);\n    this.recalculate = this.recalculate.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateClass = this.updateClass.bind(this);\n    this.rerouteAnchors = this.rerouteAnchors.bind(this);\n  }\n\n  public setContainer(containerId: string) {\n    this.jsPlumb.setContainer(containerId);\n  }\n\n  public debug(): any {\n    return this.jsPlumb;\n  }\n\n  public setSourceEnabled(uuid: string, enabled: boolean): void {\n    this.jsPlumb.setSourceEnabled(uuid, enabled);\n  }\n\n  public makeSource(uuid: string): any {\n    return this.jsPlumb.makeSource(uuid, SOURCE_DEFAULTS);\n  }\n\n  public makeTarget(uuid: string): void {\n    this.jsPlumb.makeTarget(uuid, TARGET_DEFAULTS);\n  }\n\n  public connectExit(node: FlowNode, exit: Exit, className: string = null): void {\n    this.connect(\n      `${node.uuid}:${exit.uuid}`,\n      exit.destination_uuid,\n      className,\n      node.exits.findIndex((e: Exit) => e.uuid === exit.uuid),\n      node.exits.length\n    );\n  }\n\n  public updateClass(node: FlowNode, exit: Exit, className: string, add: boolean): void {\n    const source = `${node.uuid}:${exit.uuid}`;\n    const connection = this.jsPlumb.select({ source });\n    if (add) {\n      connection.addClass(className);\n    } else {\n      connection.removeClass(className);\n    }\n  }\n\n  public removeFromDragSelection(uuid: string): void {\n    this.jsPlumb.removeFromDragSelection(uuid);\n  }\n\n  public setDragSelection(selected: { [uuid: string]: boolean }): void {\n    this.cancelDurationRepaint();\n    this.jsPlumb.clearDragSelection();\n\n    Object.keys(selected).forEach(uuid => this.jsPlumb.addToDragSelection(uuid));\n  }\n\n  public clearDragSelection(): void {\n    this.jsPlumb.clearDragSelection();\n  }\n\n  public cancelDurationRepaint(): void {\n    if (this.animateInterval) {\n      window.clearInterval(this.animateInterval);\n      this.animateInterval = null;\n    }\n  }\n\n  private handlePendingConnections(): void {\n    const targets: { [id: string]: boolean } = {};\n\n    const batch = Object.keys(this.pendingConnections).length;\n    if (batch > 1) {\n      timeStart('Batched ' + batch + ' connections');\n    }\n\n    this.jsPlumb.batch(() => {\n      for (const key in this.pendingConnections) {\n        if (this.pendingConnections.hasOwnProperty(key)) {\n          const connection = this.pendingConnections[key];\n          const { source, target, className, slot, totalSlots } = connection;\n\n          const anchors = target\n            ? [\n                'Bottom',\n                getAnchor(document.getElementById(source), document.getElementById(target))\n              ]\n            : [];\n\n          if (source != null) {\n            // any existing connections for our source need to be deleted\n            this.jsPlumb.select({ source }).delete({ fireEvent: false });\n\n            const start = totalSlots < 5 ? 0.75 : 0.35;\n            let midpoint = start + slot * 0.15;\n            const exitMiddle = totalSlots / 2;\n            if (slot > exitMiddle) {\n              midpoint = start - 0.05 + (totalSlots - slot) * 0.15;\n            }\n\n            // add reasonable boundaries for midpoints\n            midpoint = Math.max(Math.min(0.9, midpoint), 0.1);\n\n            const connector: any = [...defaultConnector];\n            connector[1].midpoint = midpoint;\n\n            // now make our new connection\n            if (target != null) {\n              this.jsPlumb.connect({\n                source,\n                target,\n                anchors,\n                fireEvent: false,\n                cssClass: className,\n                detachable: !className,\n                connector\n              });\n            }\n          }\n\n          if (target != null) {\n            targets[target] = true;\n          }\n\n          delete this.pendingConnections[key];\n        }\n      }\n    }, false);\n\n    if (batch > 1) {\n      timeEnd('Batched ' + batch + ' connections');\n    }\n\n    // fire our callback for who is embedding us\n    if (this.onLoadFunction) {\n      this.onLoadFunction();\n      this.onLoadFunction = null;\n    }\n  }\n\n  public triggerLoaded(onLoad: () => void): void {\n    if (onLoad) {\n      if (Object.keys(this.pendingConnections).length === 0) {\n        onLoad();\n      }\n      this.onLoadFunction = onLoad;\n    }\n  }\n\n  private checkForPendingConnections(): void {\n    if (this.pendingConnectionTimeout) {\n      window.clearTimeout(this.pendingConnectionTimeout);\n    }\n\n    this.pendingConnectionTimeout = window.setTimeout(() => {\n      this.handlePendingConnections();\n    }, 0);\n  }\n\n  public connect(\n    source: string,\n    target: string,\n    className: string = null,\n    slot: number = 0,\n    totalSlots: number = 0\n  ): void {\n    this.pendingConnections[`${source}:${target}:${className}`] = {\n      source,\n      target,\n      className,\n      slot,\n      totalSlots\n    };\n    this.checkForPendingConnections();\n  }\n\n  public bind(event: string, onEvent: Function): void {\n    return this.jsPlumb.bind(event, onEvent);\n  }\n\n  public repaint(uuid?: string): void {\n    if (!uuid) {\n      this.jsPlumb.recalculateOffsets();\n      this.jsPlumb.repaintEverything();\n    } else {\n      this.jsPlumb.recalculateOffsets(uuid);\n      this.jsPlumb.repaint(uuid);\n    }\n  }\n\n  public remove(uuid: string): void {\n    if (this.jsPlumb.isSource(uuid)) {\n      this.jsPlumb.unmakeSource(uuid);\n      this.jsPlumb.remove(uuid);\n    } else if (this.jsPlumb.isTarget(uuid)) {\n      this.jsPlumb.deleteConnectionsForElement(uuid);\n    }\n  }\n\n  /**\n   *\n   * Reroutes the connections for actively moving nodes. We try to direct\n   * connections as much as possible.\n   * @param elements the targets and sources that ar moving around\n   */\n  public rerouteAnchors(elements: Element[]): void {\n    elements.forEach((ele: Element) => {\n      const uuid = ele.id;\n      const connections = this.jsPlumb\n        .getConnections({ target: uuid })\n        .concat(this.jsPlumb.getConnections({ source: uuid }));\n      for (const c of connections) {\n        c.endpoints[1].setAnchor(getAnchor(c.endpoints[0].element, c.endpoints[1].element));\n      }\n    });\n  }\n\n  public revalidate(elements: Element[]): void {\n    this.jsPlumb.revalidate(elements);\n\n    // reroute our anchors but only after we stop moving for a bit\n    debounce(this.rerouteAnchors, 200, () => {\n      this.rerouteAnchors(elements);\n    });\n  }\n\n  public recalculate(uuid: string): void {\n    window.setTimeout(() => {\n      this.jsPlumb.revalidate(uuid);\n    }, 100);\n  }\n\n  public reset(): void {\n    this.jsPlumb.reset();\n  }\n\n  public getPlumb(): any {\n    return this.jsPlumb;\n  }\n}\n","import { FlowStoreProps } from 'components/flow/Flow';\nimport { DebugState } from 'store/editor';\n\nconst mutate = require('immutability-helper');\n\n/* istanbul ignore next */\nexport default class Debug {\n  private props: FlowStoreProps;\n  private state: DebugState;\n\n  constructor(props: FlowStoreProps, initial: DebugState) {\n    this.props = props;\n    this.state = initial || { showUUIDs: false };\n  }\n\n  public showUUIDs(): DebugState {\n    const updated = mutate(this.state, { $merge: { showUUIDs: true } });\n    this.props.mergeEditorState({ debug: updated });\n    return updated;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button from 'components/button/Button';\nimport { Canvas } from 'components/canvas/Canvas';\nimport { CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport Node from 'components/flow/node/Node';\nimport { getDraggedFrom } from 'components/helpers';\nimport NodeEditor from 'components/nodeeditor/NodeEditor';\nimport Simulator from 'components/simulator/Simulator';\nimport Sticky, { STICKY_BODY, STICKY_TITLE } from 'components/sticky/Sticky';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowMetadata, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Plumber from 'services/Plumber';\nimport { DragSelection, DebugState } from 'store/editor';\nimport { RenderNode } from 'store/flowContext';\nimport { createEmptyNode, detectLoops, getOrderedNodes } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  ConnectionEvent,\n  DispatchWithState,\n  mergeEditorState,\n  MergeEditorState,\n  NoParamsAC,\n  onConnectionDrag,\n  OnConnectionDrag,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  onRemoveNodes,\n  OnRemoveNodes,\n  OnUpdateCanvasPositions,\n  onUpdateCanvasPositions,\n  resetNodeEditingState,\n  UpdateConnection,\n  updateConnection,\n  updateSticky,\n  UpdateSticky\n} from 'store/thunks';\nimport {\n  createUUID,\n  isRealValue,\n  NODE_PADDING,\n  renderIf,\n  snapToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\nimport Debug from 'utils/debug';\n\nimport styles from './Flow.module.scss';\nimport { Trans } from 'react-i18next';\nimport { PopTabType } from 'config/interfaces';\nimport i18n from 'config/i18n';\n\ndeclare global {\n  interface Window {\n    fe: any;\n  }\n}\n\nexport interface FlowStoreProps {\n  ghostNode: RenderNode;\n  debug: DebugState;\n  translating: boolean;\n  popped: string;\n  dragActive: boolean;\n\n  mergeEditorState: MergeEditorState;\n\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  metadata: FlowMetadata;\n  nodeEditorSettings: NodeEditorSettings;\n\n  updateConnection: UpdateConnection;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  onUpdateCanvasPositions: OnUpdateCanvasPositions;\n  onRemoveNodes: OnRemoveNodes;\n  resetNodeEditingState: NoParamsAC;\n  onConnectionDrag: OnConnectionDrag;\n  updateSticky: UpdateSticky;\n}\n\nexport interface Translations {\n  [uuid: string]: any;\n}\n\nexport const DRAG_THRESHOLD = 3;\nexport const REPAINT_TIMEOUT = 500;\nexport const GHOST_POSITION_INITIAL = { left: -1000, top: -1000 };\n\nexport const nodeSpecId = 'node';\nexport const nodesContainerSpecId = 'node-container';\nexport const ghostNodeSpecId = 'ghost-node';\nexport const dragSelectSpecId = 'drag-select';\n\nexport const isDraggingBack = (event: ConnectionEvent) => {\n  return event.suspendedElementId === event.targetId && event.source !== null;\n};\n\nexport const getDragStyle = (drag: DragSelection) => {\n  const left = Math.min(drag.startX, drag.currentX);\n  const top = Math.min(drag.startY, drag.currentY);\n  const width = Math.max(drag.startX, drag.currentX) - left;\n  const height = Math.max(drag.startY, drag.currentY) - top;\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n};\n\nexport class Flow extends React.PureComponent<FlowStoreProps, {}> {\n  private Plumber: Plumber;\n  private nodeContainerUUID: string;\n\n  // Refs\n  private ghost: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: FlowStoreProps, context: ConfigProviderContext) {\n    super(props, context);\n\n    this.nodeContainerUUID = createUUID();\n\n    this.Plumber = new Plumber();\n\n    /* istanbul ignore next */\n    if (context.config.debug) {\n      window.fe = new Debug(props, this.props.debug);\n    }\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^is/, /^get/, /^handle/]\n    });\n\n    timeStart('Loaded Flow');\n  }\n\n  private ghostRef(ref: any): any {\n    return (this.ghost = ref);\n  }\n\n  public componentDidMount(): void {\n    this.Plumber.bind('connection', (event: ConnectionEvent) =>\n      this.props.updateConnection(event.sourceId, event.targetId)\n    );\n    this.Plumber.bind('beforeDrag', (event: ConnectionEvent) => {\n      this.beforeConnectionDrag(event);\n    });\n\n    this.Plumber.bind('connectionDrag', (event: ConnectionEvent) => {\n      this.props.onConnectionDrag(event, this.context.config.flowType);\n    });\n\n    this.Plumber.bind('connectionDragStop', (event: ConnectionEvent) =>\n      this.onConnectorDrop(event)\n    );\n    this.Plumber.bind(\n      'beforeStartDetach',\n      (event: ConnectionEvent) => !this.props.translating && this.context.config.mutable\n    );\n    this.Plumber.bind('beforeDetach', (event: ConnectionEvent) => true);\n    this.Plumber.bind('beforeDrop', (event: ConnectionEvent) => this.onBeforeConnectorDrop(event));\n    this.Plumber.triggerLoaded(this.context.config.onLoad);\n\n    timeEnd('Loaded Flow');\n  }\n\n  public componentWillUnmount(): void {\n    this.Plumber.reset();\n  }\n\n  /**\n   * Called right before a connector is dropped onto a new node\n   */\n  private onBeforeConnectorDrop(event: ConnectionEvent): boolean {\n    this.props.resetNodeEditingState();\n    const fromNodeUUID = event.sourceId.split(':')[0];\n    try {\n      detectLoops(this.props.nodes, fromNodeUUID, event.targetId);\n    } catch {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Called the moment a connector is done dragging, whether it is dropped on an\n   * existing node or on to empty space.\n   */\n  private onConnectorDrop(event: ConnectionEvent): boolean {\n    const ghostNode = this.props.ghostNode;\n    // Don't show the node editor if we a dragging back to where we were\n    if (isRealValue(ghostNode) && !isDraggingBack(event)) {\n      // Wire up the drag from to our ghost node\n      this.Plumber.recalculate(ghostNode.node.uuid);\n\n      const dragPoint = getDraggedFrom(ghostNode);\n\n      this.Plumber.connect(dragPoint.nodeUUID + ':' + dragPoint.exitUUID, ghostNode.node.uuid);\n\n      // Save our position for later\n      const { left, top } = (this.ghost &&\n        snapToGrid(this.ghost.ele.offsetLeft, this.ghost.ele.offsetTop)) || { left: 0, top: 0 };\n\n      this.props.ghostNode.ui.position = { left, top };\n\n      let originalAction = null;\n      if (ghostNode.node.actions && ghostNode.node.actions.length === 1) {\n        originalAction = ghostNode.node.actions[0];\n      }\n\n      // Bring up the node editor\n      this.props.onOpenNodeEditor({\n        originalNode: ghostNode,\n        originalAction\n      });\n    }\n\n    if (isDraggingBack(event)) {\n      this.props.mergeEditorState({ ghostNode: null });\n    }\n\n    /* istanbul ignore next */\n    document.removeEventListener('mousemove', (window as any).ghostListener);\n\n    return true;\n  }\n\n  private beforeConnectionDrag(event: ConnectionEvent): boolean {\n    if (event.source) {\n      event.source.dispatchEvent(new Event('disconnect'));\n    }\n    return !this.props.translating;\n  }\n\n  private handleStickyCreation(props: CanvasDraggableProps) {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    const uuid = props.uuid;\n    return <Sticky key={uuid} uuid={uuid} sticky={stickyMap[uuid]} selected={props.selected} />;\n  }\n\n  private handleNodeCreation(props: CanvasDraggableProps) {\n    const onlyNode = Object.keys(this.props.nodes).length === 1;\n    return (\n      <Node\n        onlyNode={onlyNode}\n        startingNode={props.idx === 0}\n        selected={props.selected}\n        key={props.uuid}\n        data-spec={nodeSpecId}\n        nodeUUID={props.uuid}\n        plumberMakeTarget={this.Plumber.makeTarget}\n        plumberRemove={this.Plumber.remove}\n        plumberRecalculate={this.Plumber.recalculate}\n        plumberMakeSource={this.Plumber.makeSource}\n        plumberConnectExit={this.Plumber.connectExit}\n        plumberUpdateClass={this.Plumber.updateClass}\n      />\n    );\n  }\n\n  private getNodes(): CanvasDraggableProps[] {\n    return getOrderedNodes(this.props.nodes).map((renderNode: RenderNode, idx: number) => {\n      return {\n        uuid: renderNode.node.uuid,\n        position: renderNode.ui.position,\n        elementCreator: this.handleNodeCreation,\n        config: renderNode,\n        idx\n      };\n    });\n  }\n\n  private getStickies(): CanvasDraggableProps[] {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    return Object.keys(stickyMap).map((uuid: string, idx: number) => {\n      return {\n        uuid,\n        elementCreator: this.handleStickyCreation,\n        position: stickyMap[uuid].position,\n        idx\n      };\n    });\n  }\n\n  private getDragNode(): JSX.Element {\n    return isRealValue(this.props.ghostNode) ? (\n      <div\n        data-spec={ghostNodeSpecId}\n        key={this.props.ghostNode.node.uuid}\n        style={{ position: 'absolute', display: 'block', visibility: 'hidden' }}\n      >\n        <Node\n          onlyNode={false}\n          selected={false}\n          startingNode={false}\n          ref={this.ghostRef}\n          ghost={true}\n          nodeUUID={this.props.ghostNode.node.uuid}\n          plumberMakeTarget={this.Plumber.makeTarget}\n          plumberRemove={this.Plumber.remove}\n          plumberRecalculate={this.Plumber.recalculate}\n          plumberMakeSource={this.Plumber.makeSource}\n          plumberConnectExit={this.Plumber.connectExit}\n          plumberUpdateClass={this.Plumber.updateClass}\n        />\n      </div>\n    ) : null;\n  }\n\n  private getSimulator(): JSX.Element {\n    return renderIf(this.context.config.endpoints && this.context.config.endpoints.simulateStart)(\n      <Simulator\n        key=\"simulator\"\n        popped={this.props.popped}\n        mergeEditorState={this.props.mergeEditorState}\n        onToggled={(visible: boolean, tab: PopTabType) => {\n          this.props.mergeEditorState({\n            popped: visible ? tab : null\n          });\n        }}\n      />\n    );\n  }\n\n  private getNodeEditor(): JSX.Element {\n    return renderIf(this.props.nodeEditorSettings !== null)(\n      <NodeEditor\n        key=\"node-editor\"\n        helpArticles={this.context.config.help}\n        plumberConnectExit={this.Plumber.connectExit}\n      />\n    );\n  }\n\n  // TODO: this should be a callback from the canvas\n  private handleDoubleClick(position: FlowPosition): void {\n    const { left, top } = position;\n    this.props.updateSticky(createUUID(), {\n      position: snapToGrid(left - 90 + NODE_PADDING, top - 40),\n      title: STICKY_TITLE,\n      body: STICKY_BODY\n    });\n  }\n\n  private getEmptyFlow(): JSX.Element {\n    return (\n      <div key=\"create_node\" className={styles.empty_flow}>\n        <Trans i18nKey=\"empty_flow_message\">\n          <h1>Let's get started</h1>\n          <div>\n            We recommend starting your flow by sending a message. This message will be sent to\n            anybody right after they join the flow. This is your chance to send a single message or\n            ask them a question.\n          </div>\n        </Trans>\n\n        <Button\n          name={i18n.t('buttons.create_message', 'Create Message')}\n          onClick={() => {\n            const emptyNode = createEmptyNode(null, null, 1, this.context.config.flowType);\n            this.props.onOpenNodeEditor({\n              originalNode: emptyNode,\n              originalAction: emptyNode.node.actions[0]\n            });\n          }}\n        />\n      </div>\n    );\n  }\n\n  /* \n  public componentDidUpdate(prevProps: FlowStoreProps): void {\n    traceUpdate(this, prevProps);\n  }\n  */\n\n  public handleDragging(uuids: string[]): void {\n    uuids.forEach((uuid: string) => {\n      try {\n        const ele = document.getElementById(uuid);\n        const exits = ele.querySelectorAll('.jtk-connected');\n        this.Plumber.revalidate([ele, ...exits]);\n      } catch (error) {}\n    });\n  }\n\n  public handleCanvasLoaded(): void {\n    this.Plumber.setContainer('canvas');\n  }\n\n  public render(): JSX.Element {\n    const nodes = this.getNodes();\n\n    const draggables = this.getStickies().concat(nodes);\n\n    return (\n      <div>\n        {nodes.length === 0 ? this.getEmptyFlow() : <>{this.getSimulator()}</>}\n        {this.getNodeEditor()}\n\n        <Canvas\n          mutable={this.context.config.mutable}\n          draggingNew={!!this.props.ghostNode && !this.props.nodeEditorSettings}\n          newDragElement={this.getDragNode()}\n          onDragging={this.handleDragging}\n          uuid={this.nodeContainerUUID}\n          dragActive={this.props.dragActive}\n          mergeEditorState={this.props.mergeEditorState}\n          onRemoveNodes={this.props.onRemoveNodes}\n          draggables={draggables}\n          onDoubleClick={this.handleDoubleClick}\n          onUpdatePositions={this.props.onUpdateCanvasPositions}\n          onLoaded={this.handleCanvasLoaded}\n        ></Canvas>\n        <div id=\"activity_recent_contacts\"></div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, metadata, nodes },\n  editorState: { ghostNode, debug, translating, popped, dragActive },\n  // tslint:disable-next-line: no-shadowed-variable\n  nodeEditor: { settings }\n}: AppState) => {\n  return {\n    nodeEditorSettings: settings,\n    definition,\n    nodes,\n    metadata,\n    ghostNode,\n    debug,\n    translating,\n    popped,\n    dragActive\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      mergeEditorState,\n      resetNodeEditingState,\n      onConnectionDrag,\n      onOpenNodeEditor,\n      onUpdateCanvasPositions,\n      onRemoveNodes,\n      updateConnection,\n      updateSticky\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Flow);\n","import { desnake } from 'utils';\nimport i18next from 'i18next';\nimport { Translation, TranslationType, TranslationBundle } from './TranslatorTab';\n\nexport enum TranslationState {\n  COMPLETE = 'complete',\n  MISSING = 'missing'\n}\n\nexport const getMergedByType = (\n  bundle: TranslationBundle,\n  state: TranslationState,\n  type: TranslationType\n) => {\n  return bundle.translations\n    .filter(translation => {\n      switch (state) {\n        case TranslationState.COMPLETE:\n          return !!translation.to && translation.type === type;\n        case TranslationState.MISSING:\n          return !translation.to && translation.type === type;\n      }\n      return true;\n    })\n    .map(translation => (translation as any)[state === TranslationState.MISSING ? 'from' : 'to'])\n    .join(', ');\n};\n\nexport const findTranslations = (\n  type: TranslationType,\n  localizeableKeys: string[],\n  localizable: any,\n  localization: { [uuid: string]: any }\n): Translation[] => {\n  const translations: Translation[] = [];\n\n  localizeableKeys.forEach((attribute: string) => {\n    let keys = attribute.split('.');\n    let from = localizable as any;\n    let to: any = [];\n\n    while (keys.length > 0 && from) {\n      if (keys.length > 0 && from['uuid']) {\n        to = (localization || {})[from['uuid']];\n      }\n\n      const path = keys.shift();\n      if (to) {\n        to = to[path];\n      }\n      from = from[path];\n    }\n\n    if (from) {\n      if (to) {\n        to = to.join(', ');\n      }\n\n      if (Array.isArray(from)) {\n        from = from\n          .map((obj: any) => {\n            if (obj['name']) {\n              return obj['name'];\n            }\n            if (obj['arguments']) {\n              return obj['arguments'].join(' ');\n            }\n            return obj;\n          })\n          .join(', ');\n      }\n\n      if (from) {\n        translations.push({\n          type,\n          attribute,\n          from,\n          to\n        });\n      }\n    }\n  });\n\n  return translations;\n};\n\nexport const getFriendlyAttribute = (attribute: string) => {\n  if (attribute === 'categories') {\n    return i18next.t('translation.attributes.categories', 'Categories');\n  }\n\n  if (attribute === 'cases') {\n    return i18next.t('translation.attributes.cases', 'Rules');\n  }\n\n  if (attribute === 'text') {\n    return i18next.t('translation.attributes.text', 'Message');\n  }\n\n  if (attribute === 'quick_replies') {\n    return i18next.t('translation.attributes.quick_replies', 'Quick Replies');\n  }\n\n  if (attribute === 'templating.variables') {\n    return i18next.t('translation.attributes.templates', 'Template Variables');\n  }\n\n  if (attribute === 'subject') {\n    return i18next.t('translation.attributes.subject', 'Subject');\n  }\n\n  if (attribute === 'body') {\n    return i18next.t('translation.attributes.body', 'Body');\n  }\n\n  return desnake(attribute);\n};\n\nexport const getBundleKey = (bundle: TranslationBundle) => {\n  return bundle.node_uuid + bundle.action_uuid;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { ConfigProviderContext } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, Assets } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DispatchWithState, HandleLanguageChange, handleLanguageChange } from 'store/thunks';\n\nimport styles from './LanguageSelector.module.scss';\n\nexport interface LanguageSelectorProps {\n  language: Asset;\n  languages: Assets;\n  handleLanguageChange: HandleLanguageChange;\n}\n\nexport const containerClasses = 'language-selector';\n\nexport class LanguageSelector extends React.Component<LanguageSelectorProps> {\n  constructor(props: LanguageSelectorProps, context: ConfigProviderContext) {\n    super(props, context);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleLanguageChanged(language: Asset): void {\n    this.props.handleLanguageChange(language);\n  }\n\n  public handleLanguageSort(a: Asset, b: Asset): number {\n    if (a.id === 'base') {\n      return -1;\n    }\n\n    if (b.id === 'base') {\n      return 1;\n    }\n\n    if (a.order !== undefined && b.order !== undefined) {\n      return a.order - b.order;\n    }\n\n    return a.name.localeCompare(b.name);\n  }\n\n  public render(): JSX.Element {\n    if (!this.props.language) {\n      return null;\n    }\n\n    const languages = Object.keys(this.props.languages.items)\n      .map((iso: string) => this.props.languages.items[iso])\n      .sort(this.handleLanguageSort);\n\n    if (languages.length === 1) {\n      return null;\n    }\n\n    return (\n      <div className={containerClasses}>\n        <div style={{ position: 'fixed', right: '2em', marginTop: '2em', zIndex: 1 }}>\n          {languages.map((lang: Asset, idx: number) => {\n            return (\n              <div key={'lang_' + lang.id} className={styles.language}>\n                {idx > 0 ? <div className={styles.separator}>|</div> : null}\n                <div\n                  className={\n                    styles.language_link +\n                    ' ' +\n                    (this.props.language.id === lang.id ? styles.active : '')\n                  }\n                  onClick={() => {\n                    this.handleLanguageChanged(lang);\n                  }}\n                >\n                  {lang.name}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { assetStore }, editorState: { language } }: AppState) => ({\n  languages: assetStore.languages,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      handleLanguageChange\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LanguageSelector);\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { PopTab } from 'components/poptab/PopTab';\nimport dateFormat from 'dateformat';\nimport { getAssets, getFlowDetails } from 'external';\nimport { FlowDefinition, SPEC_VERSION, FlowDetails, FlowIssue, FlowMetadata } from 'flowTypes';\nimport React from 'react';\nimport { Asset, AssetStore } from 'store/flowContext';\nimport { renderIf } from 'utils';\n\nimport styles from './RevisionExplorer.module.scss';\nimport i18n from 'config/i18n';\nimport { PopTabType } from 'config/interfaces';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface User {\n  email: string;\n  name: string;\n}\n\nexport interface SaveResult {\n  revision: Revision;\n  issues: FlowIssue[];\n  metadata: FlowMetadata;\n}\n\nexport interface Revision {\n  id: number;\n  version: string;\n  revision: number;\n  created_on: string;\n  user: User;\n  current: boolean;\n}\n\nexport interface RevisionExplorerProps {\n  assetStore: AssetStore;\n  loadFlowDefinition: (details: FlowDetails, assetStore: AssetStore) => void;\n  createNewRevision: () => void;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  utc?: boolean;\n  popped: string;\n}\n\nexport interface RevisionExplorerState {\n  revisions: Asset[];\n  revision: Asset;\n  definition: FlowDefinition;\n  visible: boolean;\n}\n\nexport class RevisionExplorer extends React.Component<\n  RevisionExplorerProps,\n  RevisionExplorerState\n> {\n  constructor(props: RevisionExplorerProps) {\n    super(props);\n    this.state = {\n      revisions: [],\n      revision: null,\n      definition: null,\n      visible: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateRevisions(): Promise<void> {\n    if (this.props.assetStore !== null) {\n      const assets = this.props.assetStore.revisions;\n      return getAssets(\n        assets.endpoint + '?version=' + SPEC_VERSION,\n        assets.type,\n        assets.id || 'id'\n      ).then((remoteAssets: Asset[]) => {\n        if (remoteAssets.length > 0) {\n          remoteAssets[0].content.current = true;\n        }\n        this.setState({ revisions: remoteAssets });\n      });\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.REVISION_HISTORY);\n\n    this.setState(\n      (prevState: RevisionExplorerState) => {\n        return { visible: !prevState.visible };\n      },\n      () => {\n        if (this.state.visible) {\n          this.handleUpdateRevisions();\n        } else {\n          if (this.state.revision && this.state.revision.id !== this.state.revisions[0].id) {\n            getFlowDetails(this.props.assetStore.revisions, this.state.revisions[0].id).then(\n              (details: FlowDetails) => {\n                this.props.loadFlowDefinition(details, this.props.assetStore);\n                this.setState({ revision: null });\n              }\n            );\n          }\n        }\n      }\n    );\n  }\n\n  public onRevisionClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      getFlowDetails(this.props.assetStore.revisions, revision.id).then((details: FlowDetails) => {\n        this.props.loadFlowDefinition(details, this.props.assetStore);\n        this.setState({ revision });\n      });\n    };\n  };\n\n  public onRevertClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      this.props.createNewRevision();\n      this.setState({ visible: false, revision: null });\n    };\n  };\n\n  public render(): JSX.Element {\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.REVISION_HISTORY\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header={i18n.t('revisions.header', 'Revisions')}\n          color=\"#8e5ea7\"\n          icon=\"fe-time\"\n          label={i18n.t('revisions.label', 'Revision History')}\n          top=\"170px\"\n          popTop=\"40px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n          custom={false}\n        >\n          <div className={styles.explorer_wrapper}>\n            <div className={styles.explorer}>\n              <div className={styles.revisions}>\n                {this.state.revisions.map((asset: Asset) => {\n                  const revision = asset.content as Revision;\n\n                  const isSelected = this.state.revision && asset.id === this.state.revision.id;\n\n                  const selectedClass = revision.current || isSelected ? styles.selected : '';\n\n                  return (\n                    <div\n                      className={styles.revision + ' ' + selectedClass}\n                      key={'revision_' + asset.id}\n                      onClick={this.onRevisionClicked(asset)}\n                    >\n                      {renderIf(revision.current)(\n                        <div className={styles.button + ' ' + styles.current}>\n                          {i18n.t('revisions.current', 'current')}\n                        </div>\n                      )}\n                      {renderIf(isSelected && !revision.current)(\n                        <div onClick={this.onRevertClicked(asset)} className={styles.button}>\n                          {i18n.t('revisions.revert', 'revert')}\n                        </div>\n                      )}\n                      <div className={styles.created_on}>\n                        {dateFormat(\n                          new Date(revision.created_on),\n                          'mmmm d, yyyy, h:MM TT',\n                          this.props.utc\n                        )}\n                      </div>\n                      <div className={styles.email}>\n                        {revision.user.name || revision.user.email}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport React from 'react';\nimport styles from './IssuesTab.module.scss';\nimport i18n from 'config/i18n';\nimport { FlowIssue, Action } from 'flowTypes';\nimport { PopTab } from 'components/poptab/PopTab';\nimport { renderIssue } from 'components/flow/actions/helpers';\nimport {\n  AssetMap,\n  RenderNode,\n  Asset,\n  RenderNodeMap,\n  RenderAction,\n  FlowIssueMap\n} from 'store/flowContext';\nimport { getTypeConfig } from 'config';\nimport { getType } from 'config/typeConfigs';\nimport { Type, PopTabType } from 'config/interfaces';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface IssuesTabProps {\n  issues: FlowIssueMap;\n  languages: AssetMap;\n  nodes: RenderNodeMap;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  onIssueClicked: (issueDetail: IssueDetail) => void;\n  onIssueOpened: (IssueDetail: IssueDetail) => void;\n  popped: string;\n}\n\nexport type IssueDetail = {\n  issues: FlowIssue[];\n  renderObjects: RenderObjects;\n  language: Asset;\n};\n\ntype IssueMap = {\n  [uuid: string]: IssueDetail;\n};\n\nexport interface IssuesTabState {\n  visible: boolean;\n  selectedIssue: FlowIssue;\n  issueDetails: IssueDetail[];\n}\n\nexport interface RenderObjects {\n  renderNode: RenderNode;\n  renderAction?: RenderAction;\n}\n\nconst getIssueKey = (issue: FlowIssue) => {\n  return (issue.action_uuid || issue.node_uuid) + (issue.language || '');\n};\n\nconst getRenderObjects = (issue: FlowIssue, nodes: RenderNodeMap): RenderObjects => {\n  const renderNode = nodes[issue.node_uuid];\n  let renderAction: RenderAction = null;\n\n  if (issue.action_uuid && renderNode) {\n    const actionIdx = issue.action_uuid\n      ? renderNode.node.actions.findIndex((action: Action) => action.uuid === issue.action_uuid)\n      : null;\n\n    if (actionIdx > -1) {\n      const action = renderNode.node.actions[actionIdx];\n      renderAction = {\n        action,\n        config: getTypeConfig(action.type),\n        index: actionIdx\n      };\n    }\n  }\n\n  return {\n    renderNode,\n    renderAction\n  };\n};\n\nexport class IssuesTab extends React.Component<IssuesTabProps, IssuesTabState> {\n  constructor(props: IssuesTabProps) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      selectedIssue: null,\n      issueDetails: this.buildIssueDetails()\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/]\n    });\n  }\n\n  public componentDidUpdate(prevProps: IssuesTabProps): void {\n    if (\n      this.props.issues !== prevProps.issues ||\n      prevProps.nodes !== this.props.nodes ||\n      this.props.languages !== prevProps.languages\n    ) {\n      this.setState({ issueDetails: this.buildIssueDetails() });\n    }\n  }\n\n  private buildIssueDetails(): IssueDetail[] {\n    const issueMap: IssueMap = {};\n    if (Object.keys(this.props.nodes).length > 0) {\n      for (const issues of Object.values(this.props.issues)) {\n        for (const issue of issues) {\n          const key = getIssueKey(issue);\n          let issueDetail = issueMap[key];\n          if (!issueDetail) {\n            let language = null;\n            if (issue.language && this.props.languages) {\n              language = this.props.languages[issue.language];\n            }\n\n            const renderObjects = getRenderObjects(issue, this.props.nodes);\n            if (renderObjects.renderNode && (!issue.action_uuid || renderObjects.renderAction)) {\n              issueDetail = {\n                issues: [issue],\n                renderObjects: renderObjects,\n                language\n              };\n            }\n          } else {\n            issueDetail.issues.push(issue);\n          }\n\n          if (issueDetail) {\n            issueMap[key] = issueDetail;\n          }\n        }\n      }\n    }\n\n    return Object.values(issueMap).sort((a: IssueDetail, b: IssueDetail) => {\n      if (a.language && !b.language) {\n        return 1;\n      }\n\n      if (!a.language && b.language) {\n        return -1;\n      }\n\n      if (a.language && b.language && a.language.name !== b.language.name) {\n        return a.language.name.localeCompare(b.language.name);\n      }\n\n      const nodeDifference =\n        a.renderObjects.renderNode.ui.position.top - b.renderObjects.renderNode.ui.position.top;\n\n      if (nodeDifference !== 0) {\n        return nodeDifference;\n      }\n\n      // if we are the same node and have actions sort by those\n      if (a.renderObjects.renderNode.node.uuid === b.renderObjects.renderNode.node.uuid) {\n        if (a.renderObjects.renderAction && b.renderObjects.renderAction) {\n          return a.renderObjects.renderAction.index - b.renderObjects.renderAction.index;\n        }\n      }\n      return 0;\n    });\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.ISSUES_TAB);\n\n    this.setState((prevState: IssuesTabState) => {\n      return { visible: !prevState.visible };\n    });\n  }\n\n  private handleIssueClicked(issueDetail: IssueDetail) {\n    this.props.onIssueClicked(issueDetail);\n\n    window.setTimeout(() => {\n      this.props.onIssueOpened(issueDetail);\n    }, 750);\n  }\n\n  public render(): JSX.Element {\n    let issueCount = 0;\n\n    let lastLanguage: Asset = null;\n\n    const issues = this.state.issueDetails.map((details: IssueDetail) => {\n      issueCount += details.issues.length;\n\n      let languageHeader: JSX.Element = null;\n\n      if (details.language && details.language !== lastLanguage) {\n        languageHeader = <div className={styles.language}>{details.language.name}</div>;\n      }\n\n      lastLanguage = details.language;\n\n      let typeConfig: Type = null;\n\n      if (!details.renderObjects.renderNode) {\n        return null;\n      }\n\n      if (details.renderObjects.renderAction) {\n        typeConfig = details.renderObjects.renderAction.config;\n      } else {\n        typeConfig = getTypeConfig(getType(details.renderObjects.renderNode));\n      }\n\n      const locationHeader: JSX.Element = null;\n      const issues = details.issues.map((issue: FlowIssue, num: number) => (\n        <div key={getIssueKey(issue) + num} className={styles.message}>\n          <div className={styles.header}>{typeConfig.name}:</div> {renderIssue(issue)}\n        </div>\n      ));\n\n      return (\n        <div key={getIssueKey(details.issues[0]) + '_detail'}>\n          {languageHeader}\n          <div className={styles.details} onClick={() => this.handleIssueClicked(details)}>\n            {locationHeader}\n            <div className={styles.issues_code}>{issues}</div>\n          </div>\n        </div>\n      );\n    });\n\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.ISSUES_TAB\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header={`${i18n.t('issues.label', 'Flow Issues')} (${issueCount})`}\n          label={i18n.t('issues.header', 'Flow Issues')}\n          color=\"tomato\"\n          icon=\"fe-warning\"\n          top=\"270px\"\n          popTop=\"-60px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n          custom={false}\n        >\n          <div className={styles.issues_wrapper}>{issues}</div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport editorState from 'store/editor';\nimport flowContext from 'store/flowContext';\nimport nodeEditor from 'store/nodeEditor';\n\nexport default combineReducers({\n  flowContext,\n  editorState,\n  nodeEditor\n});\n","import { EditorState, initialState as editorState } from 'store/editor';\nimport { FlowContext, initialState as flowContext } from 'store/flowContext';\nimport { initialState as nodeEditor, NodeEditor } from 'store/nodeEditor';\n\nexport default interface AppState {\n  flowContext: FlowContext;\n  editorState: EditorState;\n  nodeEditor: NodeEditor;\n}\n\nexport const initialState: AppState = {\n  flowContext,\n  editorState,\n  nodeEditor\n};\n","import { applyMiddleware, createStore, Middleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from 'store/rootReducer';\nimport AppState, { initialState } from 'store/state';\n\nconst middlewares: Middleware[] = [thunk];\n\nexport default (state: AppState = initialState) => {\n  const store = createStore(\n    rootReducer,\n    state,\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./rootReducer', () => {\n      const { default: nextRootReducer } = require('./rootReducer');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport React from 'react';\nimport styles from './TranslatorTab.module.scss';\nimport i18n from 'config/i18n';\nimport { PopTab } from 'components/poptab/PopTab';\nimport { AssetMap, Asset, RenderNodeMap } from 'store/flowContext';\nimport { PopTabType, Type } from 'config/interfaces';\nimport { Action, Category, Case } from 'flowTypes';\nimport { getTypeConfig } from 'config';\nimport {\n  findTranslations,\n  getMergedByType,\n  TranslationState,\n  getFriendlyAttribute,\n  getBundleKey\n} from './helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport { UpdateTranslationFilters } from 'store/thunks';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { getType } from 'config/typeConfigs';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst cx: any = classNames.bind(styles);\n\nexport enum TranslationType {\n  PROPERTY = 'property',\n  CATEGORY = 'category',\n  CASE = 'case'\n}\n\nexport interface TranslationBundle {\n  node_uuid: string;\n  action_uuid?: string;\n  translations: Translation[];\n  translated: number;\n  typeConfig: Type;\n}\n\nexport interface Translation {\n  type: TranslationType;\n  attribute: string;\n  from: string;\n  to: string;\n}\n\nexport interface TranslatorTabProps {\n  localization: { [uuid: string]: any };\n  language: Asset;\n  languages: AssetMap;\n\n  translationFilters: { categories: boolean; rules: boolean };\n\n  nodes: RenderNodeMap;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  onTranslationClicked: (bundle: TranslationBundle) => void;\n  onTranslationOpened: (bundle: TranslationBundle) => void;\n  onTranslationFilterChanged: UpdateTranslationFilters;\n  popped: string;\n}\n\nexport interface TranslatorTabState {\n  visible: boolean;\n  selectedTranslation: Translation;\n  translationBundles: TranslationBundle[];\n  optionsVisible: boolean;\n  pctComplete: number;\n  translationFilters: { categories: boolean; rules: boolean };\n}\n\nexport class TranslatorTab extends React.Component<TranslatorTabProps, TranslatorTabState> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: TranslatorTabProps, context: any) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      selectedTranslation: null,\n      translationBundles: [],\n      optionsVisible: false,\n      pctComplete: 0,\n      translationFilters: props.translationFilters || { categories: true, rules: true }\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/, /^toggle/]\n    });\n  }\n\n  public componentWillUnmount(): void {\n    if (this.state.visible) {\n      this.handleTabClicked();\n    }\n  }\n\n  public componentDidUpdate(prevProps: TranslatorTabProps, prevState: TranslatorTabState): void {\n    // traceUpdate(this, prevProps, prevState);\n    if (\n      prevProps.translationFilters !== this.props.translationFilters ||\n      prevProps.localization !== this.props.localization ||\n      prevProps.language !== this.props.language ||\n      !prevState.visible ||\n      prevState.translationFilters !== this.state.translationFilters\n    ) {\n      this.handleUpdateTranslations();\n    }\n  }\n\n  private handleUpdateTranslations(): void {\n    const translationBundles: TranslationBundle[] = [];\n    Object.keys(this.props.nodes).forEach((node_uuid: string) => {\n      const renderNode = this.props.nodes[node_uuid];\n\n      // check for router level translations\n      if (\n        renderNode.node.router &&\n        (this.state.translationFilters.categories || this.state.translationFilters.rules)\n      ) {\n        const typeConfig = getTypeConfig(getType(renderNode));\n\n        let translations: Translation[] = [];\n        if (this.state.translationFilters.categories) {\n          const localizeableKeys = ['name'];\n          renderNode.node.router.categories.forEach((category: Category) => {\n            translations.push(\n              ...findTranslations(\n                TranslationType.CATEGORY,\n                localizeableKeys,\n                category,\n                this.props.localization\n              )\n            );\n          });\n        }\n\n        if (this.state.translationFilters.rules) {\n          const localizeableKeys = ['arguments'];\n          const switchRouter = getSwitchRouter(renderNode.node);\n          if (switchRouter) {\n            switchRouter.cases.forEach((kase: Case) => {\n              translations.push(\n                ...findTranslations(\n                  TranslationType.CASE,\n                  localizeableKeys,\n                  kase,\n                  this.props.localization\n                )\n              );\n            });\n          }\n        }\n\n        if (translations.length > 0) {\n          translationBundles.push({\n            typeConfig,\n            node_uuid,\n            translations,\n            translated: translations.filter((translation: Translation) => !!translation.to).length\n          });\n        }\n      } else {\n        // find attributes from each action\n        renderNode.node.actions.forEach((action: Action) => {\n          const typeConfig = getTypeConfig(action.type);\n          const translations = findTranslations(\n            TranslationType.PROPERTY,\n            typeConfig.localizeableKeys || [],\n            action,\n            this.props.localization\n          );\n\n          if (translations.length > 0) {\n            translationBundles.push({\n              typeConfig,\n              node_uuid,\n              action_uuid: action.uuid,\n              translations,\n              translated: translations.filter((translation: Translation) => !!translation.to).length\n            });\n          }\n        });\n      }\n    });\n\n    const counts = { total: 0, complete: 0 };\n    translationBundles.reduce((counts, bundle) => {\n      counts.total += bundle.translations.length;\n      counts.complete += bundle.translated;\n      return counts;\n    }, counts);\n\n    const pctComplete = counts.total > 0 ? Math.round((counts.complete / counts.total) * 100) : 0;\n\n    const bundles = translationBundles\n      .filter((bundle: TranslationBundle) => bundle.translated < bundle.translations.length)\n      .sort((a: TranslationBundle, b: TranslationBundle) => {\n        return b.translations.length - b.translated - (a.translations.length - a.translated);\n      });\n\n    if (\n      pctComplete !== this.state.pctComplete ||\n      bundles.length !== this.state.translationBundles.length\n    ) {\n      this.setState({\n        pctComplete,\n        translationBundles: bundles\n      });\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.TRANSLATOR_TAB);\n    this.setState((prevState: TranslatorTabState) => {\n      return { visible: !prevState.visible };\n    });\n  }\n\n  public toggleOptions(): void {\n    this.setState({ optionsVisible: !this.state.optionsVisible });\n  }\n\n  private toggleCategories(categories: boolean): void {\n    this.setState(\n      { translationFilters: { categories, rules: this.state.translationFilters.rules } },\n      () => {\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\n      }\n    );\n  }\n  private toggleRules(rules: boolean): void {\n    this.setState(\n      { translationFilters: { rules, categories: this.state.translationFilters.categories } },\n      () => {\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\n      }\n    );\n  }\n\n  private renderMissing(key: string, from: string, summary: string) {\n    if (from) {\n      return (\n        <div key={this.props.language.id + key} className={styles.item}>\n          <div className={styles.text + ' ' + styles.from_text}>{from}</div>\n          <div className={styles.text + ' ' + styles.attribute}>{summary}</div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private handleTranslationClicked(bundle: TranslationBundle) {\n    this.props.onTranslationClicked(bundle);\n\n    window.setTimeout(() => {\n      this.props.onTranslationOpened(bundle);\n    }, 750);\n  }\n\n  private handleChangeLanguageClick(e: any): void {\n    this.context.config.onChangeLanguage(this.props.language.id, this.props.language.name);\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  public render(): JSX.Element {\n    // only show change button if container set up to handle it\n    const showChangeButton = this.state.optionsVisible && this.context.config.onChangeLanguage;\n\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.TRANSLATOR_TAB\n    });\n\n    const optionsClasses = cx({\n      [styles.options]: true,\n      [styles.options_visible]: this.state.optionsVisible,\n      [styles.change_visible]: showChangeButton\n    });\n\n    const filledClasses = cx({\n      [styles.filled]: true,\n      [styles.hundredpct]: this.state.pctComplete === 100\n    });\n\n    const wrapperClasses = cx({\n      [styles.translations_wrapper]: true,\n      [styles.complete]: this.state.translationBundles.length === 0\n    });\n\n    return (\n      <div className={classes}>\n        <PopTab\n          header={`${this.props.language.name} ${i18n.t('translation.label', 'Translations')}`}\n          label={i18n.t('translation.header', 'Flow Translation')}\n          color=\"#777\"\n          icon=\"fe-language\"\n          top=\"120px\"\n          popTop=\"100px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n          custom={false}\n        >\n          <div key={'translation_wrapper'} className={wrapperClasses}>\n            {this.state.translationBundles.map((bundle: TranslationBundle) => {\n              return (\n                <div\n                  key={this.props.language.id + getBundleKey(bundle)}\n                  className={styles.translate_block}\n                  onClick={() => {\n                    this.handleTranslationClicked(bundle);\n                  }}\n                >\n                  <div className={styles.needs_translation}>\n                    <div className={styles.type_name}>{bundle.typeConfig.name}</div>\n                    {this.renderMissing(\n                      getBundleKey(bundle) + 'categories',\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CATEGORY),\n                      getFriendlyAttribute('categories')\n                    )}\n\n                    {this.renderMissing(\n                      getBundleKey(bundle) + 'rules',\n\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CASE),\n                      getFriendlyAttribute('cases')\n                    )}\n                    {bundle.translations\n                      .filter(\n                        translation =>\n                          !translation.to && translation.type === TranslationType.PROPERTY\n                      )\n                      .map(translation =>\n                        this.renderMissing(\n                          getBundleKey(bundle) + translation.from,\n                          translation.from,\n                          getFriendlyAttribute(translation.attribute)\n                        )\n                      )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className={optionsClasses} onClick={this.toggleOptions}>\n            <div className={styles.header}>\n              <div className={styles.progress_bar}>\n                <div\n                  style={{ width: `${this.state.pctComplete}%` }}\n                  className={filledClasses}\n                ></div>\n              </div>\n              <div className={styles.toggle}>\n                <span className=\"fe-arrow-up\"></span>\n              </div>\n            </div>\n            <div className={styles.filters}>\n              <div className={styles.checkboxes}>\n                <div>\n                  <CheckboxElement\n                    name={i18n.t('forms.categories', 'categories')}\n                    checked={this.state.translationFilters.categories}\n                    description={'Categories'}\n                    checkboxClassName={styles.checkbox}\n                    onChange={this.toggleCategories}\n                  />\n                </div>\n                <div>\n                  <CheckboxElement\n                    name={i18n.t('forms.rules', 'rules')}\n                    checked={this.state.translationFilters.rules}\n                    description={'Rule Arguments'}\n                    checkboxClassName={styles.checkbox}\n                    onChange={this.toggleRules}\n                  />\n                </div>\n              </div>\n              <div className={styles.pct_complete}>{this.state.pctComplete}%</div>\n            </div>\n            <div className={styles.changeLanguage}>\n              {showChangeButton && (\n                <button onClick={this.handleChangeLanguageClick}>\n                  {i18n.t('forms.use_as_default_language', 'Use as default language')}\n                </button>\n              )}\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport Dialog from 'components/dialog/Dialog';\nimport ConnectedFlow from 'components/flow/Flow';\nimport styles from 'components/index.module.scss';\nimport ConnectedLanguageSelector from 'components/languageselector/LanguageSelector';\nimport Loading from 'components/loading/Loading';\nimport Modal from 'components/modal/Modal';\nimport { RevisionExplorer } from 'components/revisions/RevisionExplorer';\nimport { IssuesTab, IssueDetail } from 'components/issues/IssuesTab';\nimport ConfigProvider from 'config';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowEditorConfig, AnyAction } from 'flowTypes';\nimport * as React from 'react';\nimport { connect, Provider as ReduxProvider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport createStore from 'store/createStore';\nimport { ModalMessage } from 'store/editor';\nimport { Asset, Assets, AssetStore, RenderNodeMap, FlowIssueMap } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport {\n  CreateNewRevision,\n  createNewRevision,\n  DispatchWithState,\n  FetchFlow,\n  fetchFlow,\n  LoadFlowDefinition,\n  loadFlowDefinition,\n  MergeEditorState,\n  mergeEditorState,\n  onOpenNodeEditor,\n  OnOpenNodeEditor,\n  handleLanguageChange,\n  HandleLanguageChange,\n  UpdateTranslationFilters,\n  updateTranslationFilters\n} from 'store/thunks';\nimport { ACTIVITY_INTERVAL, downloadJSON, renderIf, onNextRender } from 'utils';\nimport { PopTabType } from 'config/interfaces';\nimport { TranslatorTab, TranslationBundle } from './translator/TranslatorTab';\nimport i18n from 'config/i18n';\n\nconst { default: PageVisibility } = require('react-page-visibility');\n\nexport interface FlowEditorContainerProps {\n  config: FlowEditorConfig;\n}\n\nexport interface FlowEditorStoreProps {\n  assetStore: AssetStore;\n  baseLanguage: Asset;\n  language: Asset;\n  languages: Assets;\n  simulating: boolean;\n  translating: boolean;\n  fetchingFlow: boolean;\n  definition: FlowDefinition;\n  issues: FlowIssueMap;\n  fetchFlow: FetchFlow;\n  loadFlowDefinition: LoadFlowDefinition;\n  createNewRevision: CreateNewRevision;\n  mergeEditorState: MergeEditorState;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  handleLanguageChange: HandleLanguageChange;\n  nodes: RenderNodeMap;\n  modalMessage: ModalMessage;\n  saving: boolean;\n  scrollToNode: string;\n  scrollToAction: string;\n  popped: string;\n  updateTranslationFilters: UpdateTranslationFilters;\n}\n\nconst hotStore = createStore();\n\nexport const getLabel = (): JSX.Element => {\n  return <div>testing</div>;\n};\n\n// Root container, wires up context-providers\nexport const FlowEditorContainer: React.SFC<FlowEditorContainerProps> = ({ config }) => {\n  return (\n    <ConfigProvider config={{ ...config }}>\n      <ReduxProvider store={hotStore as any}>\n        <ConnectedFlowEditor />\n      </ReduxProvider>\n    </ConfigProvider>\n  );\n};\n\nexport const contextTypes = {\n  config: fakePropType\n};\n\nexport const editorContainerSpecId = 'editor-container';\nexport const editorSpecId = 'editor';\n\n/**\n * The main editor view for editing a flow\n */\nexport class FlowEditor extends React.Component<FlowEditorStoreProps> {\n  public static contextTypes = contextTypes;\n\n  constructor(props: FlowEditorStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const { endpoints, flow, forceSaveOnLoad } = this.context.config;\n    this.props.fetchFlow(endpoints, flow, forceSaveOnLoad);\n  }\n\n  private handleDownloadClicked(): void {\n    downloadJSON(getCurrentDefinition(this.props.definition, this.props.nodes), 'definition');\n  }\n\n  private handleVisibilityChanged(visible: boolean): void {\n    this.props.mergeEditorState({\n      visible,\n      activityInterval: ACTIVITY_INTERVAL\n    });\n  }\n\n  public getAlertModal(): JSX.Element {\n    if (!this.props.modalMessage) {\n      return null;\n    }\n\n    return (\n      <Modal width=\"600px\" show={true}>\n        <Dialog\n          className={styles.alert_modal}\n          title={this.props.modalMessage.title}\n          headerClass=\"alert\"\n          buttons={{\n            primary: {\n              name: 'Ok',\n              onClick: () => {\n                this.props.mergeEditorState({ modalMessage: null });\n              }\n            }\n          }}\n        >\n          <div className={styles.alert_body}>{this.props.modalMessage.body}</div>\n        </Dialog>\n      </Modal>\n    );\n  }\n\n  public getSavingIndicator(): JSX.Element {\n    if (!this.props.saving) {\n      return null;\n    }\n\n    return (\n      <div id=\"saving_animation\" className={styles.saving}>\n        <div style={{ position: 'fixed', right: '30px', marginTop: '0px', zIndex: 1 }}>\n          <Loading units={5} color=\"#3498db\" size={7} />\n        </div>\n      </div>\n    );\n  }\n\n  public getFooter(): JSX.Element {\n    return !this.props.fetchingFlow && this.context.config.showDownload ? (\n      <div className={styles.footer}>\n        <div className={styles.download_button}>\n          <Button\n            name={i18n.t('buttons.download', 'Download')}\n            onClick={this.handleDownloadClicked}\n            type={ButtonTypes.primary}\n          />\n        </div>\n      </div>\n    ) : null;\n  }\n\n  private handleLanguageSetting(issueDetail: IssueDetail): void {\n    if (issueDetail.language) {\n      this.props.handleLanguageChange(issueDetail.language);\n    } else {\n      this.props.handleLanguageChange(this.props.baseLanguage);\n    }\n  }\n\n  public handleOpenIssue(issueDetail: IssueDetail): void {\n    this.handleLanguageSetting(issueDetail);\n    this.props.onOpenNodeEditor({\n      originalNode: issueDetail.renderObjects.renderNode,\n      originalAction: issueDetail.renderObjects.renderAction\n        ? (issueDetail.renderObjects.renderAction.action as AnyAction)\n        : null\n    });\n  }\n\n  private handleScrollToNode(node_uuid: string, action_uuid: string): void {\n    if (this.props.scrollToNode === node_uuid && this.props.scrollToAction === action_uuid) {\n      this.props.mergeEditorState({\n        scrollToNode: null,\n        scrollToAction: null\n      });\n    }\n\n    onNextRender(() => {\n      this.props.mergeEditorState({\n        scrollToNode: node_uuid,\n        scrollToAction: action_uuid\n      });\n    });\n  }\n\n  public handleScrollToTranslation(translation: TranslationBundle): void {\n    this.handleScrollToNode(translation.node_uuid, translation.action_uuid);\n  }\n\n  private handleOpenTranslation(translation: TranslationBundle): void {\n    const renderNode = this.props.nodes[translation.node_uuid];\n    const action = translation.action_uuid\n      ? renderNode.node.actions.find(action => action.uuid === translation.action_uuid)\n      : null;\n\n    this.props.onOpenNodeEditor({\n      originalNode: renderNode,\n      originalAction: action\n    });\n  }\n\n  public handleScrollToIssue(issueDetail: IssueDetail): void {\n    this.handleLanguageSetting(issueDetail);\n    const issue = issueDetail.issues[0];\n    this.handleScrollToNode(issue.node_uuid, issue.action_uuid);\n  }\n\n  private handleTabPopped(visible: boolean, tab: PopTabType): void {\n    if (visible) {\n      this.props.mergeEditorState({ popped: tab });\n    } else {\n      this.props.mergeEditorState({ popped: null });\n    }\n  }\n\n  public componentDidUpdate(prevProps: FlowEditorStoreProps): void {\n    // traceUpdate(this, prevProps);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <PageVisibility onChange={this.handleVisibilityChanged}>\n        <div\n          id={editorContainerSpecId}\n          className={this.props.translating ? styles.translating : undefined}\n          data-spec={editorContainerSpecId}\n        >\n          {this.getFooter()}\n          {this.getAlertModal()}\n          <div className={styles.editor} data-spec={editorSpecId}>\n            {renderIf(\n              Object.keys(this.props.nodes || {}).length > 0 &&\n                this.props.languages &&\n                Object.keys(this.props.languages.items).length > 0\n            )(<ConnectedLanguageSelector />)}\n\n            {this.getSavingIndicator()}\n\n            {renderIf(this.props.definition && this.props.language && !this.props.fetchingFlow)(\n              <ConnectedFlow />\n            )}\n\n            {renderIf(this.props.definition && this.props.translating && !this.props.fetchingFlow)(\n              <TranslatorTab\n                language={this.props.language}\n                languages={this.props.languages ? this.props.languages.items : {}}\n                localization={\n                  this.props.definition && this.props.language\n                    ? this.props.definition.localization[this.props.language.id]\n                    : {}\n                }\n                onTranslationClicked={this.handleScrollToTranslation}\n                onTranslationOpened={this.handleOpenTranslation}\n                onTranslationFilterChanged={this.props.updateTranslationFilters}\n                translationFilters={\n                  this.props.definition ? this.props.definition._ui.translation_filters : null\n                }\n                nodes={this.props.nodes}\n                onToggled={this.handleTabPopped}\n                popped={this.props.popped}\n              />\n            )}\n\n            <RevisionExplorer\n              loadFlowDefinition={this.props.loadFlowDefinition}\n              createNewRevision={this.props.createNewRevision}\n              assetStore={this.props.assetStore}\n              onToggled={this.handleTabPopped}\n              popped={this.props.popped}\n            />\n\n            {renderIf(Object.keys(this.props.issues).length > 0)(\n              <IssuesTab\n                issues={this.props.issues}\n                onIssueClicked={this.handleScrollToIssue}\n                onIssueOpened={this.handleOpenIssue}\n                languages={this.props.languages ? this.props.languages.items : {}}\n                nodes={this.props.nodes}\n                onToggled={this.handleTabPopped}\n                popped={this.props.popped}\n              />\n            )}\n            <div id=\"portal-root\" />\n            <div id=\"canvas-portal\" />\n          </div>\n        </div>\n      </PageVisibility>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  flowContext: { definition, issues, nodes, assetStore, baseLanguage },\n  editorState: {\n    translating,\n    language,\n    fetchingFlow,\n    simulating,\n    modalMessage,\n    saving,\n    scrollToAction,\n    scrollToNode,\n    popped\n  }\n}: AppState) => {\n  const languages = assetStore ? assetStore.languages : null;\n\n  return {\n    popped,\n    baseLanguage,\n    modalMessage,\n    saving,\n    simulating,\n    assetStore,\n    translating,\n    language,\n    fetchingFlow,\n    definition,\n    issues,\n    nodes,\n    languages,\n    scrollToAction,\n    scrollToNode\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      fetchFlow,\n      loadFlowDefinition,\n      createNewRevision,\n      mergeEditorState,\n      onOpenNodeEditor,\n      handleLanguageChange,\n      updateTranslationFilters\n    },\n    dispatch\n  );\n\nexport const ConnectedFlowEditor = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowEditor);\n\nexport default FlowEditorContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './global.module.scss';\nimport 'static/fonts/floweditor/style.css';\n\nimport FlowEditor from 'components';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport { setHTTPTimeout } from 'external';\n\n// bring in our temba-components if they aren't already registered\nvar componentsExist =\n  document.body.innerHTML.indexOf('temba-components') > -1 ||\n  document.body.innerHTML.indexOf('temba-modules') > -1;\nif (!componentsExist) {\n  import('@nyaruka/temba-components/dist/index.js').then(() => {\n    console.log('Loading temba components');\n  });\n}\n\nwindow.showFlowEditor = (ele, config) => {\n  if (config.httpTimeout) {\n    setHTTPTimeout(config.httpTimeout);\n  }\n\n  ReactDOM.render(<FlowEditor config={config} />, ele);\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
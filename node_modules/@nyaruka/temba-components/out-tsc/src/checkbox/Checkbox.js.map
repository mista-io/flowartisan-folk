{"version":3,"file":"Checkbox.js","sourceRoot":"","sources":["../../../src/checkbox/Checkbox.ts"],"names":[],"mappings":";AAAA,OAAO,EAAkB,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAE1C,MAAM,OAAO,QAAS,SAAQ,WAAW;IAAzC;;QAwDE,SAAI,GAAG,EAAE,CAAC;QAMV,aAAQ,GAAG,KAAK,CAAC;QAGjB,SAAI,GAAG,GAAG,CAAC;QAGX,kBAAa,GAAG,OAAO,CAAC;IA0D1B,CAAC;IA7HC,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAkDT,CAAC;IACJ,CAAC;IAiBM,OAAO,CAAC,OAAyB;QACtC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAC1B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACnB;YAED,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC1B;IACH,CAAC;IAEM,cAAc,CAAC,KAAU;QAC9B,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAC9B;IACH,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,KAAK,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC;IAEM,MAAM;QACX,MAAM,IAAI,GAAG,IAAI,CAAA;cACP,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;cAC5B,IAAI,CAAC,IAAI;uBACA,IAAI,CAAC,aAAa;OAClC,CAAC;QAEJ,OAAO,IAAI,CAAA;4BACa,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;;iBAEpC,IAAI,CAAC,IAAI;sBACJ,IAAI,CAAC,QAAQ;oBACf,IAAI,CAAC,MAAM;wBACP,IAAI,CAAC,UAAU;wBACf,IAAI;sBACN,IAAI,CAAC,QAAQ;mBAChB,IAAI,CAAC,WAAW;;2CAEQ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;cAC5D,IAAI;cACJ,IAAI,CAAC,KAAK;YACV,CAAC,CAAC,IAAI,CAAA,+BAA+B,IAAI,CAAC,KAAK,QAAQ;YACvD,CAAC,CAAC,IAAI;;;;KAIf,CAAC;IACJ,CAAC;CACF;AAtEC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sCACjB;AAGV;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;yCACX;AAGjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;0CACX;AAGjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sCAChB;AAGX;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+CACH","sourcesContent":["import { TemplateResult, html, css } from 'lit';\nimport { FormElement } from '../FormElement';\nimport { property } from 'lit/decorators';\n\nexport class Checkbox extends FormElement {\n  static get styles() {\n    return css`\n      :host {\n        color: var(--color-text);\n        display: inline-block;\n      }\n\n      :host([label]) {\n        width: 100%;\n      }\n\n      .wrapper.label {\n        padding: 10px;\n        border-radius: var(--curvature);\n      }\n\n      .wrapper.label:hover {\n        background: #f9f9f9;\n      }\n\n      temba-field {\n        --help-text-margin-left: 24px;\n        cursor: pointer;\n      }\n\n      .checkbox-container {\n        cursor: pointer;\n        display: flex;\n        user-select: none;\n        -webkit-user-select: none;\n      }\n\n      .checkbox-label {\n        font-family: var(--font-family);\n        padding: 0px;\n        margin-left: 8px;\n        font-weight: 300;\n        font-size: 14px;\n        line-height: 19px;\n        flex-grow: 1;\n      }\n\n      .far {\n        height: 16px;\n        margin-top: 1px;\n      }\n\n      .disabled {\n        cursor: not-allowed;\n        --icon-color: #ccc;\n      }\n    `;\n  }\n\n  @property({ type: String })\n  name = '';\n\n  @property({ type: Boolean })\n  checked: boolean;\n\n  @property({ type: Boolean })\n  disabled = false;\n\n  @property({ type: Number })\n  size = 1.2;\n\n  @property({ type: String })\n  animateChange = 'pulse';\n\n  public updated(changes: Map<string, any>) {\n    super.updated(changes);\n    if (changes.has('checked')) {\n      if (this.checked) {\n        this.setValue(1);\n      } else {\n        this.setValue('');\n      }\n\n      this.fireEvent('change');\n    }\n  }\n\n  public serializeValue(value: any): string {\n    return value;\n  }\n\n  private handleClick(): void {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n\n  public click(): void {\n    this.handleClick();\n    super.click();\n  }\n\n  public render(): TemplateResult {\n    const icon = html`<temba-icon\n      name=\"${this.checked ? 'check-' : ''}square\"\n      size=\"${this.size}\"\n      animatechange=\"${this.animateChange}\"\n    />`;\n\n    return html`\n      <div class=\"wrapper ${this.label ? 'label' : ''}\">\n        <temba-field\n          name=${this.name}\n          .helpText=${this.helpText}\n          .errors=${this.errors}\n          .widgetOnly=${this.widgetOnly}\n          .helpAlways=${true}\n          ?disabled=${this.disabled}\n          @click=${this.handleClick}\n        >\n          <div class=\"checkbox-container ${this.disabled ? 'disabled' : ''}\">\n            ${icon}\n            ${this.label\n              ? html`<div class=\"checkbox-label\">${this.label}</div>`\n              : null}\n          </div>\n        </temba-field>\n      </div>\n    `;\n  }\n}\n"]}
{"version":3,"file":"TextInput.js","sourceRoot":"","sources":["../../../src/textinput/TextInput.ts"],"names":[],"mappings":"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","sourcesContent":["import { TemplateResult, html, css } from 'lit';\nimport { property } from 'lit/decorators';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { styleMap } from 'lit-html/directives/style-map';\nimport { FormElement } from '../FormElement';\nimport { Modax } from '../dialog/Modax';\nimport { sanitize } from './helpers';\nimport { CharCount } from '../charcount/CharCount';\nimport 'lit-flatpickr';\n\nexport class TextInput extends FormElement {\n  static get styles() {\n    return css`\n      .input-container {\n        border-radius: var(--curvature-widget);\n        cursor: text;\n        background: var(--color-widget-bg);\n        border: 1px solid var(--color-widget-border);\n        transition: all ease-in-out var(--transition-speed);\n        display: flex;\n        flex-direction: row;\n        align-items: stretch;\n\n        box-shadow: var(--widget-box-shadow);\n\n        caret-color: var(--input-caret);\n      }\n\n      .clear-icon {\n        --icon-color: var(--color-text-dark-secondary);\n        cursor: pointer;\n        margin: auto;\n        padding-right: 10px;\n        line-height: 1;\n      }\n\n      .clear-icon:hover {\n        --icon-color: var(--color-text-dark);\n      }\n\n      .hidden {\n        visibility: hidden;\n        position: absolute;\n      }\n\n      .input-container:focus-within {\n        border-color: var(--color-focus);\n        background: var(--color-widget-bg-focused);\n        box-shadow: var(--widget-box-shadow-focused);\n      }\n\n      .input-container:hover {\n        background: var(--color-widget-bg-focused);\n      }\n\n      textarea {\n        height: var(--textarea-height);\n      }\n\n      .textinput {\n        padding: var(--temba-textinput-padding);\n        border: none;\n        flex: 1;\n        margin: 0;\n        background: none;\n        color: var(--color-widget-text);\n        font-family: var(--font-family);\n        font-size: var(--temba-textinput-font-size);\n        line-height: normal;\n        cursor: text;\n        resize: none;\n        font-weight: 300;\n        width: 100%;\n      }\n\n      .textinput.withdate {\n        cursor: pointer;\n      }\n\n      .textinput.withdate.loading {\n        color: #fff;\n      }\n\n      .datepicker {\n        padding: 9px;\n        margin: 0px;\n        border: 1px red solid;\n      }\n\n      .textinput:focus {\n        outline: none;\n        box-shadow: none;\n        cursor: text;\n      }\n\n      .textinput::placeholder {\n        color: var(--color-placeholder);\n        font-weight: 300;\n      }\n\n      .grow-wrap {\n        display: flex;\n        align-items: stretch;\n        width: 100%;\n      }\n\n      .grow-wrap > div {\n        border: 0px solid green;\n        width: 100%;\n        padding: var(--temba-textinput-padding);\n        flex: 1;\n        margin: 0;\n        background: none;\n        color: var(--color-widget-text);\n        font-family: var(--font-family);\n        font-size: var(--temba-textinput-font-size);\n        line-height: normal;\n        cursor: text;\n        resize: none;\n        font-weight: 300;\n        width: 100%;\n      }\n\n      .grow-wrap textarea {\n        margin-left: -100%;\n      }\n    `;\n  }\n\n  @property({ type: Boolean })\n  textarea: boolean;\n\n  @property({ type: Boolean })\n  datepicker: boolean;\n\n  @property({ type: Boolean })\n  datetimepicker: boolean;\n\n  @property({ type: String })\n  placeholder = '';\n\n  @property({ type: String })\n  value = '';\n\n  @property({ type: String })\n  name = '';\n\n  @property({ type: Boolean })\n  password: boolean;\n\n  @property({ type: Number })\n  maxlength: number;\n\n  @property({ type: Object })\n  inputElement: HTMLInputElement;\n\n  @property({ type: Object })\n  dateElement: any;\n\n  @property({ type: Boolean })\n  clearable: boolean;\n\n  @property({ type: Boolean })\n  gsm: boolean;\n\n  @property({ type: String })\n  counter: string;\n\n  // if we are still loading\n  @property({ type: Boolean })\n  loading = true;\n\n  @property({ type: Boolean })\n  submitOnEnter = true;\n\n  @property()\n  onBlur: any;\n\n  @property({ type: Boolean })\n  disabled = false;\n\n  @property({ type: Boolean })\n  autogrow = false;\n\n  counterElement: CharCount = null;\n  cursorStart = -1;\n  cursorEnd = -1;\n\n  public constructor() {\n    super();\n  }\n\n  public firstUpdated(changes: Map<string, any>) {\n    super.firstUpdated(changes);\n\n    this.dateElement = this.shadowRoot.querySelector('.datepicker');\n    if (this.dateElement) {\n      this.onDateUpdated = this.onDateUpdated.bind(this);\n      this.onDateReady = this.onDateReady.bind(this);\n    }\n\n    this.inputElement = this.shadowRoot.querySelector('.textinput');\n\n    if (changes.has('counter')) {\n      let root = this.getParentModax() as any;\n      if (root) {\n        root = root.shadowRoot;\n      }\n      if (!root) {\n        root = document;\n      }\n      this.counterElement = root.querySelector(this.counter);\n      this.counterElement.text = this.value;\n    }\n  }\n\n  public updated(changes: Map<string, any>) {\n    super.updated(changes);\n    if (changes.has('value')) {\n      this.setValues([this.value]);\n      this.fireEvent('change');\n\n      if (this.textarea && this.autogrow) {\n        const autogrow = this.shadowRoot.querySelector(\n          '.grow-wrap > div'\n        ) as HTMLDivElement;\n        autogrow.innerText = this.value + String.fromCharCode(10);\n      }\n\n      if (this.cursorStart > -1 && this.cursorEnd > -1) {\n        this.inputElement.setSelectionRange(this.cursorStart, this.cursorEnd);\n        this.cursorStart = -1;\n        this.cursorEnd = -1;\n      }\n    }\n  }\n\n  private onDateUpdated(dates: Date[], formattedDate: string) {\n    if (dates.length > 0) {\n      this.inputElement.value = this.dateElement.formatDate(\n        dates[0],\n        this.dateElement.altFormat\n      );\n\n      this.setValue(formattedDate);\n      this.inputElement.blur();\n    }\n  }\n\n  private onDateReady() {\n    window.setTimeout(() => {\n      if (this.value) {\n        this.inputElement.value = this.dateElement.formatDate(\n          this.dateElement.parseDate(this.value),\n          this.dateElement.altFormat\n        );\n        this.dateElement.setDate(this.value);\n      }\n\n      this.loading = false;\n    }, 0);\n  }\n\n  private handleClear(event: any): void {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setValue(null);\n  }\n\n  private updateValue(value: string): void {\n    const cursorStart = this.inputElement.selectionStart;\n    const cursorEnd = this.inputElement.selectionEnd;\n\n    const sanitized = this.sanitizeGSM(value);\n\n    if (sanitized !== value) {\n      this.cursorStart = cursorStart;\n      this.cursorEnd = cursorEnd;\n    }\n\n    this.value = sanitized;\n\n    if (this.textarea) {\n      this.inputElement.value = this.value;\n    }\n\n    if (this.counterElement) {\n      this.counterElement.text = value;\n    }\n  }\n\n  private sanitizeGSM(text: string): string {\n    return this.gsm ? sanitize(text) : text;\n  }\n\n  private handleChange(update: any): void {\n    if (this.disabled) {\n      return;\n    }\n    this.updateValue(update.target.value);\n    this.fireEvent('change');\n  }\n\n  private handleDateClick(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.dateElement.open();\n    this.dateElement.focus();\n  }\n\n  private handleContainerClick(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.inputElement) {\n      this.inputElement.focus();\n    } else {\n      this.handleDateClick();\n    }\n  }\n\n  private handleInput(update: any): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.updateValue(update.target.value);\n    this.setValues([this.value]);\n    this.fireEvent('input');\n  }\n\n  /** we just return the value since it should be a string */\n  public serializeValue(value: any): string {\n    return value;\n  }\n\n  public getParentModax(): Modax {\n    let parent = this as HTMLElement;\n\n    while (parent) {\n      if (parent.parentElement) {\n        parent = parent.parentElement;\n      } else {\n        parent = (parent as any).getRootNode().host;\n      }\n\n      if (!parent) {\n        return null;\n      }\n\n      if (parent.tagName == 'TEMBA-MODAX') {\n        return parent as Modax;\n      }\n    }\n  }\n\n  public getParentForm(): HTMLFormElement {\n    let parent = this as HTMLElement;\n\n    while (parent) {\n      if (parent.parentElement) {\n        parent = parent.parentElement;\n      } else {\n        parent = (parent as any).getRootNode().host;\n      }\n\n      if (!parent) {\n        return null;\n      }\n\n      if (parent.tagName === 'FORM') {\n        return parent as HTMLFormElement;\n      }\n    }\n  }\n\n  public click(): void {\n    super.click();\n    this.handleContainerClick();\n  }\n\n  // TODO make this a formelement and have contactsearch set the root\n  public render(): TemplateResult {\n    const containerStyle = {\n      height: `${this.textarea ? '100%' : 'auto'}`,\n    };\n\n    const clear =\n      this.clearable && this.inputElement && this.inputElement.value\n        ? html`<temba-icon\n            name=\"x\"\n            class=\"clear-icon\"\n            @click=${this.handleClear}\n          />`\n        : null;\n\n    let input = html`\n      <input\n        class=\"textinput\"\n        name=${this.name}\n        type=\"${this.password ? 'password' : 'text'}\"\n        maxlength=\"${ifDefined(this.maxlength)}\"\n        @change=${this.handleChange}\n        @input=${this.handleInput}\n        @blur=${this.blur}\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.key === 'Enter') {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const input = this;\n\n            if (this.submitOnEnter) {\n              const parentModax = input.getParentModax();\n              const parentForm = !parentModax ? input.getParentForm() : null;\n\n              this.value = this.values[0];\n              this.fireEvent('change');\n\n              // if we don't have something to submit then bail\n              if (!parentModax && !parentForm) {\n                return false;\n              }\n\n              input.blur();\n\n              // look for a form to submit\n              window.setTimeout(function () {\n                // first, look for a modax that contains us\n                const modax = input.getParentModax();\n                if (modax) {\n                  input.blur();\n\n                  modax.submit();\n                } else {\n                  // otherwise, just look for a vanilla submit button\n                  const form = input.getParentForm();\n\n                  if (form) {\n                    const submitButton = form.querySelector(\n                      \"input[type='submit']\"\n                    ) as HTMLInputElement;\n                    if (submitButton) {\n                      submitButton.click();\n                    } else {\n                      form.submit();\n                    }\n                  }\n                }\n              }, 10);\n              // this is needed for firefox, would be nice to\n              // find a way to do this with a callback instead\n            }\n          }\n        }}\n        placeholder=${this.placeholder}\n        .value=${this.value}\n        .disabled=${this.disabled}\n      />\n    `;\n\n    if (this.textarea) {\n      input = html`\n        <textarea\n          class=\"textinput\"\n          name=${this.name}\n          placeholder=${this.placeholder}\n          @change=${this.handleChange}\n          @input=${this.handleInput}\n          @blur=${this.blur}\n          .value=${this.value}\n          .disabled=${this.disabled}\n        ></textarea>\n      `;\n\n      if (this.autogrow) {\n        input = html` <div class=\"grow-wrap\">\n          <div></div>\n          ${input}\n        </div>`;\n      }\n    }\n\n    if (this.datepicker || this.datetimepicker) {\n      input = html`\n        <input\n          class=\"textinput withdate ${this.loading ? 'loading' : ''}\"\n          name=${this.name}\n          type=\"text\"\n          @click=${this.handleDateClick}\n          @focus=${this.handleDateClick}\n          @keydown=${(e: any) => {\n            e.preventDefault();\n          }}\n          readonly=\"true\"\n          placeholder=\"${this.placeholder}\"\n          .value=\"${this.value}\"\n          ?disabled=${this.disabled}\n        />\n        <lit-flatpickr\n          class=\"datepicker hidden\"\n          altInput\n          altFormat=\"${this.datepicker ? 'F j, Y' : 'F j, Y h:i K'}\"\n          dateFormat=\"${this.datepicker ? 'Y-m-d' : 'Y-m-d H:i'}\"\n          .onValueUpdate=${this.onDateUpdated}\n          .onReady=${this.onDateReady}\n          ?enableTime=${this.datetimepicker}\n        ></lit-flatpickr>\n      `;\n    }\n\n    return html`\n      <temba-field\n        name=${this.name}\n        .label=\"${this.label}\"\n        .helpText=\"${this.helpText}\"\n        .errors=${this.errors}\n        .widgetOnly=${this.widgetOnly}\n        .hideLabel=${this.hideLabel}\n        .disabled=${this.disabled}\n      >\n        <div\n          class=\"input-container\"\n          style=${styleMap(containerStyle)}\n          @click=${this.handleContainerClick}\n        >\n          ${input} ${clear}\n          <slot></slot>\n        </div>\n      </temba-field>\n    `;\n  }\n}\n"]}
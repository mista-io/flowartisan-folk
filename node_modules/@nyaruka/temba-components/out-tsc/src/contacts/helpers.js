import { fetchResults, getUrl, postUrl } from '../utils';
export const SCROLL_THRESHOLD = 100;
export const SIMULATED_WEB_SLOWNESS = 0;
export const MAX_CHAT_REFRESH = 10000;
export const MIN_CHAT_REFRESH = 500;
export const BODY_SNIPPET_LENGTH = 250;
export const closeTicket = (uuid) => {
    const formData = new FormData();
    formData.append('status', 'C');
    return postUrl(`/ticket/update/${uuid}/?_format=json`, formData);
};
export const fetchContact = (endpoint) => {
    return new Promise((resolve, reject) => {
        fetchResults(endpoint).then((contacts) => {
            if (contacts && contacts.length === 1) {
                resolve(contacts[0]);
            }
            else {
                reject('No contact found');
            }
        });
    });
};
let pendingRequests = [];
export const fetchContactHistory = (reset, endpoint, ticket, before = undefined, after = undefined) => {
    if (reset) {
        pendingRequests.forEach(controller => {
            controller.abort();
        });
        pendingRequests = [];
    }
    return new Promise(resolve => {
        const controller = new AbortController();
        pendingRequests.push(controller);
        let url = endpoint;
        if (before) {
            url += `&before=${before}`;
        }
        if (after) {
            url += `&after=${after}`;
        }
        if (ticket) {
            url += `&ticket=${ticket}`;
        }
        getUrl(url, controller)
            .then((response) => {
            // on success, remove our abort controller
            pendingRequests = pendingRequests.filter((controller) => {
                return response.controller === controller;
            });
            resolve(response.json);
        })
            .catch(() => {
            // canceled
        });
    });
};
export const getDisplayName = (user) => {
    if (!user) {
        return 'Somebody';
    }
    if (user.first_name && user.last_name) {
        return `${user.first_name} ${user.last_name}`;
    }
    if (user.first_name) {
        return user.first_name;
    }
    return user.email;
};
//# sourceMappingURL=helpers.js.map
{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../src/contacts/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Contact, User } from '../interfaces';\nimport { fetchResults, getUrl, postUrl, WebResponse } from '../utils';\nimport { ContactHistoryPage } from './events';\n\nexport const SCROLL_THRESHOLD = 100;\nexport const SIMULATED_WEB_SLOWNESS = 0;\nexport const MAX_CHAT_REFRESH = 10000;\nexport const MIN_CHAT_REFRESH = 500;\nexport const BODY_SNIPPET_LENGTH = 250;\n\nexport const closeTicket = (uuid: string): Promise<WebResponse> => {\n  const formData = new FormData();\n  formData.append('status', 'C');\n  return postUrl(`/ticket/update/${uuid}/?_format=json`, formData);\n};\n\nexport const fetchContact = (endpoint: string): Promise<Contact> => {\n  return new Promise<Contact>((resolve, reject) => {\n    fetchResults(endpoint).then((contacts: Contact[]) => {\n      if (contacts && contacts.length === 1) {\n        resolve(contacts[0]);\n      } else {\n        reject('No contact found');\n      }\n    });\n  });\n};\n\nlet pendingRequests: AbortController[] = [];\n\nexport const fetchContactHistory = (\n  reset: boolean,\n  endpoint: string,\n  ticket: string,\n  before: number = undefined,\n  after: number = undefined\n): Promise<ContactHistoryPage> => {\n  if (reset) {\n    pendingRequests.forEach(controller => {\n      controller.abort();\n    });\n    pendingRequests = [];\n  }\n\n  return new Promise<ContactHistoryPage>(resolve => {\n    const controller = new AbortController();\n    pendingRequests.push(controller);\n\n    let url = endpoint;\n    if (before) {\n      url += `&before=${before}`;\n    }\n\n    if (after) {\n      url += `&after=${after}`;\n    }\n\n    if (ticket) {\n      url += `&ticket=${ticket}`;\n    }\n\n    getUrl(url, controller)\n      .then((response: WebResponse) => {\n        // on success, remove our abort controller\n        pendingRequests = pendingRequests.filter(\n          (controller: AbortController) => {\n            return response.controller === controller;\n          }\n        );\n        resolve(response.json as ContactHistoryPage);\n      })\n      .catch(() => {\n        // canceled\n      });\n  });\n};\n\nexport const getDisplayName = (user: User) => {\n  if (!user) {\n    return 'Somebody';\n  }\n\n  if (user.first_name && user.last_name) {\n    return `${user.first_name} ${user.last_name}`;\n  }\n\n  if (user.first_name) {\n    return user.first_name;\n  }\n\n  return user.email;\n};\n"]}
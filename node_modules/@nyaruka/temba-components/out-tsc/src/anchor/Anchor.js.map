{"version":3,"file":"Anchor.js","sourceRoot":"","sources":["../../../src/anchor/Anchor.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAkB,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAE1C,MAAM,OAAO,MAAO,SAAQ,UAAU;IACpC,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;;KAKT,CAAC;IACJ,CAAC;IAKO,WAAW,CAAC,GAAe;QACjC,kDAAkD;QACjD,MAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEM,MAAM;QACX,OAAO,IAAI,CAAA;oBACK,IAAI,CAAC,IAAI,aAAa,IAAI,CAAC,WAAW;KACrD,CAAC;IACJ,CAAC;CACF;AAZC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oCACd","sourcesContent":["import { LitElement, TemplateResult, html, css } from 'lit';\nimport { property } from 'lit/decorators';\n\nexport class Anchor extends LitElement {\n  static get styles() {\n    return css`\n      :host {\n        cursor: pointer;\n        color: var(--color-link-primary);\n      }\n    `;\n  }\n\n  @property({ type: String })\n  href: string;\n\n  private handleClick(evt: MouseEvent) {\n    // TODO: fire event instead to be handled upstream\n    (window as any).goto(evt);\n  }\n\n  public render(): TemplateResult {\n    return html`\n      <slot href=\"${this.href}\" @click=\"${this.handleClick}\"></slot>\n    `;\n  }\n}\n"]}
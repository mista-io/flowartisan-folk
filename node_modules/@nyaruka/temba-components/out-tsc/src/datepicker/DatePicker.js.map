{"version":3,"file":"DatePicker.js","sourceRoot":"","sources":["../../../src/datepicker/DatePicker.ts"],"names":[],"mappings":";AAAA,OAAO,EAAkB,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAEzD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,eAAe,CAAC;AAGvB,IAAqB,UAAU,GAA/B,MAAqB,UAAW,SAAQ,WAAW;IAAnD;;QAsCE,gBAAW,GAAG,EAAE,CAAC;QAGjB,UAAK,GAAG,EAAE,CAAC;QAGX,SAAI,GAAG,EAAE,CAAC;IAwBZ,CAAC;IAnEC,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgCT,CAAC;IACJ,CAAC;IAcD,2DAA2D;IACpD,cAAc,CAAC,KAAU;QAC9B,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,MAAM;QACX,OAAO,IAAI,CAAA;;;;;;;;;;;KAWV,CAAC;IACJ,CAAC;CACF,CAAA;AA9BC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+CACV;AAGjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCAChB;AAGX;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wCACjB;AAGV;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gDACI;AA/CZ,UAAU;IAD9B,aAAa,CAAC,kBAAkB,CAAC;GACb,UAAU,CAoE9B;eApEoB,UAAU","sourcesContent":["import { TemplateResult, html, css } from 'lit';\nimport { property, customElement } from 'lit/decorators';\n\nimport { FormElement } from '../FormElement';\nimport 'lit-flatpickr';\n\n@customElement('temba-datepicker')\nexport default class DatePicker extends FormElement {\n  static get styles() {\n    return css`\n      .textinput {\n        padding: 9px;\n        border: none;\n        flex: 1;\n        margin: 0;\n        background: none;\n        color: var(--color-widget-text);\n        font-family: var(--font-family);\n        font-size: 13px;\n        cursor: text;\n        resize: none;\n        font-weight: 300;\n        width: 100%;\n      }\n\n      .datepicker {\n        padding: 9px;\n        margin: 0px;\n        border: 1px red solid;\n      }\n\n      .textinput:focus {\n        outline: none;\n        box-shadow: none;\n        cursor: text;\n      }\n\n      .textinput::placeholder {\n        color: var(--color-placeholder);\n        font-weight: 300;\n      }\n    `;\n  }\n\n  @property({ type: String })\n  placeholder = '';\n\n  @property({ type: String })\n  value = '';\n\n  @property({ type: String })\n  name = '';\n\n  @property({ type: Object })\n  inputElement: HTMLInputElement;\n\n  /** we just return the value since it should be a string */\n  public serializeValue(value: any): string {\n    return value;\n  }\n\n  public render(): TemplateResult {\n    return html`\n      <lit-flatpickr\n        class=\"textinput\"\n        id=\"my-date-picker\"\n        altInput\n        altFormat=\"F j, Y\"\n        dateFormat=\"Y-m-d H:i\"\n        enableTime: true\n      >\n        <input class=\"textinput\"></input>\n      </lit-flatpickr>\n    `;\n  }\n}\n"]}
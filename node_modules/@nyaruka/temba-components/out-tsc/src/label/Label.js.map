{"version":3,"file":"Label.js","sourceRoot":"","sources":["../../../src/label/Label.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAkB,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AAGzD,IAAqB,KAAK,GAA1B,MAAqB,KAAM,SAAQ,UAAU;IAC3C,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAkDT,CAAC;IACJ,CAAC;IAuBM,MAAM;QACX,MAAM,UAAU,GACd,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS;YACpC,CAAC,CAAC;gBACE,UAAU,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE;gBACrC,KAAK,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE;aAC3B;YACH,CAAC,CAAC,EAAE,CAAC;QAET,OAAO,IAAI,CAAA;;uBAEQ,UAAU,CAAC;YACxB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;gBACM,QAAQ,CAAC,UAAU,CAAC;;;;;;KAM/B,CAAC;IACJ,CAAC;CACF,CAAA;AA9CC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACT;AAGnB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;sCACX;AAGjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACT;AAGnB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oCACb;AAGf;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;mCACd;AAGd;IADC,QAAQ,EAAE;8CACa;AAGxB;IADC,QAAQ,EAAE;wCACO;AA1EC,KAAK;IADzB,aAAa,CAAC,aAAa,CAAC;GACR,KAAK,CAsGzB;eAtGoB,KAAK","sourcesContent":["import { LitElement, TemplateResult, html, css } from 'lit';\nimport { property, customElement } from 'lit/decorators';\nimport { getClasses } from '../utils';\nimport { styleMap } from 'lit-html/directives/style-map';\n\n@customElement('temba-label')\nexport default class Label extends LitElement {\n  static get styles() {\n    return css`\n      :host {\n        display: inline-block;\n      }\n\n      .mask {\n        padding: 3px 6px;\n        border-radius: var(--curvature);\n      }\n\n      .label.clickable .mask:hover {\n        background: rgb(0, 0, 0, 0.05);\n      }\n\n      .label {\n        border-radius: 2px;\n        font-size: 80%;\n        font-weight: 400;\n        border-radius: var(--curvature);\n        background: tomato;\n        color: #fff;\n        text-shadow: 0 0.04em 0.04em rgba(0, 0, 0, 0.35);\n      }\n\n      .primary {\n        background: var(--color-label-primary);\n        color: var(--color-label-primary-text);\n      }\n\n      .secondary {\n        background: var(--color-label-secondary);\n        color: var(--color-label-secondary-text);\n        text-shadow: none;\n      }\n\n      .light {\n        background: var(--color-overlay-light);\n        color: var(--color-overlay-light-text);\n        text-shadow: none;\n      }\n\n      .dark {\n        background: var(--color-overlay-dark);\n        color: var(--color-overlay-dark-text);\n        text-shadow: none;\n      }\n\n      .clickable {\n        cursor: pointer;\n      }\n    `;\n  }\n\n  @property({ type: Boolean })\n  clickable: boolean;\n\n  @property({ type: Boolean })\n  primary: boolean;\n\n  @property({ type: Boolean })\n  secondary: boolean;\n\n  @property({ type: Boolean })\n  light: boolean;\n\n  @property({ type: Boolean })\n  dark: boolean;\n\n  @property()\n  backgroundColor: string;\n\n  @property()\n  textColor: string;\n\n  public render(): TemplateResult {\n    const labelStyle =\n      this.backgroundColor && this.textColor\n        ? {\n            background: `${this.backgroundColor}`,\n            color: `${this.textColor}`,\n          }\n        : {};\n\n    return html`\n      <div\n        class=\"label ${getClasses({\n          clickable: this.clickable,\n          primary: this.primary,\n          secondary: this.secondary,\n          light: this.light,\n          dark: this.dark,\n        })}\"\n        style=${styleMap(labelStyle)}\n      >\n        <div class=\"mask\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n"]}
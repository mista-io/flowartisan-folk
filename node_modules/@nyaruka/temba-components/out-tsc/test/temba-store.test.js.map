{"version":3,"file":"temba-store.test.js","sourceRoot":"","sources":["../../test/temba-store.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AAC3C,OAAO,cAAc,CAAC;AAEtB,MAAM,WAAW,GAAG,KAAK,EAAE,GAAW,EAAkB,EAAE;IACxD,MAAM,KAAK,GAAG,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAU,CAAC;IAC5C,MAAM,KAAK,CAAC,YAAY,CAAC;IACzB,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;QAC1B,MAAM,KAAK,GAAG,MAAM,WAAW,CAAC,6BAA6B,CAAC,CAAC;QAC/D,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,KAAK,GAAU,MAAM,WAAW,CACpC,yEAAyE,CAC1E,CAAC;QACF,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,KAAK,GAAU,MAAM,WAAW,CACpC,uEAAuE,CACxE,CAAC;QACF,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;QACtB,MAAM,KAAK,GAAU,MAAM,WAAW,CACpC,qEAAqE,CACtE,CAAC;QAEF,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert, fixture } from '@open-wc/testing';\nimport { Store } from '../src/store/Store';\nimport './utils.test';\n\nconst createStore = async (def: string): Promise<Store> => {\n  const store = (await fixture(def)) as Store;\n  await store.httpComplete;\n  return store;\n};\n\ndescribe('temba-store', () => {\n  it('is defined', async () => {\n    const store = await createStore('<temba-store></temba-store>');\n    assert.instanceOf(store, Store);\n  });\n\n  it('completion schema', async () => {\n    const store: Store = await createStore(\n      \"<temba-store completion='/test-assets/store/editor.json'></temba-store>\"\n    );\n    assert.equal(store.getCompletionSchema().types.length, 16);\n    assert.equal(store.getFunctions().length, 80);\n  });\n\n  it('globals', async () => {\n    const store: Store = await createStore(\n      \"<temba-store globals='/test-assets/store/globals.json'></temba-store>\"\n    );\n    assert.equal(store.getKeyedAssets().globals.length, 2);\n  });\n\n  it('fields', async () => {\n    const store: Store = await createStore(\n      \"<temba-store fields='/test-assets/store/fields.json'></temba-store>\"\n    );\n\n    assert.equal(store.getKeyedAssets().fields.length, 5);\n  });\n});\n"]}
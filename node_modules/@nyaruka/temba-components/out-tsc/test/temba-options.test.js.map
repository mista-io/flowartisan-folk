{"version":3,"file":"temba-options.test.js","sourceRoot":"","sources":["../../test/temba-options.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAE3C,OAAO,EAAE,gBAAgB,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAElE,MAAM,MAAM,GAAG;IACb,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7B,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE;CAC7B,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,QAAa,EAAE,EAAU,EAAE;IACxD,OAAO,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,GAAW,EAAE,EAAE;IACjD,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACjD,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAClD,OAAO,CAAC,MAAM,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,CAAY,CAAC;AACzD,CAAC,CAAC;AAEF,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,OAAO,GAAY,MAAM,aAAa,CAC1C,cAAc,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAC/C,CAAC;QACF,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC;QACzB,MAAM,OAAO,CAAC,cAAc,CAAC;QAC7B,MAAM,gBAAgB,CAAC,eAAe,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { fixture } from '@open-wc/testing';\nimport { Options } from '../src/options/Options';\nimport { assertScreenshot, getClip, getHTML } from './utils.test';\n\nconst colors = [\n  { name: 'Red', value: '0' },\n  { name: 'Green', value: '1' },\n  { name: 'Blue', value: '2' },\n];\n\nexport const getOptionsHTML = (attrs: any = {}): string => {\n  return getHTML('temba-options', attrs);\n};\n\nexport const createOptions = async (def: string) => {\n  const parentNode = document.createElement('div');\n  parentNode.setAttribute('style', 'width: 250px;');\n  return (await fixture(def, { parentNode })) as Options;\n};\n\ndescribe('temba-options-screenshots', () => {\n  it('renders block mode', async () => {\n    const options: Options = await createOptions(\n      getOptionsHTML({ block: true, visible: true })\n    );\n    options.options = colors;\n    await options.updateComplete;\n    await assertScreenshot('options/block', getClip(options));\n  });\n});\n"]}
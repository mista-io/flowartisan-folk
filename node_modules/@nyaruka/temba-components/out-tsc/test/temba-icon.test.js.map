{"version":3,"file":"temba-icon.test.js","sourceRoot":"","sources":["../../test/temba-icon.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAC1D,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAE5C,MAAM,GAAG,GAAG,YAAY,CAAC;AACzB,MAAM,OAAO,GAAG,KAAK,EAAE,QAAa,EAAE,EAAE,EAAE;IACxC,OAAO,CAAC,MAAM,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAe,CAAC;AACxD,CAAC,CAAC;AAEF,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE;IACjB,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;QAClD,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from '@open-wc/testing';\nimport { VectorIcon } from '../src/vectoricon/VectorIcon';\nimport { getComponent } from './utils.test';\n\nconst TAG = 'temba-icon';\nconst getIcon = async (attrs: any = {}) => {\n  return (await getComponent(TAG, attrs)) as VectorIcon;\n};\n\ndescribe(TAG, () => {\n  it('can be created', async () => {\n    const icon = await getIcon({ name: 'checkmark' });\n    assert.instanceOf(icon, VectorIcon);\n  });\n});\n"]}